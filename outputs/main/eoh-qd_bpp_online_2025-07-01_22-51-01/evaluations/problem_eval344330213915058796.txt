def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority score for each bin based on a combination of remaining capacity and wasted space, prioritizing bins that can fit the item well and minimize wasted space.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority = cap*item-wasted_space # Higher is better: prefers bins that fit the item well without wasting a lot of space
            priorities.append(priority)
        else:
            priorities.append(-1) # Assign low priority to bins that cannot fit the item

    return priority
