def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority based on a combination of remaining capacity fit and a penalty for bins that are too empty.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            fit_score = cap - item 
            empty_penalty = 0
            if cap > item * 2: 
                empty_penalty = (cap - item * 2) * 0.1 
            priority = 1 / (fit_score + 1 + empty_penalty)  
        else:
            priority = -1  

        priorities.append(priority)
    return priority
