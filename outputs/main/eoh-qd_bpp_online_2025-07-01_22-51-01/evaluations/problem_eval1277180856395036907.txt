def priority_v2(item, bins_remain_cap):
  """{Assigns a priority score to each bin based on a combination of remaining capacity and a penalty for small remaining capacity after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      rem_after_packing = cap - item
      priority_score = cap + (1 / (rem_after_packing + 0.0001)) #avoid division by zero
      priority.append(priority_score)
    else:
      priority.append(-1)  # Bin is not suitable
  return priority
