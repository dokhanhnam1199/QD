def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a weighted combination of remaining capacity and the ratio of item size to remaining capacity, favoring bins with sufficient space and a good fit.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      fit_ratio = item / cap
      priority = (cap * 0.5) + (fit_ratio * 0.5)
      priorities.append(priority)
    else:
      priorities.append(-1) 
  return priority
