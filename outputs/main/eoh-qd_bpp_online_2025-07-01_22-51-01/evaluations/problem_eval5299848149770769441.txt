def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on a combination of remaining capacity and the wasted space if the item is placed in the bin, favoring bins with remaining capacity close to the item size while avoiding excessive waste.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority_score = cap + 1.0 / (wasted_space + 1)
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
