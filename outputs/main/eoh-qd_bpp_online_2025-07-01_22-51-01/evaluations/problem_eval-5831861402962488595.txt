def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority score to each bin based on how closely its remaining capacity matches the item's size, favoring bins that can accommodate the item with minimal wasted space while also considering the overall fullness of the bin.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority = (1 / (cap - item + 0.0001)) + (1 - (cap / sum(bins_remain_cap)))
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
