```python
import numpy as np
import scipy.sparse
from scipy.sparse.csgraph import dijkstra

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    """TSP heuristic: Combines inverse distance, shortest paths, degree bias and controlled randomness."""
    n = distance_matrix.shape[0]
    heuristic_matrix = np.zeros_like(distance_matrix, dtype=float)

    # 1. Inverse distance
    inverse_distance = 1 / (distance_matrix + 1e-9)

    # 2. Shortest path estimate (Dijkstra)
    graph = scipy.sparse.csr_matrix(distance_matrix)
    shortest_paths = dijkstra(graph, directed=False, indices=range(n))

    # 3. Degree bias (adaptive penalty)
    degree_penalty = np.zeros((n, n))
    avg_degree = 0
    for i in range(n):
        degree_i = np.sum(inverse_distance[i, :]) - inverse_distance[i, i]
        avg_degree += degree_i
    avg_degree /= n

    for i in range(n):
        for j in range(n):
            if i != j:
                degree_i = np.sum(inverse_distance[i, :]) - inverse_distance[i, i]
                degree_j = np.sum(inverse_distance[j, :]) - inverse_distance[j, j]
                # Adaptive degree penalty: only penalize if degree > avg
                penalty_i = max(1, avg_degree / (degree_i + 1e-9))
                penalty_j = max(1, avg_degree / (degree_j + 1e-9))
                degree_penalty[i, j] = penalty_i * penalty_j
            else:
                degree_penalty[i, j] = 0

    # 4. Combine heuristics
    heuristic_matrix = inverse_distance * degree_penalty / (shortest_paths + 1e-9)

    # 5. Add controlled randomness
    temperature = 0.01  # Tunable parameter
    randomness = np.random.rand(n, n) * temperature
    heuristic_matrix += randomness

    # 6. Normalize
    max_heuristic = np.max(heuristic_matrix)
    heuristic_matrix /= max_heuristic

    #7. Sparsification (percentile-based)
    threshold = np.percentile(heuristic_matrix, 75)  # Keep top 25%
    heuristic_matrix[heuristic_matrix < threshold] = 0

    return heuristic_matrix
```
