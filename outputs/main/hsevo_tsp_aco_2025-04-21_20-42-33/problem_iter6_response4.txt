```python
import numpy as np
import scipy.sparse
from scipy.sparse.csgraph import dijkstra

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    """TSP heuristic: Combines inverse distance, adaptive degree bias, shortest paths, and pheromone-inspired updates."""
    n = distance_matrix.shape[0]
    heuristic_matrix = np.zeros_like(distance_matrix, dtype=float)

    # Inverse distance
    inverse_distance = 1 / (distance_matrix + 1e-9)

    # Shortest path estimate (Dijkstra)
    graph = scipy.sparse.csr_matrix(distance_matrix)
    shortest_paths = dijkstra(graph, directed=False, indices=range(n))

    # Adaptive degree bias
    degree_penalty = np.ones((n, n))
    degrees = np.sum(inverse_distance, axis=1)
    avg_degree = np.mean(degrees)

    for i in range(n):
        for j in range(n):
            if i != j:
                penalty_i = max(0.1, avg_degree / (degrees[i] + 1e-9))  # Avoid zero division and ensure a minimum penalty
                penalty_j = max(0.1, avg_degree / (degrees[j] + 1e-9))
                degree_penalty[i, j] = penalty_i * penalty_j
            else:
                degree_penalty[i, j] = 0

    # Pheromone-inspired component (initialized to a small value)
    pheromone_influence = np.ones_like(distance_matrix) * 0.01


    # Heuristic combination (weighted sum)
    alpha = 0.5  # Weight for distance/degree
    beta = 0.3   # Weight for shortest path
    gamma = 0.2  # Weight for pheromone

    heuristic_matrix = (alpha * inverse_distance * degree_penalty) + \
                       (beta * (1 / (shortest_paths + 1e-9))) + \
                       (gamma * pheromone_influence)


    # Sparsification (more aggressive)
    threshold = np.percentile(heuristic_matrix[heuristic_matrix > 0], 40) # Increase sparsification
    heuristic_matrix[heuristic_matrix < threshold] = 0



    # Normalize
    max_heuristic = np.max(heuristic_matrix)
    if max_heuristic > 0:
        heuristic_matrix /= max_heuristic

    return heuristic_matrix
```
