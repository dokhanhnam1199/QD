```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    bin_capacity = np.max(bins_remain_cap)

    # 1. Feasibility: Infeasible bins get a very large negative priority.
    feasible_bins = bins_remain_cap >= item
    priorities[~feasible_bins] = -1e9

    # 2. Best Fit: Prefer bins where the remaining capacity after placement is minimal
    remaining_after_fit = bins_remain_cap - item
    remaining_after_fit[~feasible_bins] = bin_capacity * 2  # Set to large value for infeasible bins
    best_fit_priority = -remaining_after_fit / bin_capacity # Normalize & invert: smaller remaining is better
    priorities += best_fit_priority

    # 3. Fragmentation Penalty: Heavily penalize bins that will create a very small fragment.
    fragment_threshold = 0.1
    fragment_penalty = 0.7
    fragment_mask = feasible_bins & (remaining_after_fit > 0) & (remaining_after_fit / bin_capacity <= fragment_threshold)
    priorities[fragment_mask] -= fragment_penalty

    # 4. Reward Near-Perfect Fit: Significant bonus for near perfect fits
    near_perfect_fit_threshold = 0.05
    near_perfect_fit_bonus = 0.6
    near_perfect_mask = feasible_bins & (remaining_after_fit > 0) & (remaining_after_fit / bin_capacity <= near_perfect_fit_threshold)
    priorities[near_perfect_mask] += near_perfect_fit_bonus

    # 5. Small Item Penalty: Slightly discourage placing very small items into partially filled bins.
    small_item_threshold = 0.2
    small_item_penalty = 0.15
    small_item = item / bin_capacity < small_item_threshold
    if small_item:
        partially_filled_bins = feasible_bins & (bins_remain_cap < bin_capacity)
        priorities[partially_filled_bins] -= small_item_penalty

    return priorities
```
