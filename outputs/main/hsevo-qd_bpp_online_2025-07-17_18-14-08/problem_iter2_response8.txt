```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio, near-full bonus, and capacity considerations."""
    epsilon = 1e-9
    priorities = np.full(bins_remain_cap.shape, -np.inf)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    fill_ratios = np.zeros_like(bins_remain_cap, dtype=float)
    fill_ratios[valid_bins] = item / bins_remain_cap[valid_bins]

    # Fill ratio priority
    priorities[valid_bins] = fill_ratios[valid_bins]

    # Near-full bonus
    remaining_after_fit = bins_remain_cap - item
    nearly_full_bonus = np.exp(-10 * remaining_after_fit) * valid_bins
    priorities += nearly_full_bonus

    # Capacity consideration: sqrt of remaining capacity
    capacity_priority = np.sqrt(bins_remain_cap)
    priorities[valid_bins] *= capacity_priority[valid_bins]

    return priorities
```
