{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Combines waste, fit, and capacity with adaptive weighting for bin selection.\"\"\"\n\n    valid_bins = bins_remain_cap >= item\n    priorities = np.full(bins_remain_cap.shape, -np.inf)\n\n    if np.any(valid_bins):\n        remaining_capacities = bins_remain_cap[valid_bins]\n\n        # Waste Score\n        waste = remaining_capacities - item\n        waste_score = 1 / (waste + 1e-9)\n\n        # Fit Score\n        fit_score = np.exp(-(remaining_capacities - item)**2 / (2 * (item/2)**2))\n\n        # Capacity Utilization\n        capacity_utilization = remaining_capacities / np.max(bins_remain_cap)\n\n        # Adaptive Weighting\n        item_ratio = item / np.max(bins_remain_cap)\n        waste_weight = 0.5 if item_ratio < 0.4 else 0.3\n        fit_weight = 0.3 if item_ratio < 0.4 else 0.5\n        capacity_weight = 0.2\n\n        combined_score = (waste_weight * waste_score +\n                          fit_weight * fit_score +\n                          capacity_weight * (1 - capacity_utilization))\n\n        priorities[valid_bins] = combined_score\n    else:\n        valid_bins = bins_remain_cap > 0\n        if np.any(valid_bins):\n          remaining_capacities = bins_remain_cap[valid_bins]\n          capacity_score = remaining_capacities / np.max(bins_remain_cap)\n          priorities[valid_bins] = capacity_score / 10\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}