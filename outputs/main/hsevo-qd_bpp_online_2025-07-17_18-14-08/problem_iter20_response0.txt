```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, gaussian fit score, and capacity utilization."""

    valid_bins = bins_remain_cap > 0
    priorities = np.full(bins_remain_cap.shape, -np.inf)

    if np.any(valid_bins):
        remaining_capacities = bins_remain_cap[valid_bins]

        waste = np.maximum(0, remaining_capacities - item)
        waste_score = 1 / (waste + 1e-9)

        fit_score = np.exp(-(remaining_capacities - item)**2 / (2 * (item/3)**2))

        capacity_utilization = 1 - (remaining_capacities / np.max(bins_remain_cap))

        combined_score = 0.5 * waste_score + 0.4 * fit_score + 0.1 * capacity_utilization

        priorities[valid_bins] = combined_score

    return priorities
```
