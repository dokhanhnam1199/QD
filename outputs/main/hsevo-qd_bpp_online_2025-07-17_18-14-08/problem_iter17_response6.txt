```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities, combining waste and fit with item-size adaptive weights."""
    valid_bins = bins_remain_cap > 0
    priorities = np.full(bins_remain_cap.shape, -np.inf)

    if np.any(valid_bins):
        remaining_capacities = bins_remain_cap[valid_bins]
        
        waste = np.maximum(0, remaining_capacities - item)
        waste_score = 1 / (waste + 1e-9)

        fit_score = np.exp(-(remaining_capacities - item)**2 / (2 * (item / 2)**2))

        avg_bin_capacity = np.mean(bins_remain_cap[bins_remain_cap > 0]) if np.any(bins_remain_cap > 0) else 1
        item_ratio = item / avg_bin_capacity if avg_bin_capacity > 0 else 0

        if item_ratio < 0.2:
            w_waste, w_fit = 0.3, 0.7
        elif item_ratio > 0.8:
            w_waste, w_fit = 0.7, 0.3
        else:
            w_waste, w_fit = 0.5, 0.5

        combined_score = w_waste * waste_score + w_fit * fit_score
        priorities[valid_bins] = combined_score

    return priorities
```
