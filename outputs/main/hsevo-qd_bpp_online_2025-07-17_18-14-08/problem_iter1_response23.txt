```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Higher priority means we prefer adding the item to that bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Avoid division by zero
    valid_bins = bins_remain_cap > 0

    if not np.any(valid_bins):
        return priorities # All bins are full or invalid

    # 1. Immediate Fit: Bins that can fit the item perfectly or nearly perfectly
    perfect_fit = np.abs(bins_remain_cap - item) < 1e-6  # Using a small tolerance
    priorities[perfect_fit] += 100  # High priority for perfect fits

    # 2. Best Fit: Bins with the smallest remaining capacity after adding the item (that still fits)
    fits = bins_remain_cap >= item
    if np.any(fits):
        remaining_after_fit = bins_remain_cap[fits] - item
        best_fit_idx = np.argmin(remaining_after_fit)
        #Need to translate from the filtered index back to the index in the whole array
        indices = np.where(fits)[0]
        best_fit_full_idx = indices[best_fit_idx]
        priorities[best_fit_full_idx] += 50 # Medium-High priority

    # 3. Consider bin utilization
    utilization_ratio = item / bins_remain_cap[valid_bins]
    priorities[valid_bins] += utilization_ratio * 10  # Medium Priority, prioritize higher utilization

    # 4. Avoid bins that barely fit the item
    nearly_full = (bins_remain_cap > item) & (bins_remain_cap < item * 1.1) #avoid creating near empty bins.
    priorities[nearly_full] -= 20 # Slightly negative priority

    # 5. Penalize bins that don't fit at all (makes them less likely to be chosen if there are multiple options and the other bonuses balance out)
    no_fit = bins_remain_cap < item
    priorities[no_fit] -= 1  #Very slightly negative

    return priorities
```
