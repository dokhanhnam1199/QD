```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This version prioritizes bins that are a "good fit" for the item,
    meaning the item fills a significant portion of the bin's remaining
    capacity without leaving excessive wasted space.  It also introduces
    a small penalty for bins that are almost completely full, as filling
    them could lead to inefficient packing of subsequent items.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    for i, capacity in enumerate(bins_remain_cap):
        if capacity >= item:
            # Calculate fill ratio:  How much of the bin will be filled?
            fill_ratio = item / capacity

            # Base priority: Higher ratio (item fills more of the bin) is better.
            priorities[i] = fill_ratio

            # "Sweet spot" bonus: Give a bonus for fill ratios near a target
            #  For example, aiming to fill roughly 75% of the bin
            target_ratio = 0.75
            bonus_strength = 0.5  # Adjust this to control the bonus effect
            ratio_difference = abs(fill_ratio - target_ratio)
            priorities[i] += bonus_strength * np.exp(-ratio_difference * 10) # gaussian peak centered around target_ratio

            # Penalty for almost-full bins (discourages extremely small gaps)
            if capacity - item < 0.1 * item: #Less than 10% of item left in the bin
                priorities[i] -= 0.2 # Adjust this to control the penalty

            #Extra Bonus if this fills the bin *almost* entirely
            if capacity - item <= 0.01 * item:
              priorities[i] += 1 # incentivize perfect fit.
        else:
            priorities[i] = -np.inf  # Impossible to place the item

    return priorities
```
