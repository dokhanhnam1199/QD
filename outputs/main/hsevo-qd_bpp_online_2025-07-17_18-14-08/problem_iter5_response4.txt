```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score and capacity utilization for bin selection."""

    valid_bins = bins_remain_cap > 0
    priorities = np.full(bins_remain_cap.shape, -np.inf)

    if np.any(valid_bins):
        remaining_capacities = bins_remain_cap[valid_bins]

        # Fit Score (Gaussian-like, penalizing very tight or loose fits)
        fit_score = np.exp(-(remaining_capacities - item)**2 / (2 * (item / 2)**2))

        # Capacity Utilization Score (Encourage filling bins)
        capacity_utilization = 1 - (remaining_capacities / np.max(bins_remain_cap))

        combined_score = 0.7 * fit_score + 0.3 * capacity_utilization

        priorities[valid_bins] = combined_score

    return priorities
```
