```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority function for online Bin Packing using adaptive exponential decay.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1-D array of remaining capacities of currently open bins.

    Returns
    -------
    np.ndarray
        Priority scores for each bin that sum to 1 over feasible bins.
        Infeasible bins receive a score of 0.
    """
    caps = np.asarray(bins_remain_cap, dtype=float)
    feasible = caps >= item
    if not np.any(feasible):
        return np.zeros_like(caps)

    waste = caps - item
    waste = np.where(feasible, waste, np.inf)

    mean_waste = waste[feasible].mean()
    lam = 1.0 / (mean_waste + 1e-12)

    raw = np.exp(-lam * waste)
    raw = np.where(feasible, raw, 0.0)

    total = raw.sum()
    if total > 0.0:
        return raw / total
    else:
        return np.where(feasible, 1.0 / feasible.sum(), 0.0)
```
