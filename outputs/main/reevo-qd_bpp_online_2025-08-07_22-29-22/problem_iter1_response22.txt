```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Worst‑Fit priority function for online Bin Packing.

    Selects the bin that has the largest remaining capacity among those
    capable of accommodating the item.  Infeasible bins receive a very
    low priority.

    Args:
        item: Size of the item to be placed.
        bins_remain_cap: 1‑D array containing remaining capacities of each bin.

    Returns:
        1‑D float array of the same shape with priority scores.
        The bin with the highest priority will be chosen.
    """
    # Ensure working in float to allow -inf
    caps = bins_remain_cap.astype(float, copy=False)

    # Define minimum score for infeasible bins
    infeasible_score = -np.inf

    # Start with infeasible score for all bins
    priorities = np.full_like(caps, infeasible_score, dtype=float)

    # Feasible bins receive their remaining capacity as priority
    fits = caps >= item
    priorities[fits] = caps[fits]

    return priorities
```
