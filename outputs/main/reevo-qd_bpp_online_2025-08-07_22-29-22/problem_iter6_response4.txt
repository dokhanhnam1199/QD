```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Simple deterministic priority for online bin packing.

    - Bins that cannot accommodate the item receive -inf.
    - Bins where the item fits exactly (within a tiny tolerance) receive the highest
      priority (0.0).
    - Among the remaining feasible bins, a higher priority is assigned to those
      leaving less unused space (i.e., smaller leftover capacity).

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities of the existing bins.

    Returns
    -------
    np.ndarray
        Priority scores for each bin. The caller should select the bin with the
        maximum priority.
    """
    # Compute remaining capacity after placing the item in each bin
    leftover = bins_remain_cap - item

    # Tolerance for floating‑point comparisons (treat very small leftovers as exact fits)
    eps = 1e-9

    # Vectorized priority assignment:
    #   infeasible bins -> -inf
    #   exact‑fit bins   -> 0.0 (highest finite priority)
    #   feasible non‑exact bins -> -leftover (larger priority for smaller leftover)
    priorities, dtype=float)  # Ensure float dtype
    return priorities.astype(float)
```
