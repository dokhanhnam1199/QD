```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Deterministic priority function for online Bin Packing.

    Returns a higher score for bins that will have the smallest remaining slack
    after placing the item. Bins that cannot accommodate the item receive a
    priority of -inf, ensuring they are never selected.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities of each currently open bin.

    Returns
    -------
    np.ndarray
        Priority scores for each bin (same shape as ``bins_remain_cap``).
        Higher values indicate more preferred bins.
    """
    # Convert to a NumPy array for vectorised operations
    caps = np.asarray(bins_remain_cap, dtype=float)

    # Slack after placing the item
    slack = caps - item

    # Infeasible bins (negative slack) get -inf priority
    infeasible = slack < 0
    priorities = np.where(infeasible, -np.inf, -slack)  # smaller slack → larger priority

    return priorities
```
