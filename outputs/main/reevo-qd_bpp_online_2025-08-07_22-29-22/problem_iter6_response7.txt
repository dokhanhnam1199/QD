```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Exact‑fit first priority for online Bin Packing.

    Each bin receives a priority score. The bin that can accommodate the item
    and leaves the least remaining slack receives the highest score.
    Ties are broken with an infinitesimal random perturbation.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities of existing bins.

    Returns
    -------
    np.ndarray
        Priority scores for each bin (same shape as bins_remain_cap).
    """
    caps = np.asarray(bins_remain_cap, dtype=float)

    if caps.size == 0:
        return np.array([], dtype=float)

    # Slack after placing the item
    slack = caps - item

    # Initialize priorities with -inf for infeasible bins
    priorities = np.full(caps.shape, -np.inf, dtype=float)

    # Feasible bins: higher priority for smaller slack
    feasible = slack >= 0
    priorities[feasible] = -slack[feasible]

    # Add infinitesimal noise to break ties without changing the ordering
    if feasible.any():
        noise = np.random.rand(feasible.sum()) * 1e-9
        priorities[feasible] += noise

    return priorities
```
