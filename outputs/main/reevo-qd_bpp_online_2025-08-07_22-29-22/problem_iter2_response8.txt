```python
import numpy as np

_rng = np.random.default_rng()

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority function for online Bin Packing that prioritizes exact fits,
    then bins that leave the least leftover space, and breaks ties with
    a tiny random perturbation.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array with the remaining capacity of each existing bin.

    Returns
    -------
    np.ndarray
        Array of priority scores for each bin.  The bin with the largest
        score should be selected for packing the item.
    """
    eps = 1e-9          # tolerance for floating‑point comparisons
    eps_noise = 1e-6    # magnitude of random tie‑breaker

    # Remaining capacity after hypothetically placing the item
    leftover = bins_remain_cap - item

    # Base priority: 0 for exact fit, otherwise negative leftover
    base = np.where(
        leftover < -eps,           # cannot fit
        -np.inf,
        np.where(
            np.abs(leftover) <= eps,
            0.0,
            -leftover
        )
    )

    # Small random noise to break ties
    noise = _rng.uniform(-eps_noise, eps_noise, size=base.shape)

    # Final priority
    priority = base + noise

    return priority.astype(float)
```
