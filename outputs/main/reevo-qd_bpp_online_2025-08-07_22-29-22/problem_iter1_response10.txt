```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority scores for First‑Fit online bin packing.

    The function assigns a higher score to earlier bins among those that can
    accommodate ``item``. Bins that cannot hold the item receive a very low
    (negative‑infinity) score so they are never selected.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D array of remaining capacities for each bin.

    Returns:
        A NumPy array of the same shape as ``bins_remain_cap`` containing
        priority scores. The caller should choose the bin with the highest
        priority (e.g. ``np.argmax(priority_v2(item, caps))``).
    """
    # Ensure the input is a NumPy array (float dtype for consistency).
    caps = np.asarray(bins_remain_cap, dtype=float)

    # Mask of bins that have enough remaining capacity for the item.
    feasible = caps >= item

    # Base priority that favours earlier bins:
    # first bin gets 0, second -1, third -2, …
    base_priority = -np.arange(caps.shape[0], dtype=float)

    # Assign -inf to bins that cannot accommodate the item.
    priorities = np.where(feasible, base_priority, -np.inf)

    return priorities
```
