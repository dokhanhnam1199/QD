```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Random Fit priority function for the online Bin Packing Problem.

    This strategy assigns a random priority to each bin that can accommodate the item.
    Infeasible bins (remaining capacity < item size) receive a priority of -inf so they
    are never selected. The bin with the highest random priority among the feasible
    ones will be chosen.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1â€‘D array containing the remaining capacity of each bin.

    Returns:
        An array of the same shape as ``bins_remain_cap`` containing priority scores.
    """
    # Feasibility mask: True where the bin can fit the item
    feasible = bins_remain_cap >= item

    # Random scores for all bins
    rand_scores = np.random.rand(bins_remain_cap.size)

    # Use -inf for infeasible bins to ensure they are never selected
    priorities = np.where(feasible, rand_scores, -np.inf)

    return priorities
```
