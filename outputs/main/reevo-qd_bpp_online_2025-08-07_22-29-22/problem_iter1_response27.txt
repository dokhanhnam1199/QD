```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority for the Random Fit strategy.

    Assigns a random score to each bin that can accommodate the item
    (i.e. remaining capacity >= item). All other bins receive -inf,
    ensuring that only feasible bins can be chosen. The highest score
    will thus correspond to one of the randomly weighted feasible bins.
    """
    # Number of bins
    n_bins = bins_remain_cap.shape[0]

    # Default: infeasible bins get -inf priority
    priorities = np.full(n_bins, -np.inf, dtype=float)

    # Find feasible bins
    feasible_mask = bins_remain_cap >= item

    # If any feasible bins, assign them random priorities
    if np.any(feasible_mask):
        # Random values in the range [0, 1)
        random_vals = np.random.random(np.count_nonzero(feasible_mask))
        priorities[feasible_mask] = random_vals

    return priorities
```
