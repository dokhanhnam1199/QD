```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority for adding an item to each bin following the Exact Fit First strategy.
    Bin with remaining capacity exactly equal to the item size gets highest priority.
    Among the bins that can accommodate the item, priority decreases with increasing leftover capacity.

    Args:
        item: Size of the item to add.
        bins_remain_cap: 1D numpy array of remaining capacities of bins.

    Returns:
        Numpy array of priority scores (same shape as bins_remain_cap). Bins that cannot accommodate
        the item receive -inf priority.
    """
    # Compute remaining capacity after placing the item
    diff = bins_remain_cap - item

    # Only bins that can fit the item (diff >= 0) are considered
    mask_fit = diff >= 0

    # Initialize all priorities to -inf (cannot place the item)
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Assign priorities: 0 for exact fit, -diff for others (so less leftover => higher priority)
    priorities[mask_fit] = -diff[mask_fit]

    return priorities
```
