```python
import numpy as np

# Global random generator to avoid reseeding on every call
_rng = np.random.default_rng()

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Random‑Fit priority for online Bin Packing.

    For each bin that can accommodate the incoming `item` (i.e. its remaining
    capacity ≥ item size), we assign an independent random number drawn from a
    uniform distribution on (0, 1). Bins that cannot accommodate the item receive
    a priority of -inf, ensuring they are never selected. The bin with the
    maximum priority (the highest random draw) will be chosen, which implements
    the classic Random Fit strategy.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D array with the remaining capacity of each existing bin.

    Returns:
        A NumPy array of the same shape as `bins_remain_cap` containing priority
        scores for each bin.
    """
    # Initialise all priorities to -inf (infeasible by default)
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)

    # Identify bins that can fit the item
    feasible_mask = bins_remain_cap >= item
    num_feasible = np.count_nonzero(feasible_mask)

    # Assign random priorities only to feasible bins
    if num_feasible:
        priorities[feasible_mask] = _rng.random(num_feasible)

    return priorities
```
