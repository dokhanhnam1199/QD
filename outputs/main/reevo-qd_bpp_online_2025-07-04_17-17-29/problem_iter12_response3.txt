```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    max_cap = np.max(bins_remain_cap)
    fit_mask = bins_remain_cap >= item

    if np.any(fit_mask):
        remaining_space = bins_remain_cap[fit_mask] - item
        priorities[fit_mask] = -remaining_space

        # Near full boost, dynamically adjusted based on item size
        nearly_full_threshold = 0.2 * max_cap
        nearly_full_mask = (remaining_space >= 0) & (remaining_space <= nearly_full_threshold)

        if np.any(nearly_full_mask):
            boost_factor = min(1.0, item / max_cap)
            priorities[fit_mask][nearly_full_mask] += 2 * boost_factor

        # Penalize nearly full, but more aggressively
        almost_full_threshold = 0.05 * max_cap
        almost_full_mask = (remaining_space >= 0) & (remaining_space <= almost_full_threshold)
        if np.any(almost_full_mask):
            priorities[fit_mask][almost_full_mask] -= 1

        # Penalize too empty bins to consolidate.
        too_empty_threshold = 0.8 * max_cap
        too_empty_mask = (remaining_space >= 0) & (remaining_space >= too_empty_threshold)
        if np.any(too_empty_mask):
            priorities[fit_mask][too_empty_mask] -= 0.75

        # Prioritize bins that are relatively empty, but can still fit the item. This encourages a mix of strategies.
        relatively_empty_threshold = 0.5 * max_cap
        relatively_empty_mask = (bins_remain_cap[fit_mask] >= item) & (bins_remain_cap[fit_mask] <= relatively_empty_threshold + item)
        if np.any(relatively_empty_mask):
            priorities[fit_mask][relatively_empty_mask] += 0.5 #Slight bonus

    else:
        # Item does not fit: assign a very negative priority. Try to open a new bin if possible
        priorities[:] = -np.inf
    return priorities
```
