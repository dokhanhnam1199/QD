```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:

    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # High priority to bins where item fits with smallest remaining space (First-Fit Decreasing principle)
    # Avoid fragmentation: prioritize bins that have just enough space.
    fit_mask = bins_remain_cap >= item
    if np.any(fit_mask):
        remaining_space = bins_remain_cap[fit_mask] - item
        priorities[fit_mask] = -remaining_space  # Smaller remaining space => Higher priority

        # Boost bins close to full after packing, but avoid bins that get too full (risk of not fitting subsequent smaller items)
        max_cap = np.max(bins_remain_cap)
        nearly_full_threshold = 0.2 * max_cap #tolerate a max 20% of the largest bin size as tolerance
        nearly_full_mask = (remaining_space >= 0) & (remaining_space <= nearly_full_threshold)

        if np.any(nearly_full_mask):
            #Adjust the boost based on item size: larger items get larger boost
            boost_factor = min(item, nearly_full_threshold)/ nearly_full_threshold
            priorities[fit_mask][nearly_full_mask] += boost_factor # Small positive boost to encourage filling near-full bins, 1 could be tuned
            
        #Penalize bins where remaining space is too small relative to average remaining space
        avg_remaining_space = np.mean(bins_remain_cap[fit_mask]) if np.any(fit_mask) else 0
        too_small_space_threshold = 0.1 * max_cap #Bins with space below 10% of max_cap considered too small.
        too_small_mask = (remaining_space > 0) & (remaining_space <= too_small_space_threshold)
        if np.any(too_small_mask):
             priorities[fit_mask][too_small_mask] -= 0.5 #Small negative factor, could be tuned

    else:
        # If the item does not fit in any bin, assign a very low priority
        priorities[:] = -np.inf

    return priorities
```
