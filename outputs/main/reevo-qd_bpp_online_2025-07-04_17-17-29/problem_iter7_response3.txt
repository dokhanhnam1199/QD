```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    bin_capacity = np.max(bins_remain_cap) # Assuming all bins have same capacity for normalization
    
    # Prioritize bins where the item fits
    fit_mask = bins_remain_cap >= item
    
    if np.any(fit_mask):
        remaining_space = bins_remain_cap[fit_mask] - item
        
        # Base priority: smaller remaining space is better (FirstFit Decreasing)
        priorities[fit_mask] = -remaining_space
        
        # Normalize remaining space for better comparison
        normalized_remaining_space = remaining_space / bin_capacity

        # Encourage nearly full bins
        nearly_full_threshold = 0.2  #tuneable, maximum space acceptable
        nearly_full_mask = (normalized_remaining_space >= 0) & (normalized_remaining_space <= nearly_full_threshold)
        priorities[fit_mask][nearly_full_mask] += 2 # tuneable, boost for nearly full bins
        
        # Penalize bins that become excessively empty
        empty_threshold = 0.8 # tuneable, minimum capacity acceptable
        empty_mask = (normalized_remaining_space > nearly_full_threshold) & (normalized_remaining_space < empty_threshold)
        priorities[fit_mask][empty_mask] -= normalized_remaining_space  #reduce priority to discourage empty bins

        #Prioritize full bins
        full_mask = normalized_remaining_space <= 0.05 #tuneable, how close to full is optimal
        priorities[fit_mask][full_mask] += 5

    else:
        # Item doesn't fit: strongly discourage, but allow if no other option exists
        priorities[:] = -np.inf  # Very low priority if item doesn't fit

    return priorities
```
