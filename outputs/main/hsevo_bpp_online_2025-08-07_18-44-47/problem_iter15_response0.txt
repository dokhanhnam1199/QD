```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    remaining = bins_remain_cap - item
    feasible = remaining >= 0
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    if np.any(feasible):
        eps = 1e-12
        base = 1.0 / (remaining[feasible] + eps)
        rng = np.random.default_rng()
        jitter_scale = 0.01 * item
        jitter = rng.standard_normal(remaining[feasible].size) * jitter_scale
        deterministic_term = remaining[feasible] * 1e-12
        priority[feasible] = base + jitter + deterministic_term
    return priority
```
