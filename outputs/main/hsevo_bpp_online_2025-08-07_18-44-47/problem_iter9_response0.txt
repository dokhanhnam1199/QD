```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n = bins_remain_cap.size
    if n == 0:
        return np.empty(0, dtype=float)
    remaining = bins_remain_cap - item
    feasible = remaining >= 0
    priority = np.full(n, -np.inf, dtype=float)
    priority[feasible] = -remaining[feasible]
    idx = np.arange(n, dtype=float)
    priority[feasible] += -idx[feasible] * 1e-9
    phi = 0.6180339887498949
    jitter = np.mod(phi * (idx + 1) * item, 1.0) * 1e-6 * item
    priority[feasible] += jitter[feasible]
    return priority
```
