```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Score feasible bins by inverse leftover capacity, deterministic tieâ€‘breaker."""
    if bins_remain_cap.size == 0:
        return np.empty_like(bins_remain_cap, dtype=float)
    fits = bins_remain_cap >= item
    leftover = bins_remain_cap - item
    eps = 1e-12
    inv = 1.0 / (leftover + eps)
    idx = np.arange(bins_remain_cap.shape[0])
    jitter = ((idx * 31 + int(item * 1e6)) % 1000) * 1e-15
    tie = idx * 1e-12 + item * 1e-12 * idx + jitter
    return np.where(fits, inv + tie, -np.inf)
```
