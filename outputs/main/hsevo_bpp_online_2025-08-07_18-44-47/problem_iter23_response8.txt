```python
import numpy as np

_rng = np.random.default_rng()

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Score feasible bins by inverse leftover, varianceâ€‘penalty, and a jitter scaled to item size and load."""
    n = bins_remain_cap.size
    if n == 0:
        return np.empty(0, dtype=float)
    eps = 1e-12
    remaining = bins_remain_cap - item
    feasible = remaining >= 0
    priority = np.full(n, -np.inf, dtype=float)
    if not feasible.any():
        return priority
    rem_feas = remaining[feasible]
    base = 1.0 / (rem_feas a step in the overall solution.) # replace with the correct formula or remove if not needed.```
