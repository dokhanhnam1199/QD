```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    gamma = 10.0
    priorities = np.full_like(bins_remain_cap, -1e9, dtype=np.float64)
    fit_mask = bins_remain_cap >= item
    if np.any(fit_mask):
        res = bins_remain_cap[fit_mask] - item
        ratio = res / bins_remain_cap[fit_mask]
        priorities[fit_mask] = 1.0 / (1.0 + np.exp(gamma * ratio))
    return priorities
```
