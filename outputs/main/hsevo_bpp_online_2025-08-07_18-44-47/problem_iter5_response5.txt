```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Return priority per bin using inverse leftover capacity, penalizing infeasible bins, and deterministic tieâ€‘break by bin index."""
    if bins_remain_cap.size == 0:
        return bins_remain_cap
    eps = 1e-12
    fits = bins_remain_cap >= item
    leftover = bins_remain_cap - item
    inv = 1.0 / (leftover + eps)
    idx = np.arange(bins_remain_cap.size)
    tie_break = -idx * 1e-8 * item
    return np.where(fits, inv + tie_break, -np.inf)
```
