def priority_v2(item: float, bins_remain_cap: np.ndarray, eps: float = 9.854286905420812e-07, noise_factor: float = 0.015172722972460594) -> np.ndarray:
    """Inverse leftover capacity with tiny random tieâ€‘breakers; infeasible bins get -inf."""
    if bins_remain_cap.size == 0:
        return np.empty_like(bins_remain_cap, dtype=float)
    residual = bins_remain_cap - item
    noise = np.random.rand(bins_remain_cap.size) * noise_factor * item
    return np.where(residual >= 0, 1.0 / (residual + eps) + noise, -np.inf)
