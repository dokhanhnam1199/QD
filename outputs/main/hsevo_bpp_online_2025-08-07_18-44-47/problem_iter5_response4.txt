```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Inverse leftover with deterministic index bias and tiny noise."""
    # Combination of inverse leftover, deterministic tieâ€‘breaker, and tiny noise
    if bins_remain_cap.size == 0:
        return np.empty_like(bins_remain_cap, dtype=float)
    residual = bins_remain_cap - item
    eps = 1e-6
    base = 1.0 / (residual + eps)
    priors = np.where(residual >= 0, base, -np.inf)
    priors += np.arange(bins_remain_cap.size) * 1e-5
    rng = np.random.default_rng(int(item * 1e6) + 12345)
    priors += rng.random(bins_remain_cap.size) * 1e-6 * item
    return priors
```
