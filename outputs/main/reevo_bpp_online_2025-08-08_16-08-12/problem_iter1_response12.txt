```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit strategy.

    The Worst Fit strategy aims to place the item in the bin that has the most remaining capacity.
    This is generally a good heuristic for online bin packing as it tries to leave
    smaller remaining capacities in other bins, which might be useful for packing
    future smaller items.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        The priority is set to the remaining capacity of the bin if the item fits,
        and 0 otherwise. This encourages packing into the fullest bins.
    """
    # Initialize priorities to 0 for all bins
    priorities = np.zeros_like(bins_remain_cap)

    # Identify bins where the item can fit
    # A bin can fit the item if its remaining capacity is greater than or equal to the item's size
    can_fit_mask = bins_remain_cap >= item

    # For bins where the item can fit, set the priority to the remaining capacity
    # This implements the Worst Fit strategy: higher remaining capacity = higher priority
    priorities[can_fit_mask] = bins_remain_cap[can_fit_mask]

    return priorities
```
