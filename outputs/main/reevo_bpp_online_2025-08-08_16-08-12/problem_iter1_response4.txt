```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Exact Fit First strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Exact Fit First prioritizes bins where the item fits exactly.
    # We assign a high priority to bins where remaining capacity minus item size is 0.
    # For other bins, the priority is lower.

    priorities = np.zeros_like(bins_remain_cap)
    
    # Find bins where the item fits exactly
    exact_fit_mask = (bins_remain_cap - item) == 0
    
    # Assign a high priority to exact fit bins
    priorities[exact_fit_mask] = 100  # A large value to indicate highest priority
    
    # For bins where the item fits but not exactly, assign a moderate priority.
    # This can be the remaining capacity itself, so smaller remaining capacities get higher priority
    # among non-exact fits, favoring fuller bins.
    valid_fit_mask = bins_remain_cap >= item
    priorities[valid_fit_mask & ~exact_fit_mask] = bins_remain_cap[valid_fit_mask & ~exact_fit_mask]

    # Bins where the item doesn't fit get a priority of 0 (already initialized)
    
    return priorities
```
