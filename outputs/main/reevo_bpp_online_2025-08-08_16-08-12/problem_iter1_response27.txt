```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.

    The Random Fit strategy does not strictly follow a deterministic priority.
    Instead, it randomly selects a feasible bin. However, to fit this into the
    priority function framework, we can assign a higher priority to bins that
    can accommodate the item, and among those, a random selection is implicitly
    handled by the uniform probability distribution. This implementation assigns
    a priority of 1 to all bins that can fit the item, and 0 to those that cannot.
    The subsequent selection mechanism would then randomly pick from the bins
    with the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    # Assign a priority of 1 to bins that can fit the item
    can_fit_mask = bins_remain_cap >= item
    priorities[can_fit_mask] = 1.0
    return priorities
```
