```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Almost Full Fit strategy.

    The "Almost Full Fit" strategy prioritizes bins that have a remaining capacity
    just large enough to fit the current item. This aims to leave larger capacities
    in other bins for potentially larger future items.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Calculate the "tightness" for bins that can accommodate the item
    # Tightness is the difference between the bin's remaining capacity and the item's size.
    # A smaller positive difference indicates a "tighter" fit.
    # We want to prioritize bins where this difference is small and positive.
    # We use a small epsilon to avoid division by zero and to handle cases where
    # remaining capacity is exactly equal to the item size.
    epsilon = 1e-9
    tightness = bins_remain_cap - item

    # Only consider bins that have enough capacity for the item
    valid_bins_mask = bins_remain_cap >= item

    # For bins that can fit the item, calculate their priority.
    # Higher priority is given to bins with smaller positive tightness.
    # We invert the tightness and add epsilon to avoid division by zero for bins
    # where remaining_capacity == item.
    # A large value means the bin is a good fit (tight).
    priorities[valid_bins_mask] = 1.0 / (tightness[valid_bins_mask] + epsilon)

    # Optionally, you could add a small penalty to bins that are "too large"
    # to fit the item, or further refine the priority based on other criteria.
    # For this "Almost Full Fit", we focus solely on the tightness of bins that can fit.

    # Ensure that bins that cannot fit the item have a priority of 0
    priorities[~valid_bins_mask] = 0.0

    return priorities
```
