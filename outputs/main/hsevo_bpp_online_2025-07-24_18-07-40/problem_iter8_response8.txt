```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority score for each bin based on remaining capacity closest to item size and bin utilization.
    """
    # Calculate priority score: favor bins with remaining capacity closest to item size and higher utilization
    max_capacity = 1.0  # Uniform initial capacity for all bins
    priority = -np.abs(bins_remain_cap - item) + 0.5 * (max_capacity - bins_remain_cap) / max_capacity
    
    # Set priority to negative infinity if bin cannot hold the item
    priority[bins_remain_cap < item] = -np.inf
    
    return priority
```
