```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_capacity_after_addition = bins_remain_cap - item
    
    # For bins that can fit the item, the priority is the negative of the remaining capacity
    # This encourages choosing the bin with the least remaining capacity (i.e., the best fit)
    priority = np.where(remaining_capacity_after_addition >= 0, -remaining_capacity_after_addition, -np.inf)
    
    return priority
```
