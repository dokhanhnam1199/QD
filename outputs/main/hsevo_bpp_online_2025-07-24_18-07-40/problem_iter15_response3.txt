```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin and the item size.
    A bin with enough capacity and the smallest remaining capacity after adding the item gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_add = bins_remain_cap - item
    
    # A bin with not enough capacity gets a priority of negative infinity
    priority = np.where(remaining_cap_after_add >= 0, -remaining_cap_after_add, -np.inf)
    
    return priority
```
