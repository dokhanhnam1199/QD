```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This version prioritizes bins that have just enough capacity for the item.
    It uses a Gaussian-like function to score bins based on their remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin based on its remaining capacity
    # We want to prioritize bins that have just enough capacity for the item
    # So, we use a scoring function that peaks when the remaining capacity equals the item size
    scores = np.exp(-((bins_remain_cap - item) / item) ** 2)

    # We also want to avoid bins that don't have enough capacity for the item
    # So, we set the score to zero for bins that are too small
    scores[bins_remain_cap < item] = 0

    return scores
```
