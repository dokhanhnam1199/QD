```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on a combination of best-fit strategy and 
    a nuanced handling of the remaining capacity. A bin with enough capacity 
    and the smallest remaining capacity after adding the item gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priority array with negative infinity
    priority = np.full_like(bins_remain_cap, -np.inf)
    
    # For bins that can accommodate the item, calculate the priority
    valid_bins = bins_remain_cap >= item
    priority[valid_bins] = - (bins_remain_cap[valid_bins] - item)
    
    return priority
```
