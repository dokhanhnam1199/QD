```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin and 
    whether the bin can accommodate the item. It combines a best-fit strategy 
    with a nuanced handling of remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # First, filter out bins that cannot accommodate the item and set their priority to negative infinity
    priority = np.where(bins_remain_cap >= item, 
                         # For bins that can accommodate the item, use a best-fit strategy
                         # by prioritizing bins with the least remaining capacity after adding the item
                         - (bins_remain_cap - item), 
                         -np.inf)
    
    return priority
```
