```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is higher for bins that have enough capacity for the item and 
    lower remaining capacity after packing the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after packing the item into each bin
    remaining_cap_after_packing = bins_remain_cap - item
    
    # Check if the bin has enough capacity for the item
    has_enough_capacity = remaining_cap_after_packing >= 0
    
    # Assign a very low priority to bins that cannot hold the item
    priority = np.where(has_enough_capacity, -remaining_cap_after_packing, -np.inf)
    
    return priority
```
