```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin based on remaining capacity and item size.
    Combines nuanced scoring and normalization techniques for improved heuristic design.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Assign a very low priority to bins where the item doesn't fit
    priority = np.where(remaining_cap_after_addition < 0, -np.inf, 
                        # For bins where the item fits, use a nuanced scoring system
                        -remaining_cap_after_addition)
    
    # Normalize the priority scores using the exponential function
    priority = np.exp(priority)
    
    return priority
```
