```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin and whether the bin can hold the item.
    A bin that can hold the item and has the least remaining capacity gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priority array with negative infinity
    priority = np.full_like(bins_remain_cap, -np.inf)
    
    # For bins that can hold the item, calculate priority based on remaining capacity
    # A bin with less remaining capacity gets higher priority
    can_hold_item = bins_remain_cap >= item
    priority[can_hold_item] = -bins_remain_cap[can_hold_item]
    
    return priority
```
