```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on whether the bin has enough capacity and 
    how full the bin will be after adding the item. A bin that will be full after 
    adding the item gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priority array with negative infinity
    priority = np.full_like(bins_remain_cap, -np.inf)
    
    # Check if the bin has enough capacity
    valid_bins = bins_remain_cap >= item
    
    # For valid bins, calculate the priority score as the remaining capacity after adding the item
    # A bin that will be full (i.e., have zero remaining capacity) after adding the item gets the highest priority
    priority[valid_bins] = -bins_remain_cap[valid_bins] + item
    
    return priority
```
