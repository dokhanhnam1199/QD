```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Blend best‑fit bias with stochastic inverse‑remaining weighting for diversity."""
    eps = 1e-6
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    feasible = bins_remain_cap >= item
    if np.any(feasible):
        remaining = bins_remain_cap[feasible] - item
        deterministic = -remaining                     # tight‑fit bias
        stochastic = np.random.rand(remaining.size) / (remaining + eps)  # random inverse‑space weight
        priorities[feasible] = deterministic + stochastic
    return priorities
```
