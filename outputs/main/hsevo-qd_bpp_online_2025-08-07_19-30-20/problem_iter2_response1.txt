```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Stochastic bestâ€‘fit: exponential bias toward tighter fits combined with random factor."""
    # -inf for infeasible bins; exponential bias favors low residual, random adds exploration
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return priorities
    residual = bins_remain_cap[feasible] - item
    eps = 1e-9
    temperature = 0.5
    bias = np.exp(-residual / (temperature + eps))
    rand = np.random.rand(residual.size)
    priorities[feasible] = bias * rand
    return priorities
```
