```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, eps: float = 1e-6, rng_seed: int = None) -> np.ndarray:
    """Priority by inverse remaining capacity, randomized tie-breaking; infeasible bins get -inf."""
    rng = np.random.default_rng(rng_seed)
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    fit = bins_remain_cap >= item
    if np.any(fit):
        rem = bins_remain_cap[fit] - item
        weights = 1.0 / (rem + eps)
        rand = rng.random(np.count_nonzero(fit))
        priorities[fit] = weights * rand
    return priorities
```
