```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            priorities[i] = bins_remain_cap[i] - item
        else:
            priorities[i] = -np.inf
    
    # Introduce some randomness, like a quantum fluctuation
    noise = np.random.normal(0, 0.1, size=bins_remain_cap.shape)
    priorities += noise

    # Invert for maximization of negative difference (minimizing remaining capacity)
    priorities = -priorities 
    return priorities
```
