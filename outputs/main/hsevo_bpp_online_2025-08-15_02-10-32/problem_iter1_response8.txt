```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    can_fit_mask = bins_remain_cap >= item
    
    available_bins_capacities = bins_remain_cap[can_fit_mask]
    
    if available_bins_capacities.size > 0:
        
        relative_capacities = available_bins_capacities - item
        
        
        mean_relative_capacity = np.mean(relative_capacities)
        
        
        priorities[can_fit_mask] = np.exp(-relative_capacities / mean_relative_capacity)
        
        
        
        priorities[bins_remain_cap < item] = 0.0
        
    else:
        priorities[:] = 0.0

    return priorities
```
