```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    fit_values = bins_remain_cap - item
    valid_fits = fit_values >= 0
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    if np.any(valid_fits):
        scaled_fits = (fit_values[valid_fits] - np.min(fit_values[valid_fits])) / (np.max(fit_values[valid_fits]) - np.min(fit_values[valid_fits]) + 1e-8)
        priorities[valid_fits] = np.exp(scaled_fits)
        priorities[valid_fits] /= np.sum(priorities[valid_fits])
    return priorities
```
