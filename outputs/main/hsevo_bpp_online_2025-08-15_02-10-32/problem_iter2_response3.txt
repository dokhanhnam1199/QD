```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins by giving a higher score to bins that fit the item
    tightly, using an exponential decay based on relative capacity,
    but also strongly favoring exact fits.
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    can_fit_mask = bins_remain_cap >= item
    
    fitting_bins_capacities = bins_remain_cap[can_fit_mask]
    
    if fitting_bins_capacities.size > 0:
        
        exact_fit_mask = fitting_bins_capacities == item
        
        
        relative_capacities = fitting_bins_capacities - item
        
        
        non_exact_fit_mask = ~exact_fit_mask
        
        
        non_exact_fitting_capacities = relative_capacities[non_exact_fit_mask]
        
        if non_exact_fitting_capacities.size > 0:
            
            mean_relative_capacity = np.mean(non_exact_fitting_capacities)
            
            
            if mean_relative_capacity > 0:
                
                priorities[can_fit_mask][non_exact_fit_mask] = np.exp(-non_exact_fitting_capacities / mean_relative_capacity)
            else:
                
                priorities[can_fit_mask][non_exact_fit_mask] = 0.0
        
        
        priorities[can_fit_mask][exact_fit_mask] = 1.0 
        
    return priorities
```
