```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Almost Full Fit strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    for i in range(len(bins_remain_cap)):
        remaining_cap = bins_remain_cap[i]
        if remaining_cap >= item:
            
            
            if remaining_cap - item < 0.1 * bins_remain_cap[0]: 
                priorities[i] = 1.0 / (remaining_cap - item + 1e-9)
            else:
                priorities[i] = 0.1 / (remaining_cap - item + 1e-9)
        else:
            priorities[i] = 0.0
            
    
    
    return priorities
```
