```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, target_relative_residual: float = 0.5, random_priority_scale: float = 1e-9) -> np.ndarray:
    """Combines fill ratio, waste penalty, and residual target for priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    infeasible_bins = bins_remain_cap < item
    priorities[infeasible_bins] = -np.inf

    waste = bins_remain_cap - item
    waste[infeasible_bins] = np.inf
    normalized_waste_item = waste / item
    small_waste_penalty = np.exp(-normalized_waste_item)

    fill_ratio = item / bins_remain_cap

    residual_capacity = bins_remain_cap - item
    relative_residual = residual_capacity / item

    priorities[~infeasible_bins] = fill_ratio[~infeasible_bins] / (1 + np.abs(relative_residual[~infeasible_bins] - target_relative_residual)) - 0.5 * small_waste_penalty[~infeasible_bins]

    priorities += np.random.rand(len(bins_remain_cap)) * random_priority_scale

    return priorities
```
