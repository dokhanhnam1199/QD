```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio, waste, target residual, and near-full bin bonus."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    # 1. Feasibility check
    priorities[~feasible_bins] = -np.inf

    # 2. Fill Ratio and Target Residual Capacity
    fill_ratios = item / bins_remain_cap
    residual_capacity = bins_remain_cap - item
    relative_residual = residual_capacity / item
    target_relative_residual = 0.75  # Configurable target
    priorities[feasible_bins] = fill_ratios[feasible_bins] / (1 + np.abs(relative_residual[feasible_bins] - target_relative_residual))

    # 3. Near-Full Bin Bonus
    almost_full_threshold = 0.95
    almost_full_bins = (bins_remain_cap - item) / bins_remain_cap > almost_full_threshold
    priorities[feasible_bins & almost_full_bins] += 1.0 # Bonus for near-full

    # 4. Random nudge
    priorities += np.random.rand(len(bins_remain_cap)) * 1e-9

    return priorities
```
