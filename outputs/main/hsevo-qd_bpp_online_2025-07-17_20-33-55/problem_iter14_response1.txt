```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities considering feasibility, fill ratio, and waste."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Infeasible bins get -inf priority
    infeasible_bins = bins_remain_cap < item
    priorities[infeasible_bins] = -np.inf
    
    # Fill ratio score
    fill_ratios = item / bins_remain_cap
    
    # Residual capacity after insertion
    residual_capacity = bins_remain_cap - item
    
    # Relative residual capacity
    relative_residual = residual_capacity / item
    
    # Target relative residual and combine fill ratio
    target_relative_residual = 0.75
    priorities[~infeasible_bins] = fill_ratios[~infeasible_bins] / (1 + np.abs(relative_residual[~infeasible_bins] - target_relative_residual))
    
    # Add small noise for differentiation
    priorities += np.random.rand(len(bins_remain_cap)) * 1e-9

    return priorities
```
