```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering waste, fullness, and feasibility."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return priorities - 1e9

    waste = bins_remain_cap - item
    priorities[feasible_bins] = -np.abs(waste[feasible_bins])

    priorities[feasible_bins] += 0.1 * (1 - bins_remain_cap[feasible_bins] / np.max(bins_remain_cap))

    near_full = feasible_bins & (bins_remain_cap < 1.2 * item)
    priorities[near_full] += 5  # Consolidation bonus

    priorities[~feasible_bins] = -1e8

    return priorities
```
