```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit strategy.

    The Worst Fit strategy prioritizes bins that have the largest remaining capacity.
    This strategy aims to leave smaller remaining capacities in more bins,
    hoping to accommodate larger items later.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)

    # For bins where the item can fit (remaining capacity >= item size)
    # assign a priority equal to the remaining capacity.
    # Bins with larger remaining capacity get higher priority (Worst Fit).
    # Bins where the item cannot fit are assigned a priority of 0.
    fit_mask = bins_remain_cap >= item
    priorities[fit_mask] = bins_remain_cap[fit_mask]

    return priorities
```
