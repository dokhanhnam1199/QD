```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using Gaussian fit, capacity ratio, near-full reward."""
    # Gaussian fit centered on item size, adaptive sigma
    mu = item
    sigma = item / 2.0
    gaussian = np.exp(-((bins_remain_cap - mu) ** 2) / (2 * sigma**2))

    # Capacity ratio component
    ratios = item / (bins_remain_cap + 1e-9)
    capacity_priority = 0.1 * (1 - ratios)

    # Reward bins that become near-full after packing
    near_full_threshold = 0.25
    near_full_reward = np.where(bins_remain_cap - item <= near_full_threshold, 0.5, 0)

    # Combine and prevent invalid placements
    priorities = gaussian + capacity_priority + near_full_reward
    priorities[bins_remain_cap < item] = -np.inf

    return priorities
```
