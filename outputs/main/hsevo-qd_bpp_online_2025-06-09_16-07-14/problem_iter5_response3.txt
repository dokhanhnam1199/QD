```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on Gaussian fit and remaining capacity."""
    mu = item
    sigma = item / 3.0
    gaussian = np.exp(-((bins_remain_cap - mu) ** 2) / (2 * sigma**2))

    # Perturbation based on remaining capacity (encourages filling more)
    perturbation = 0.1 * (bins_remain_cap / np.max(bins_remain_cap))

    priorities = gaussian + perturbation

    # Avoid impossible bins
    priorities[bins_remain_cap < item] = -np.inf

    # Bonus for almost full bins
    almost_full_threshold = 0.1 * np.max(bins_remain_cap)  # e.g., within 10% of max capacity
    almost_full_bonus = (bins_remain_cap > item) & (bins_remain_cap - item <= almost_full_threshold)
    priorities[almost_full_bonus] += 0.2 # add bonus points

    return priorities
```
