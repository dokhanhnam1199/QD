```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using a combined Gaussian and logarithmic approach."""

    # Gaussian component, same as priority_v0.
    mu = item
    sigma = item / 3.0
    gaussian = np.exp(-((bins_remain_cap - mu) ** 2) / (2 * sigma**2))

    # Logarithmic component, modified to avoid errors.
    safe_bins_remain_cap = np.clip(bins_remain_cap, item + 1e-6, None)  # Avoid division by zero/negative
    ratios = item / safe_bins_remain_cap
    log_ratios = np.log(ratios)
    logarithmic = -log_ratios

    # Combine the two components, weighting Gaussian more.
    priorities = 0.7 * gaussian + 0.3 * logarithmic

    # Perturbation based on remaining capacity.
    perturbation = 0.1 * (bins_remain_cap / np.max(bins_remain_cap))
    priorities += perturbation

    # Ensure feasibility.
    priorities[bins_remain_cap < item] = -np.inf # Never pick impossible bins.
    return priorities
```
