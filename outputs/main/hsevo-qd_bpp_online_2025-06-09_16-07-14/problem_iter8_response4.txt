```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, iteration: int = 0, total_items: int = 0) -> np.ndarray:
    """Combines capacity ratio, Gaussian fit, and adaptive bonus for almost full bins."""

    ratios = item / (bins_remain_cap + 1e-9)
    priorities = 1 - ratios

    # Gaussian component, scaled by remaining capacity.
    mu = item
    sigma = item/3
    gaussian = np.exp(-((bins_remain_cap - mu) ** 2) / (2 * sigma**2))
    priorities += gaussian

    # Encourage filling bins nearly full, decay bonus over time
    almost_full = (bins_remain_cap - item) < 0.2 * item
    exploration_factor = np.exp(-iteration / (total_items + 1e-9)) if total_items > 0 else 1.0
    priorities += almost_full * 0.2 * exploration_factor

    priorities[bins_remain_cap < item] = -np.inf
    return priorities
```
