```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Assign priority to bins based on Gaussian fit and remaining capacity."""

    mu = item
    sigma = item / 3.0
    gaussian = np.exp(-((bins_remain_cap - mu) ** 2) / (2 * sigma**2))

    perturbation = 0.1 * (bins_remain_cap / np.max(bins_remain_cap))
    priorities = gaussian + perturbation

    priorities[bins_remain_cap < item] = -np.inf

    # Add a bonus for bins that are almost full after placing the item.
    almost_full_bonus = np.zeros_like(priorities)
    remaining_after_fit = bins_remain_cap - item
    almost_full_mask = (remaining_after_fit >= 0) & (remaining_after_fit <= 0.1 * item)
    almost_full_bonus[almost_full_mask] = 0.5  # Bonus for almost full bins

    priorities += almost_full_bonus
    return priorities
```
