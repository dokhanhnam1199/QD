```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    An enhanced priority function that combines Gaussian fit, capacity ratio, and a near-full bin reward.
    Adaptively adjusts the Gaussian sigma based on item size, and incorporates a state-based perturbation.
    """

    # Gaussian component, adaptive sigma
    mu = item
    sigma = item / 2.0  # Adjust sigma for sensitivity to bins close to item size.  Smaller sigma is more selective
    gaussian = np.exp(-((bins_remain_cap - mu) ** 2) / (2 * sigma**2))

    # Capacity ratio component
    ratios = item / (bins_remain_cap + 1e-9)
    capacity_priority = 0.1 * (1 - ratios)

    # Near-full bin reward: Increased probability for bins that, after packing, will be over 75% full
    near_full_threshold = 0.25  # Bin must have remaining capacity within 25% of bin size after placement.  Higher values are more selective
    near_full_reward = np.where(bins_remain_cap - item <= near_full_threshold, 0.5, 0)  # Stronger reward than capacity ratio

    # Combine components
    priorities = gaussian + capacity_priority + near_full_reward

    # Never pick impossible bins
    priorities[bins_remain_cap < item] = -np.inf

    return priorities
```
