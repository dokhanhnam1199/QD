```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Implements a Best Fit heuristic to minimize new bin usage.

    Prioritizes bins that, after placing the item, will have the smallest
    remaining capacity. This maximizes space utilization by minimizing
    the "quantum of wasted space" in existing bins.
    """
    # Calculate the potential remaining capacity for each bin if the item were placed there.
    potential_residual_space = bins_remain_cap - item

    # Initialize priorities. Bins where the item doesn't fit get a very low priority.
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Identify bins where the item can actually fit (remaining space is non-negative).
    can_fit_mask = potential_residual_space >= 0

    # For fitting bins, prioritize those leaving the least amount of space.
    # A smaller positive residual space results in a higher (less negative, or closer to zero) priority.
    # A perfect fit (0 residual) gets the highest possible score of 0.
    priorities[can_fit_mask] = -potential_residual_space[can_fit_mask]

    return priorities
```
