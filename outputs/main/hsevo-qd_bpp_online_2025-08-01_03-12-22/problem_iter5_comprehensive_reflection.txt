
Here's a redefined 'Current self-reflection' for designing better heuristics:

*   **Keywords**: Impact-Driven, Strategic Selection, Performance Metrics, Structural Exploitation.
*   **Advice**: Critically evaluate how each heuristic decision *quantifiably* improves objective function progress or search efficiency. Design rules that actively exploit specific problem structures to achieve superior solutions, validated through performance benchmarking.
*   **Avoid**: Prioritizing only functional correctness, intuitive mathematical expressions, or code readability and documentation. These are implementation hygiene, not drivers for discovering *better* heuristic logic or performance breakthroughs.
*   **Explanation**: This approach centers on *measurable performance uplift* derived from the heuristic's core strategy. It pushes beyond mere implementation details to focus on the *effectiveness of its decision-making* in navigating the problem space.