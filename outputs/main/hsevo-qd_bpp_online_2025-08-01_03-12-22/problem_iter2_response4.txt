```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Implements the Best Fit heuristic: prioritizes bins that minimize
    the remaining capacity after placing the item, optimizing packing density.
    Bins where the item does not fit are assigned the lowest possible priority.
    """
    # Calculate the remaining space in each bin if the item were to be placed there.
    potential_residual_space = bins_remain_cap - item

    # Initialize priorities, setting an infinitely low score for bins that cannot fit the item.
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Identify all bins where the item can actually fit.
    can_fit_mask = potential_residual_space >= 0

    # For valid bins, assign a priority based on minimizing the residual space.
    # A smaller positive residual space results in a higher (less negative) priority,
    # making perfect fits (0 residual) the highest priority among valid bins.
    priorities[can_fit_mask] = -potential_residual_space[can_fit_mask]

    return priorities
```
