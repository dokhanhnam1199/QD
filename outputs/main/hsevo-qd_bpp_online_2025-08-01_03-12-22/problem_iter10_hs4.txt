import numpy as np
import random
import math
import scipy
import torch

def priority_v2(item: float, bins_remain_cap: np.ndarray, default_priority_value: float = 3.734126015219366) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
        default_priority_value: The default priority score for each bin when no specific calculation
                                is performed or when a base score is desired.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # The original function returned np.zeros_like(bins_remain_cap),
    # which implies a hardcoded default priority of 0.0 for all bins.
    # This has been extracted as 'default_priority_value'.
    return default_priority_value * np.ones_like(bins_remain_cap)
