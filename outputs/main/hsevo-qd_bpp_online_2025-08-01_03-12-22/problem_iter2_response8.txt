```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates priority for online bin packing using a Best Fit heuristic.

    Prioritizes bins that result in the smallest remaining capacity after
    placing the item, promoting efficient space utilization. Bins unable to
    fit the item receive the lowest priority.
    """
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    can_fit_mask = bins_remain_cap >= item

    # Best Fit: Prioritize bins where the remaining capacity (bins_remain_cap - item)
    # is minimized. To maximize priority, we use the negative of this value, or
    # equivalently, `item - bins_remain_cap`. A perfect fit yields 0, a near-perfect
    # fit yields a slightly negative value, and larger remaining space yields more
    # negative values.
    priorities[can_fit_mask] = item - bins_remain_cap[can_fit_mask]

    return priorities
```
