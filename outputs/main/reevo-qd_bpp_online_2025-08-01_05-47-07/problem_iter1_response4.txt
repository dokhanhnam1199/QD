```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin,
    implementing a Best Fit (BF) strategy.

    Prioritizes bins that can fit the item and would leave the least
    remaining capacity after the item is placed (i.e., the "tightest fit").
    Bins that cannot fit the item receive a very low priority (-np.inf),
    ensuring they are never selected unless no other bin can fit the item.

    The priority score is calculated as the negative of the remaining space
    after placing the item. Thus, a smaller positive remaining space results
    in a larger (closer to zero or positive) priority score, making it the
    preferred choice. An exact fit results in a priority of 0, which is
    the highest possible score for a valid bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priorities with a very low value for all bins.
    # This ensures that bins which cannot fit the item will have the lowest priority.
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Create a boolean mask for bins that can accommodate the item.
    can_fit_mask = bins_remain_cap >= item

    # Calculate the remaining capacity for only those bins that can fit the item.
    # We want to minimize this remaining capacity (Best Fit).
    # To convert this into a priority (where higher is better), we negate the value.
    # For example:
    #   - If remaining capacity is 1, priority is -1.
    #   - If remaining capacity is 5, priority is -5.
    #   - If remaining capacity is 0 (exact fit), priority is 0 (highest).
    # Since -1 is greater than -5, this correctly prioritizes the "tightest" fit.
    valid_bins_remaining_space = bins_remain_cap[can_fit_mask] - item
    priorities[can_fit_mask] = -valid_bins_remaining_space

    return priorities
```
