```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This version considers both the remaining capacity and the closeness
    of the item size to the remaining capacity, and penalizes bins that
    would be left with very small remaining capacities.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item.
    remaining_after = bins_remain_cap - item

    # Identify bins that can accommodate the item.
    valid_bins = remaining_after >= 0

    # Initialize priority scores to a very low value for invalid bins.
    priorities = np.full(bins_remain_cap.shape, -np.inf)

    # Calculate priority scores for valid bins.
    if np.any(valid_bins):
        # The closer the item size is to the remaining capacity, the better.
        # Use a negative absolute difference for ranking.
        closeness = -np.abs(remaining_after[valid_bins])

        # Penalize bins with very small remaining capacities after adding the item.
        # A small remaining capacity might make it hard to pack subsequent items.
        small_capacity_penalty = np.where(remaining_after[valid_bins] < 0.1, -10, 0) # Heuristic value. Can be any value.
        #Prioritize bins that has exactly match the item size.
        exact_match = np.where(remaining_after[valid_bins] == 0, 100, 0) # Heuristic value. Can be any value.

        # Combine the closeness and small capacity penalty to create the final priorities.
        priorities[valid_bins] = closeness + small_capacity_penalty + exact_match
        #normalize_coeff = np.sum(np.abs(priorities[valid_bins]))
        #priorities[valid_bins] = priorities[valid_bins] / normalize_coeff if normalize_coeff != 0 else priorities[valid_bins]

    return priorities
```
