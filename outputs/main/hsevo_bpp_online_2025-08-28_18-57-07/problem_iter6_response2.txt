```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item

    if not np.any(suitable_bins):
        return priorities

    waste = bins_remain_cap[suitable_bins] - item
    
    if np.all(waste == waste[0]):
        priorities[suitable_bins] = 1.0
    else:
        min_waste = np.min(waste)
        indices = np.where(suitable_bins)[0]
        for i in indices:
            if bins_remain_cap[i] - item == min_waste:
                priorities[i] = 1.0
            else:
                priorities[i] = 0.0
    
    
    return priorities
```
