```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit and a relative fragmentation penalty."""
    
    feasible_bins = bins_remain_cap >= item
    
    priorities = np.zeros_like(bins_remain_cap)
    
    if np.any(feasible_bins):
        fit_scores = 1.0 / (bins_remain_cap[feasible_bins] - item)
        
        fragmentation_penalty = 0.05 * (1.0 - (bins_remain_cap[feasible_bins] - item) / bins_remain_cap[feasible_bins])
        
        priorities[feasible_bins] = fit_scores - fragmentation_penalty
    
    return priorities
```
