```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item

    if not np.any(suitable_bins):
        return priorities

    bin_indices = np.where(suitable_bins)[0]
    waste = bins_remain_cap[suitable_bins] - item
    
    priorities[suitable_bins] = 1.0 / (waste + 1e-6) 

    
    mean_cap = np.mean(bins_remain_cap)
    for i in bin_indices:
      if bins_remain_cap[i] > mean_cap:
        priorities[i] += 0.1
      else:
        priorities[i] -= 0.05

    
    first_fit_index = np.where(bins_remain_cap >= item)[0][0]
    priorities[first_fit_index] += 0.2
    
    return priorities
```
