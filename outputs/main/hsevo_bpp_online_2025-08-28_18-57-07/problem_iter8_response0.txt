```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines minimum waste and inverse waste for better bin selection."""
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if not np.any(suitable_bins):
        return priorities
    waste = bins_remain_cap[suitable_bins] - item
    min_waste = np.min(waste)
    indices = np.where(suitable_bins)[0]
    for i in indices:
        if bins_remain_cap[i] - item == min_waste:
            priorities[i] = 1.0
        else:
            priorities[i] = 1.0 / (waste[np.where(indices == i)[0][0]] + 1e-6)
    return priorities
```
