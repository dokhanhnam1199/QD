```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    small_value = 0.000664
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities
    
    remaining_capacities = bins_remain_cap[feasible_bins]
    
    priorities[feasible_bins] = 1.0 / (remaining_capacities - item + small_value)
    
    fragmentation_penalty = 0.1 * (1 - (remaining_capacities - item) / remaining_capacities)
    priorities[feasible_bins] -= fragmentation_penalty
    
    return priorities
```
