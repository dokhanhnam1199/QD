```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    small_value = 0.000664
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if np.any(feasible_bins):
        priorities[feasible_bins] = 1.0 / (bins_remain_cap[feasible_bins] - item + small_value)
        capacities = bins_remain_cap[feasible_bins]
        fragmentation_penalty = 0.1 * (1.0 - (capacities - item) / capacities)
        priorities[feasible_bins] -= fragmentation_penalty
    return priorities
```
