```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    small_value = 1e-6
    fragmentation_penalty = 0.05
    
    feasible_bins = bins_remain_cap >= item
    
    priorities = np.zeros_like(bins_remain_cap)
    
    if np.any(feasible_bins):
        
        waste = bins_remain_cap[feasible_bins] - item
        
        priorities[feasible_bins] = 1.0 / (waste + small_value) - fragmentation_penalty * (1 - (waste + item) / bins_remain_cap[feasible_bins])
    
    return priorities
```
