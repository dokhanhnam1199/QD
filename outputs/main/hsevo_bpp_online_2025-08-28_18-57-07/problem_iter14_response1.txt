```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a small fragmentation penalty for improved bin packing."""
    small_value = 0.000664
    fragmentation_penalty = 0.1
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if not np.any(suitable_bins):
        return priorities
    waste = bins_remain_cap[suitable_bins] - item
    priorities[suitable_bins] = 1.0 / (waste + small_value) - fragmentation_penalty * (1 - waste / bins_remain_cap[suitable_bins])
    return priorities
```
