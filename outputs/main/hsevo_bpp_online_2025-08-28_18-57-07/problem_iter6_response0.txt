```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if not np.any(suitable_bins):
        return priorities

    waste = bins_remain_cap[suitable_bins] - item
    min_waste = np.min(waste)
    best_bins = np.where(waste == min_waste)[0]

    for i in best_bins:
        bin_index = np.where(suitable_bins)[0][i]
        priorities[bin_index] = 1.0

    remaining_capacities = bins_remain_cap[suitable_bins]
    mean_remaining = np.mean(remaining_capacities)

    for i in np.where(suitable_bins)[0]:
        if priorities[i] == 0.0:
            if bins_remain_cap[i] <= mean_remaining:
                priorities[i] = 0.5
            else:
                priorities[i] = 0.25

    return priorities
```
