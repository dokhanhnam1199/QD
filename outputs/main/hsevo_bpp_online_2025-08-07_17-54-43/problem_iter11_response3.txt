```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Best‑fit with small ε‑greedy exploration and item‑scaled near‑full boost."""
    epsilon = 0.1
    boost = 0.5
    near_full_thresh = max(0.02, 0.05 * item)
    feasible = bins_remain_cap >= item
    n = bins_remain_cap.shape[0]
    scores = np.full(n, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    base = -slack
    near_full = slack <= near_full_thresh
    base[near_full] += boost
    scores[feasible] = base
    if np.random.rand() < epsilon:
        rand_scores = np.random.rand(n)
        rand_scores[~feasible] = -np.inf
        scores = rand_scores
    return scores
```
