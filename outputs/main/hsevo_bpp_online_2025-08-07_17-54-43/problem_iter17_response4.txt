```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Deterministic score: ratio + inverse‑slack, exact‑fit/near‑full bonuses, tiny index tie‑breaker."""
    feasible = bins_remain_cap >= item
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    ratio = item / bins_remain_cap[feasible]
    inv_slack = 1.0 / (slack + 1e-12)
    base = ratio + 0.01 * inv_slack
    base[slack == 0] += 1.0
    near_full = slack <= 0.05 * item
    base[near_full] += 0.5
    idx = np.flatnonzero(feasible)
    base += idx * 1
    scores[feasible] = base
    return scores
```
