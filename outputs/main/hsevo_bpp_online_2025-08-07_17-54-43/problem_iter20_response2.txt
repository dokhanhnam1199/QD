```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Best-fit slack with capped boost and ratio weighting for online bin packing."""
    n = bins_remain_cap.size
    feasible = bins_remain_cap >= item
    scores = np.full(n, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    base = -slack
    boost_factor = 0.5
    max_boost = 5.0
    tiny = 1e-6
    boost = np.minimum(boost_factor / (slack + tiny), max_boost)
    ratio = item / bins_remain_cap[feasible]
    combined = base + boost + 0.1 * ratio
    idx = np.flatnonzero(feasible)
    combined += 1e-9 * idx
    scores[feasible] = combined
    return scores
```
