```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    epsilon = 0.05
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    base = 1.0 / (slack + 1e-12)
    near_full_thresh = max(0.02, 0.05 * item)
    base += np.where(slack <= near_full_thresh, 0.5, 0.0)
    base += np.where(slack <= 1e-12, 2.0, 0.0)
    scores[feasible] = base
    if np.random.rand() < epsilon:
        scores[feasible] = np.random.rand(feasible.sum())
    return scores
```
