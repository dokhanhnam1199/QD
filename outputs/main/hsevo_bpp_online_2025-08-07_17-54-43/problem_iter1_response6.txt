```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    mask = bins_remain_cap >= item
    ratio = np.empty_like(bins_remain_cap, dtype=np.float64)
    ratio.fill(0.0)
    ratio[mask] = item / bins_remain_cap[mask]
    if mask.any():
        t = np.percentile(ratio[mask], 80)
    else:
        t = 0.5
    k = 15.0
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    priority[mask] = 1.0 / (1.0 + np.exp(-k * (ratio[mask] - t)))
    return priority
```
