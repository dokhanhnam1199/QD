```python
import numpy as np

# Inverse‑slack priority with simple ε‑greedy exploration.
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Score bins by inverse slack, using fixed ε‑greedy random fallback."""
    eps = 1e-9
    explore_prob = 0.1
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return scores
    slack = bins_remain_cap[feasible] - item
    scores[feasible] = 1.0 / (slack + eps)
    if np.random.rand() < explore_prob:
        scores[feasible] = np.random.rand(feasible.sum())
    return scores
```
