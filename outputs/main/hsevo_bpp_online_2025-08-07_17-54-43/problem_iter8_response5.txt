```python
import numpy as np

def priority_v2(item, bins_remain_cap):
    """Adaptive best-fit with near‑full and exact fit boosts, epsilon‑greedy exploration."""
    if not hasattr(priority_v2, "epsilon"):
        priority_v2.epsilon = 0.3
        priority_v2.near_full_threshold_factor = 0.05
        priority_v2.alpha = 0.01
        priority_v2.exact_fit_boost = 3.0
        priority_v2.near_full_boost = 0.5
    if np.random.rand() < priority_v2.epsilon:
        return np.random.random(bins_remain_cap.shape)
    slack = bins_remain_cap - item
    valid = slack >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    priorities[valid] = -slack[valid] + priority_v2.alpha * slack[valid]
    priorities[valid & (slack == 0)] += priority_v2.exact_fit_boost
    threshold = min(0.1, priority_v2.near_full_threshold_factor * np.max(bins_remain_cap))
    near_full = (slack <= threshold) & valid
    priorities[near_full] += priority_v2.near_full_boost
    return priorities
```
