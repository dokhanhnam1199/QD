```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Adaptive best-fit with worst‑fit bias, near‑full boost and ε‑greedy."""
    if not hasattr(priority_v2, "epsilon"):
        priority_v2.epsilon = 0.5
        priority_v2.epsilon_min = 0.05
        priority_v2.decay = 0.995
        priority_v2.step = 0
        priority_v2.near_full_thresh = 0.1
        priority_v2.alpha = 0.01
    if np.random.rand() < priority_v2.epsilon:
        return np.random.random(bins_remain_cap.shape)
    slack = bins_remain_cap - item
    valid = slack >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    priorities[valid] = -slack[valid] + priority_v2.alpha * slack[valid]
    near_full = slack <= priority_v2.near_full_thresh
    priorities[valid & near_full] += 0.5
    priority_v2.epsilon = max(priority_v2.epsilon_min, priority_v2.epsilon * priority_v2.decay)
    priority_v2.step += 1
    return priorities
```
