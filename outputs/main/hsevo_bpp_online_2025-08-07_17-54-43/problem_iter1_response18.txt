```python
import numpy as np

EPSILON = 0.05

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    fit_mask = bins_remain_cap >= item
    if np.random.random() < EPSILON:
        rand_scores = np.random.rand(np.count_nonzero(fit_mask))
        priorities[fit_mask] = rand_scores
    else:
        waste = bins_remain_cap[fit_mask] - item
        priorities[fit_mask] = -waste
    return priorities
```
