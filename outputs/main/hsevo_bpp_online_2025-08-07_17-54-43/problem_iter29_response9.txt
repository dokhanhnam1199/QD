```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    epsilon = 0.05
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    base = -slack
    base += 0.05 * (item / bins_remain_cap[feasible])
    near_full = slack <= 0.05 * bins_remain_cap[feasible]
    base[near_full] += 0.5
    idx = np.flatnonzero(feasible)
    base += 1e-6 * idx
    if np.random.rand() < epsilon:
        scores[feasible] = np.random.rand(slack.size)
    else:
        scores[feasible] = base
    return scores
```
