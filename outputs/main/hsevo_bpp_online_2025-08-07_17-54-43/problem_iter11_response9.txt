```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Static epsilon‑greedy best‑fit: negative slack, +boost for near‑full and exact fits."""
    epsilon = 0.1
    near_full_factor = 0.05
    near_full_abs_thresh = 0.02
    near_full_boost = 0.5
    exact_fit_boost = 1.0
    n = bins_remain_cap.size
    scores = np.full(n, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return scores
    # Compute slack for feasible bins
    slack = bins_remain_cap[feasible] - item
    base = -slack
    # Apply near‑full boost
    near_full_thresh = max(near_full_abs_thresh, near_full_factor * item)
    base[slack <= near_full_thresh] += near_full_boost
    # Apply exact‑fit boost
    base[np.isclose(slack, 0.0, atol=1e-9)] += exact_fit_boost
    scores[feasible] = base
    # ε‑greedy exploration
    if np.random.rand() < epsilon:
        rand = np.random.rand(n)
        rand[~feasible] = -np.inf
        scores = rand
    return scores
```
