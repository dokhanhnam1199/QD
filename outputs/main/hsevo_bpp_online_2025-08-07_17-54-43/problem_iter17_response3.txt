```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Deterministic best‑fit: fill ratio + inverse slack with near‑full/exact‑fit bonuses."""
    # Constants for scoring
    INF_NEG = -np.inf
    eps = 1e-9               # avoid division by zero
    alpha = 0.1              # weight of inverse‑slack term
    near_full_thr = 0.05 * item
    near_full_bonus = 0.5
    exact_fit_thr = eps
    exact_fit_bonus = 1.0

    scores = np.full_like(bins_remain_cap, INF_NEG, dtype=float)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return scores

    cap_feas = bins_remain_cap[feasible]
    slack = cap_feas - item
    fill_ratio = item / cap_feas
    inv_slack = 1.0 / (slack + eps)
    base = fill_ratio + alpha * inv_slack

    # deterministic bonuses
    base[slack <= near_full_thr] += near_full_bonus
    base[slack <= exact_fit_thr] += exact_fit_bonus

    scores[feasible] = base
    return scores
```
