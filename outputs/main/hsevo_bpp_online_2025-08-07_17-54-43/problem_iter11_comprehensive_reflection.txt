
- **Keywords:** adaptive exploration, capacity‑aware scoring, infeasibility‑aware scoring, minimalistic design.  
- **Advice:** Employ context‑sensitive scoring that rewards fits close to capacity, use a simple exploration scheme that gradually reduces randomness, design clear penalties that avoid masking infeasibility, and avoid worst‑fit or unnormalized random scoring. Keep parameters small and code modular to reduce duplication.  
- **Avoid:** dynamic ε‑decay, explicit infeasibility marking, problem‑specific boosts, static duplicated code, stateful parameters, over‑parameterization, multiplicative boosts, per‑element random mixing.  
- **Explanation:** These practices obfuscate intent, create maintenance burdens, and can hurt performance by over‑tuning or poorly penalizing infeasible moves.