```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Best‑fit with fixed ε‑greedy exploration and near‑full boost."""
    if not hasattr(priority_v2, "epsilon"):
        priority_v2.epsilon = 0.1
        priority_v2.near_full_thresh = 0.05
        priority_v2.boost = 0.5
    eps = priority_v2.epsilon
    feasible = bins_remain_cap >= item
    n = bins_remain_cap.shape[0]
    scores = np.full(n, -np.inf, dtype=float)
    if np.random.rand() < eps:
        scores[feasible] = np.random.rand(feasible.sum())
    else:
        slack = bins_remain_cap[feasible] - item
        base = -slack
        near_full = slack <= priority_v2.near_full_thresh
        base[near_full] += priority_v2.boost
        scores[feasible] = base
    return scores
```
