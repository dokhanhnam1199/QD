```python
import numpy as np

# Priority function for online bin packing: combines best‑fit slack, capacity ratio,
# a near‑full bonus, and a tiny deterministic tie‑breaker.
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Score bins using best‑fit slack and capacity‑ratio, plus near‑full bonus and tiny tie‑breaker."""
    feasible = bins_remain_cap >= item
    slack = bins_remain_cap - item
    score = -slack
    ratio = item / bins_remain_cap
    score += 0.2 * ratio
    near_full = (slack <= 0.02 * item) & feasible
    score[near_full] += 0.5
    indices = np.arange(bins_remain_cap.size)
    score[feasible] -= indices[feasible] * 1e-9
    score[~feasible] = -np.inf
    return score
```
