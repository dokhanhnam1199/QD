```python
import numpy as np

    def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
        """Negative slack best‑fit with constant ε‑greedy, capped boost, dead‑space filter."""
        n = bins_remain_cap.size
        priorities = np.full(n, -np.inf, dtype=float)
        feasible_mask = bins_remain_cap >= item
        if not feasible_mask.any():
            return priorities
        feasible_idx = np.flatnonzero(feasible_mask)
        slack_all = bins_remain_cap[feasible_mask] - item
        dead_thresh = 0.5 * bins_remain_cap[feasible_mask]
        keep_mask = slack_all <= dead_thresh
        if not keep_mask.any():
            keep_mask = np.ones_like(slack_all, dtype=bool)
        selected_idx = feasible_idx[keep_mask]
        slack_selected = slack_all[keep_mask]
        base = -slack_selected
        boost = np.minimum(0.1, 0.5 / (slack_selected + 1e-9))
        priorities[selected_idx] = base + boost
        epsilon = 0.05
        if np.random.rand() < epsilon:
            rand_idx = np.random.choice(feasible_mask.nonzero()[0])
            priorities[rand_idx] = priorities.max() + 1.0
        return priorities
```
