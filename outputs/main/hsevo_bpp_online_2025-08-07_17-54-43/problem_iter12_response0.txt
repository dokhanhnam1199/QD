```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n = bins_remain_cap.size
    valid = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -1e9, dtype=float)
    if np.any(valid):
        slack = bins_remain_cap[valid] - item
        priorities[valid] = -slack
        valid_count = np.count_nonzero(valid)
        epsilon = 0.05 * (1 - valid_count / n)
        if np.random.rand() < epsilon:
            idx = np.random.choice(np.flatnonzero(valid))
            priorities[idx] += 1e-3
    return priorities
```
