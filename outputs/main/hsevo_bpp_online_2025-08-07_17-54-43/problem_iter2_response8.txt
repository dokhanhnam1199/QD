```python
import numpy as np
_EPSILON = 0.1
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n = bins_remain_cap.shape[0]
    scores = np.full(n, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return scores
    waste = bins_remain_cap[feasible] - item
    best_fit = -waste
    rand_vals = np.random.rand(best_fit.size)
    explore = np.random.rand(best_fit.size) < _EPSILON
    combined = np.where(explore, rand_vals, best_fit)
    idx = np.where(feasible)[0]
    tie_penalty = -idx * 1e-6
    final = combined + tie_penalty
    scores[feasible] = final
    return scores
```
