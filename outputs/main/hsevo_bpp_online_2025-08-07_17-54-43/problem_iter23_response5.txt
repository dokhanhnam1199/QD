```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Best‑fit priority using negative slack, static ε‑greedy exploration, and index tie‑breaker."""
    epsilon = 0.05
    n = bins_remain_cap.size
    priorities = np.full(n, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return priorities
    slack = bins_remain_cap[feasible] - item
    base = -slack
    tie_break = np.arange(n)[feasible][::-1] * 1e-6
    base += tie_break
    if np.random.rand() < epsilon:
        rand = np.random.rand(n)
        rand[~feasible] = -np.inf
        priorities = rand
    else:
        priorities[feasible] = base
    return priorities
```
