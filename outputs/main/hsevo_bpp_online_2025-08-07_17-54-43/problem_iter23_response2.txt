```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Best‑fit scoring with static ε‑greedy; tie‑breaks with tiny index offset."""
    epsilon = 0.05
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    base = -slack
    boost = 1e-3
    idx = np.where(feasible)[0]
    deterministic = base + boost + 1e-9 * idx
    if np.random.rand() < epsilon:
        scores[feasible] = np.random.rand(np.sum(feasible))
    else:
        scores[feasible] = deterministic
    return scores
```
