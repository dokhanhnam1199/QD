{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\n# Priority function for online bin packing using simple best-fit and fixed \u03b5\u2011greedy.\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Best\u2011fit scoring with fixed \u03b5\u2011greedy exploration and near\u2011full, exact\u2011fit boosts.\"\"\"\n    if not hasattr(priority_v2, \"_epsilon\"):\n        priority_v2._epsilon = 0.1  # constant exploration probability\n    n = bins_remain_cap.size\n    scores = np.full(n, -np.inf, dtype=float)               # infeasible bins get -inf\n    feasible = bins_remain_cap >= item\n    if not np.any(feasible):\n        return scores\n    # base best\u2011fit score (higher is better)\n    slack = bins_remain_cap[feasible] - item\n    base = -slack\n    # near\u2011full and exact\u2011fit boosts\n    near_full_thresh = max(0.02, 0.05 * item)\n    boost = np.zeros_like(slack)\n    boost[slack == 0] = 10.0\n    boost[slack <= near_full_thresh] += 3.0\n    base += boost\n    scores[feasible] = base\n    # \u03b5\u2011greedy: replace with pure random scores with probability \u03b5\n    if np.random.rand() < priority_v2._epsilon:\n        rand = np.random.rand(n)\n        rand[~feasible] = -np.inf\n        return rand\n    return scores\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}