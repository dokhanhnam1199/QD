```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Softmax-based priority for online BPP.

    Feasible bins receive a score proportional to the exponential of the
    remaining capacity after placing the item, then normalised by softmax.
    Infeasible bins receive a priority of zero.
    """
    bin_arr = np.asarray(bins_remain_cap, dtype=float)
    delta = bin_arr - item
    feasible = delta >= 0
    scores = np.zeros_like(bin_arr)
    if np.any(feasible):
        shift = np.max(delta[feasible])
        exp_vals = np.exp(delta[feasible] - shift)
        probs = exp_vals / exp_vals.sum()
        scores[feasible] = probs
    return scores
```
