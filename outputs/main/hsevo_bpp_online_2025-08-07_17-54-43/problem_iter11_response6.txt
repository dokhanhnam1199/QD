```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray,
                epsilon: float = 0.05,
                near_full_frac: float = 0.05,
                boost: float = 0.5) -> np.ndarray:
    """Best‑fit scoring with near‑full boost and ε‑greedy random exploration."""
    feasible = bins_remain_cap >= item
    n = bins_remain_cap.shape[0]
    scores = np.full(n, -np.inf, dtype=float)
    if not np.any(feasible):
        return.

    slack = bins_remain_cap[feasible] - item
    base = -slack
    near_full_thresh = near_full_frac * item
    base[slack <= near_full_thresh] += boost
    scores[feasible] = base
    if np.random.rand() < epsilon:
        scores[feasible] = np.random.rand(feasible.sum())
    return scores
```
