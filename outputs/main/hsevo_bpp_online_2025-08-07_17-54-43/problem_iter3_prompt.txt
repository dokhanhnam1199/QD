{"system": "You are an expert in the domain of optimization heuristics. Your task is to design heuristics that can effectively solve optimization problems.\nYour response outputs Python code only and do not add comments into the code. Format your code as a Python code string: \"```python ... ```\".\n", "user": "You are an expert in the domain of optimization heuristics. Your task is to write a priority function for Solving online Bin Packing Problem (BPP). BPP requires packing a set of items of various sizes into the smallest number of fixed-sized bins. Online BPP requires packing an item as soon as it is received.\nThe priority function takes as input an item and an array of bins_remain_cap (containing the remaining capacity of each bin) and returns a priority score for each bin. The bin with the highest priority score will be selected for the item.\n\n\nCurrent heuristics:\ndef priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n\n    eps = 0.1\n    n = bins_remain_cap.size\n    if np.random.rand() < eps:\n        return np.random.random(n)\n    priorities = -np.inf * np.ones_like(bins_remain_cap, dtype=float)\n    valid = bins_remain_cap >= item\n    priorities[valid] = -(bins_remain_cap[valid] - item)\n    return priorities\n\nNow, think outside the box write a mutated function `priority_v2` better than current version.\nYou can use some hints below:\n- \n- **Keywords**: Intent\u2011driven, infeasibility handling, slack minimization (best\u2011fit), \u03b5\u2011greedy exploration, adaptive decay.  \n- **Advice**: Step\u202f1: Document intent. Step\u202f2: Adaptive \u03b5\u2011decay. Step\u202f3: Local slack repair. Step\u202f4: Scenario validation.  \n- **Avoid**: Fixed greedy orders, static \u03b5, naive worst\u2011fit, unnormalized random scoring, ignoring infeasible states, one\u2011size\u2011fits\u2011all callbacks.  \n- **Explanation**: Adaptive \u03b5 balances exploration/exploitation, local repair fixes slack, scenario testing uncovers corner cases, clear documentation supports reproducibility and tuning.\n\nOutput code only and enclose your code with Python code block: ```python ... ```.\nI'm going to tip $999K for a better solution!"}