```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # First-Fit Decreasing heuristic inspiration
    possible_bins = bins_remain_cap >= item
    if np.any(possible_bins):
        priorities[possible_bins] = bins_remain_cap[possible_bins] - item # Favor bins where item fits with least remaining capacity. Maximize fullness.

    # If no bins can accommodate item, assign negative priority
    priorities[~possible_bins] = -np.inf
    return priorities
```
