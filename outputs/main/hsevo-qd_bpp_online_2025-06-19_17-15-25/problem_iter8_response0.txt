```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering fit, remaining capacity, and randomness."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    remaining_capacity = bins_remain_cap - item
    fit_indices = remaining_capacity >= 0

    if np.any(fit_indices):
        priorities[fit_indices] = (bins_remain_cap[fit_indices] / np.mean(bins_remain_cap[fit_indices])) / (item + 1e-9)
        priorities[fit_indices] += np.random.rand(np.sum(fit_indices)) * 0.01


    priorities[remaining_capacity < 0] = -1e9

    if np.sum(priorities) > 0:
        priorities = priorities / np.sum(priorities)
    elif np.sum(priorities) < 0:
        priorities = priorities - np.min(priorities)
        priorities = priorities / np.sum(priorities)

    return priorities
```
