```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste, fill percentage, and infeasibility."""
    epsilon = 1e-9
    bins_remain_cap = np.maximum(bins_remain_cap, epsilon)

    # 1. Fit Score: Exponential decay for waste, -inf if item doesn't fit
    waste = bins_remain_cap - item
    fit_score = np.where(waste >= 0, np.exp(-waste / (item + epsilon)), -np.inf)

    # 2. Fill Percentage: Encourage filling bins completely, target 80% fill
    fill_percentage = item / bins_remain_cap
    fill_score = np.where(bins_remain_cap >= item, np.exp(-np.abs(fill_percentage - 0.8)), -np.inf)

    # 3. Combine the scores with weights.
    priority = 0.7 * fit_score + 0.3 * fill_score

    return priority
```
