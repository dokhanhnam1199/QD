**Analysis:**
Comparing (1st) vs (20th), we see that the 1st heuristic uses adaptive weighting based on the remaining capacity distribution, calculated by standardizing the remaining capacity. The 20th heuristic uses a fixed weighting of fill score, waste penalty and near-full penalty.
(2nd best) vs (second worst) we see that the 2nd heuristic adapts weights based on total capacity relative to item size, using a rule-based system, while the 19th heuristic uses fixed weights combining fill score, waste penalty, and a near-full penalty. The 2nd heuristic is more complex in adapting the weights.
Comparing (1st) vs (2nd), we see the 1st uses mean and std of remaining capacity to adapt weights via tanh function. While the 2nd adapts weights based on total capacity with threshold.
(3rd) vs (4th) they are identical.
Comparing (second worst) vs (worst), they are identical.
Overall: The better heuristics tend to incorporate more sophisticated adaptive weighting schemes that consider the distribution of remaining capacities or item sizes. They dynamically adjust the weights given to waste minimization, near-full bonuses, and capacity considerations. Simpler heuristics rely on fixed weights or basic conditional logic based on total capacity. Exponential decays appear to be helpful for weighing the waste. Penalties for bins that are almost full, or almost empty, can also improve the results.

**Experience:**
When designing heuristics, start with a combination of factors (waste, near-full, capacity). Then, implement adaptive weighting based on data distribution (mean, std) or item characteristics. Experiment with exponential functions for weighing waste. Introduce penalties to discourage near-full or near-empty bins after item placement.
