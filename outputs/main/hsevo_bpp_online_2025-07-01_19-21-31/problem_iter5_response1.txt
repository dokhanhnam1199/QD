```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score, utilization, and near-full bin penalties for priority."""
    epsilon = 1e-9
    effective_capacities = np.maximum(bins_remain_cap, epsilon)

    # 1. Fit Score
    fit_score = np.exp(-np.abs(effective_capacities - item) / (0.2 * item + epsilon))

    # 2. Capacity Utilization
    utilization_score = effective_capacities / np.sum(bins_remain_cap + epsilon)

    # 3. Combine scores (adaptive weighting)
    priority = fit_score - 0.1 * utilization_score

    # 4. Near-full bin penalty (experimental calibration)
    post_fill = bins_remain_cap - item
    near_full_threshold = 0.1
    near_full_penalty = -10
    priority[(bins_remain_cap >= item) & (post_fill < near_full_threshold)] += near_full_penalty

    # 5. Feasibility enforcement
    priority[bins_remain_cap < item] = -np.inf

    return priority
```
