```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit, avoids near-empty bins, and minimizes waste."""
    priorities = np.zeros_like(bins_remain_cap)
    fit_check = bins_remain_cap >= item
    remaining_space = bins_remain_cap - item
    remaining_space[~fit_check] = np.inf
    priorities = -remaining_space  # Best fit

    post_fill = bins_remain_cap - item
    small_space_penalty = -10
    priorities[fit_check & (post_fill < 0.1)] += small_space_penalty

    difference = bins_remain_cap - item
    difference[difference < 0] = np.inf
    priorities -= difference / np.max(bins_remain_cap)

    return priorities
```
