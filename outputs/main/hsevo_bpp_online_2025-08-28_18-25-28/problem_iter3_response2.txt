```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, temperature: float = 1.0) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    fit_scores = np.zeros_like(bins_remain_cap)
    fit_scores[possible_bins] = - (bins_remain_cap[possible_bins] - item)
    
    diversity_scores = np.zeros_like(bins_remain_cap)
    
    filled_percentage = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    
    diversity_scores[possible_bins] = filled_percentage[possible_bins]
    
    combined_scores = fit_scores + diversity_scores

    normalized_scores = (combined_scores - np.min(combined_scores)) / (np.max(combined_scores) - np.min(combined_scores) + 1e-8)
    
    probabilities = np.exp(normalized_scores / temperature)
    probabilities = probabilities / np.sum(probabilities)

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities[possible_bins]
    
    return priorities
```
