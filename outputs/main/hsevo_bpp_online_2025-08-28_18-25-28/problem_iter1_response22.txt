```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities
    worst_fit_capacity = np.max(bins_remain_cap[valid_bins])
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            priorities[i] = bins_remain_cap[i] - item
    return priorities
```
