```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    remaining_caps = bins_remain_cap[possible_bins]
    
    fit_scores = 1.0 / (remaining_caps - item + 1e-6)
    
    exploration_bonus = 1.0 / (np.sum(bins_remain_cap) + 1e-6)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = fit_scores + exploration_bonus
    
    best_bin_index = np.argmax(priorities[possible_bins])
    
    best_bin_index_global = np.where(possible_bins)[0][best_bin_index]
    
    priorities[best_bin_index_global] *= 2.0
    
    return priorities
```
