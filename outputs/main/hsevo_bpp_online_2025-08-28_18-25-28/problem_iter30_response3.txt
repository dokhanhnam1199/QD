```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = bins_remain_cap[possible_bins] / (np.max(bins_remain_cap) + 1e-9)
    fit_scores = 1.0 / (bins_remain_cap[possible_bins] - item + 1e-9)
    
    temperature = 1.0 / (np.mean(bin_utilizations) + 1e-9)

    probabilities = np.exp(temperature * fit_scores) / np.sum(np.exp(temperature * fit_scores))

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities
    
    best_bin_index = np.argmax(priorities[possible_bins])
    priorities[possible_bins] = probabilities
    priorities[possible_bins[best_bin_index]] += 0.1 

    return priorities
```
