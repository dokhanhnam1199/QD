```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    
    bin_fits = bins_remain_cap[possible_bins] - item
    
    best_bin_index = np.argmin(bin_fits)
    
    priorities[possible_bins] = 1.0
    priorities[possible_bins[best_bin_index]] = 2.0
    
    avg_remaining_cap = np.mean(bins_remain_cap[possible_bins])
    
    
    for i in np.where(possible_bins)[0]:
        if bins_remain_cap[i] > avg_remaining_cap * 1.2:
            priorities[i] += 0.5
        elif bins_remain_cap[i] < avg_remaining_cap * 0.8:
            priorities[i] += 0.2
    
    return priorities
```
