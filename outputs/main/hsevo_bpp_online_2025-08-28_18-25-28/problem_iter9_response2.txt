```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    remaining_capacities = bins_remain_cap[possible_bins]
    waste = remaining_capacities - item
    
    best_bin_index = np.argmin(waste)
    priorities[possible_bins] = 1.0
    priorities[possible_bins[best_bin_index]] = 2.0
    
    avg_remaining = np.mean(bins_remain_cap[possible_bins])
    
    for i in range(n_bins):
        if possible_bins[i]:
            if bins_remain_cap[i] < avg_remaining * 0.5:
                priorities[i] += 0.5
            else:
                priorities[i] += 0.2
    
    return priorities
```
