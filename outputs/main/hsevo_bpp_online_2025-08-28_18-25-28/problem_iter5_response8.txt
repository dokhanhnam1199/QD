```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a temperature-scaled softmax selection for bin assignment, adding diversity."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    temperature = 1.0
    fit_scores = (bins_remain_cap[possible_bins] - item)
    exp_fit_scores = np.exp(-fit_scores / temperature)
    diversity_scores = 1.0 / (np.sum(possible_bins) + 1e-6)
    combined_scores = exp_fit_scores * diversity_scores
    normalized_scores = combined_scores / np.sum(combined_scores)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = normalized_scores
    return priorities
```
