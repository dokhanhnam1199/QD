```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    bin_utilizations = np.where(possible_bins, bin_utilizations, 0)

    temperature = np.max(bin_utilizations) if np.any(bin_utilizations > 0) else 1.0

    probabilities = np.exp(-(bin_utilizations - np.mean(bin_utilizations)) / temperature)
    probabilities = np.where(possible_bins, probabilities, 0)
    probabilities /= np.sum(probabilities) if np.sum(probabilities) > 0 else 1.0

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities[possible_bins]

    return priorities
```
