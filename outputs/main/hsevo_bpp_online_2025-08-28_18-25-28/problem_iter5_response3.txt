```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, temperature: float = 1.0) -> np.ndarray:
    """Combines fit and diversity scores with temperature-scaled softmax."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    fit_scores = np.zeros_like(bins_remain_cap)
    fit_scores[possible_bins] = 1.0 / (bins_remain_cap[possible_bins] - item + 1e-6)
    bin_occupancy = 1.0 - bins_remain_cap / np.max(bins_remain_cap)
    diversity_scores = bin_occupancy * possible_bins
    combined_scores = 0.7 * fit_scores + 0.3 * diversity_scores
    normalized_scores = combined_scores / np.sum(combined_scores) if np.sum(combined_scores) > 0 else np.zeros_like(combined_scores)
    probabilities = np.exp(normalized_scores / temperature)
    probabilities = probabilities / np.sum(probabilities)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities
    return priorities
```
