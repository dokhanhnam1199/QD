import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, exploration_bonus_epsilon: float = 0.0008656175253470169) -> np.ndarray:
    """Combines best-fit with a simple exploration bonus for less-full bins."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    waste = bins_remain_cap[possible_bins] - item
    priorities = 1.0 / (waste + exploration_bonus_epsilon)
    best_bin_index = np.argmin(bins_remain_cap[possible_bins] - item)
    priorities[possible_bins] = priorities[possible_bins]
    priorities[best_bin_index] = 2.0
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = priorities[possible_bins] + 1
    priorities[best_bin_index] = 2.0
    return priorities
