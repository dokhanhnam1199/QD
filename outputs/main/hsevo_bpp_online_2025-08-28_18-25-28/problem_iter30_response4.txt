```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = bins_remain_cap[possible_bins] / (np.max(bins_remain_cap) or 1e-6)
    temperature = 1.0 - np.mean(bin_utilizations)
    temperature = max(0.1, min(temperature, 2.0))

    fit_scores = (bins_remain_cap[possible_bins] - item)
    
    normalized_scores = np.exp(-fit_scores / temperature)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = normalized_scores / np.sum(normalized_scores)

    best_bin_index = np.argmax(priorities[possible_bins])
    priorities[possible_bins] = 0.0
    priorities[possible_bins[best_bin_index]] = 1.0
    return priorities
```
