```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    temperature = np.mean(bin_utilizations)

    priorities = np.zeros_like(bins_remain_cap)
    
    best_fit_scores = - (bins_remain_cap[possible_bins] - item)
    
    if np.any(possible_bins):
        best_bin_index = np.argmax(best_fit_scores)
        best_bin_index = np.where(possible_bins)[0][best_bin_index]

        exploration_scores = np.exp(best_fit_scores / temperature)
        
        priorities[possible_bins] = exploration_scores
        priorities[best_bin_index] *= 2.0 
        
    return priorities
```
