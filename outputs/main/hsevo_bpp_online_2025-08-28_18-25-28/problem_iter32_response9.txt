```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with temperature-scaled softmax for robust bin selection."""
    n_bins = len(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros(n_bins)

    fit_scores = bins_remain_cap[possible_bins] - item
    
    bin_utilization = 1.0 - (bins_remain_cap / np.max(bins_remain_cap))
    
    temperature = 0.1 + 0.9 * np.mean(bin_utilization[possible_bins])
    
    scores = np.exp(-fit_scores / temperature)
    
    priorities = np.zeros(n_bins)
    priorities[possible_bins] = scores / np.sum(scores)
    
    best_bin_index = np.argmin(fit_scores)
    priorities[possible_bins] = np.where(np.arange(len(possible_bins)) == np.argmin(fit_scores), 2.0, 1.0)

    return priorities
```
