```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    priorities = np.zeros_like(bins_remain_cap)
    
    remaining_capacities = bins_remain_cap[possible_bins]
    
    fit_scores = remaining_capacities - item
    
    
    avg_remaining = np.mean(bins_remain_cap[possible_bins])
    
    exploration_bonus = np.exp(-(fit_scores - avg_remaining)**2 / (2 * (np.std(fit_scores)**2 + 1e-6)))
    
    
    priorities[possible_bins] = exploration_bonus
    
    best_bin_index = np.argmax(priorities[possible_bins])
    
    priorities[possible_bins] = 0.0
    priorities[possible_bins[best_bin_index]] = 1.0

    return priorities
```
