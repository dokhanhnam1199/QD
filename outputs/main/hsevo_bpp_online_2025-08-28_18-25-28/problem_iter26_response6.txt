```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with adaptive softmax exploration and utilization-based temperature."""
    n_bins = len(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    remaining_caps = bins_remain_cap[possible_bins]
    fit_scores = 1.0 / (remaining_caps - item + 1e-6)
    bin_utilization = np.sum(bins_remain_cap) / (n_bins * np.max(bins_remain_cap))
    temperature = 1.0 - bin_utilization
    temperature = np.clip(temperature, 0.1, 1.0)
    exp_scores = np.exp(fit_scores / temperature)
    probabilities = exp_scores / np.sum(exp_scores)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities
    return priorities
```
