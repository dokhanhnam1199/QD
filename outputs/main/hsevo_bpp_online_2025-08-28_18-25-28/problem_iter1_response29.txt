```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    suitable_bins = bins_remain_cap >= item
    if not np.any(suitable_bins):
        return np.zeros_like(bins_remain_cap)
    
    remaining_capacities = bins_remain_cap[suitable_bins]
    
    priorities = np.zeros_like(bins_remain_cap)
    
    temp = np.exp((remaining_capacities - item) / (item + 1e-6))
    
    priorities[suitable_bins] = temp
    
    return priorities / np.sum(priorities) if np.sum(priorities) > 0 else np.zeros_like(bins_remain_cap)
```
