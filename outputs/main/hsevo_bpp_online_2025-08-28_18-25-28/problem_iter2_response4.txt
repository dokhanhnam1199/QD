```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a probabilistic softmax selection for bin assignment."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities

    remaining_caps = bins_remain_cap[valid_bins]
    fit_scores = item / remaining_caps
    exp_fit_scores = np.exp(-fit_scores)
    probabilities = exp_fit_scores / np.sum(exp_fit_scores)
    priorities[valid_bins] = probabilities
    return priorities
```
