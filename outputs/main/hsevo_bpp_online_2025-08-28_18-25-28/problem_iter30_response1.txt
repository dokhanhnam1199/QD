```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilization = bins_remain_cap[possible_bins] / bins_remain_cap[possible_bins].max()
    fit_scores = (bins_remain_cap[possible_bins] - item)
    
    temperature = 1.0 - np.mean(bin_utilization)
    
    temperature = max(0.1, temperature)
    
    exp_scores = np.exp(fit_scores / temperature)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = exp_scores / np.sum(exp_scores)
    
    
    best_bin_index = np.argmax(priorities[possible_bins])
    priorities[possible_bins] = 0.0
    priorities[possible_bins[best_bin_index]] = 1.0
    
    return priorities
```
