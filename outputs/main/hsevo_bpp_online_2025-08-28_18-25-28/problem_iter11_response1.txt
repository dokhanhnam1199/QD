```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with adaptive temperature-scaled softmax exploration."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = - (bins_remain_cap[possible_bins] - item)
    temperature = np.mean(bins_remain_cap[possible_bins]) / item if np.mean(bins_remain_cap[possible_bins]) > 0 else 1.0
    probabilities = np.exp(fit_scores / temperature)
    probabilities /= np.sum(probabilities)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities
    best_bin_index = np.argmin(bins_remain_cap[possible_bins] - item)
    priorities[possible_bins[best_bin_index]] += 0.2
    return priorities
```
