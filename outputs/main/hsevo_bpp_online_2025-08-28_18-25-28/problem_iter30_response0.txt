```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    fit_scores = np.zeros_like(bins_remain_cap)
    fit_scores[possible_bins] = 1.0 / (bins_remain_cap[possible_bins] - item + 1e-6)

    bin_utilization = bins_remain_cap / np.sum(bins_remain_cap)
    
    temperature = 1.0 - np.mean(bin_utilization)
    
    probabilities = np.exp(fit_scores / temperature)
    probabilities = probabilities / np.sum(probabilities)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities[possible_bins]
    
    return priorities
```
