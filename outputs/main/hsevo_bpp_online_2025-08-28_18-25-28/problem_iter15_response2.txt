```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    bin_utilizations = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    
    temp = 1.0 / (1 + np.mean(bin_utilizations))
    
    scores = np.exp(-(bins_remain_cap[possible_bins] - item) / temp)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = scores
    
    best_bin_index = np.argmax(priorities)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[best_bin_index] = 1.0
    
    return priorities
```
