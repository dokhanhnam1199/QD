```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    
    remaining_capacities = bins_remain_cap[possible_bins]
    
    bin_utilization = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    
    
    fit_scores = 1.0 / (remaining_capacities - item + 1e-6)
    
    exploration_bonus = 0.1 * (1 - bin_utilization)
    
    priorities[possible_bins] = fit_scores + exploration_bonus
    
    best_bin_index = np.argmax(priorities[possible_bins])
    
    priorities[possible_bins] = 0.0
    priorities[possible_bins[best_bin_index]] = 1.0
    
    return priorities
```
