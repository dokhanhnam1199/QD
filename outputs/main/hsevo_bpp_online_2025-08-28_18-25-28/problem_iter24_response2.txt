```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = 1.0 - (bins_remain_cap / np.max(bins_remain_cap))
    bin_utilizations = np.where(possible_bins, bin_utilizations, 0.0)

    temperature = 1.0 / (np.mean(bin_utilizations) + 1e-6)

    probabilities = np.exp((bins_remain_cap[possible_bins] - item) / temperature)
    probabilities /= np.sum(probabilities)

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities

    return priorities
```
