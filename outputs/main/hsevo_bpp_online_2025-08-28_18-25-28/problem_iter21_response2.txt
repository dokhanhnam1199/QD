```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    priorities = np.zeros_like(bins_remain_cap)
    
    remaining_capacities = bins_remain_cap[possible_bins]
    
    bin_utilizations = 1.0 - (remaining_capacities / bins_remain_cap[possible_bins])
    
    temperature = 1.0 / (np.mean(bin_utilizations) + 1e-6)
    
    exp_values = np.exp((remaining_capacities - item) / temperature)
    
    probabilities = exp_values / np.sum(exp_values)
    
    priorities[possible_bins] = probabilities
    
    best_bin_index = np.argmax(priorities)
    
    priorities[best_bin_index] *= 2.0
    
    return priorities
```
