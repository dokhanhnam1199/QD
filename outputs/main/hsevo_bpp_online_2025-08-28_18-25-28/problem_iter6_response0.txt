```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    fill_levels = 1.0 - (bins_remain_cap / np.max(bins_remain_cap))
    fit_quality = (bins_remain_cap - item) / item
    fit_quality[~possible_bins] = -1.0

    temperature = 0.1 + (0.9 * np.random.rand())
    
    combined_scores = temperature * fit_quality + (1 - temperature) * fill_levels
    
    priorities[possible_bins] = np.exp(combined_scores[possible_bins]) / np.sum(np.exp(combined_scores[possible_bins]))
    
    best_bin_index = np.argmax(priorities)
    priorities[best_bin_index] += 0.5

    return priorities
```
