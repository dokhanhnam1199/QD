```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with softmax exploration, and introduces a diversity component."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = - (bins_remain_cap[possible_bins] - item)
    diversity_scores = 1.0 / (np.sum(possible_bins) + 1e-6)
    combined_scores = fit_scores + diversity_scores
    temperature = 1.0
    probabilities = np.exp(combined_scores / temperature)
    probabilities /= np.sum(probabilities)

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = probabilities
    return priorities
```
