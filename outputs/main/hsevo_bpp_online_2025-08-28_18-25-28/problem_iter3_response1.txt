```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, temperature: float = 1.0) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = np.zeros_like(bins_remain_cap)
    fit_scores[possible_bins] = 1.0 / (bins_remain_cap[possible_bins] - item + 1e-6)

    diversity_scores = np.zeros_like(bins_remain_cap)
    bin_counts = np.zeros_like(bins_remain_cap)
    bin_counts[possible_bins] = 1.0
    diversity_scores[possible_bins] = 1.0 / (bin_counts[possible_bins] + 1e-6)

    combined_scores = 0.7 * fit_scores + 0.3 * diversity_scores
    
    normalized_scores = np.exp(combined_scores / temperature)
    normalized_scores /= np.sum(normalized_scores)

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = normalized_scores[possible_bins]

    return priorities
```
