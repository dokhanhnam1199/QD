```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with adaptive softmax exploration and utilization bonus."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = 1.0 - (bins_remain_cap[possible_bins] / np.max(bins_remain_cap))
    temperature = 1.0 / (1.0 + np.mean(bin_utilizations))
    temperature = np.clip(temperature, 0.1, 1.0)

    best_fit_scores = - (bins_remain_cap[possible_bins] - item)
    scores = np.zeros_like(bins_remain_cap)
    scores[possible_bins] = np.exp(best_fit_scores / temperature)

    utilization_bonus = bin_utilizations * 0.5
    scores[possible_bins] *= (1 + utilization_bonus)
    
    priorities = scores / np.sum(scores) if np.sum(scores) > 0 else np.zeros_like(bins_remain_cap)
    
    return priorities
```
