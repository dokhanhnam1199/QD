```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with temperature-scaled softmax exploration."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    remaining_capacities = bins_remain_cap[possible_bins]
    fit_scores = item / remaining_capacities
    temperature = 0.1 * np.mean(remaining_capacities) + 0.1
    normalized_fit = 1.0 / (fit_scores + 1e-6)
    exp_values = np.exp(normalized_fit / temperature)
    softmax_values = exp_values / np.sum(exp_values)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = softmax_values
    return priorities
```
