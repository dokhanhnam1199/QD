```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    num_bins = len(bins_remain_cap)
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    
    fill_levels = 1.0 - (bins_remain_cap / np.max(bins_remain_cap))
    fit_quality = (bins_remain_cap - item) / item

    temperature = 0.5
    
    softmax_fill = np.exp(fill_levels / temperature) / np.sum(np.exp(fill_levels / temperature))
    softmax_fit = np.exp(fit_quality / temperature) / np.sum(np.exp(fit_quality / temperature))
    
    combined_priority = 0.6 * softmax_fit + 0.4 * softmax_fill
    
    priorities[possible_bins] = combined_priority[possible_bins]
    
    best_bin_index = np.argmax(priorities[possible_bins])
    best_bin_index = np.where(possible_bins)[0][best_bin_index]
    
    priorities[best_bin_index] += 1.0

    return priorities
```
