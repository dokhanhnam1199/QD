```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    remaining_capacities = bins_remain_cap[possible_bins]
    waste = remaining_capacities - item
    
    best_bin_index = np.argmin(waste)
    
    
    avg_utilization = np.mean(1 - bins_remain_cap / bins_remain_cap.max())
    temperature = 1.0 / (1 + avg_utilization)

    
    probabilities = np.exp(-waste / temperature)
    probabilities /= np.sum(probabilities)
    
    
    priorities[possible_bins] = probabilities
    priorities[possible_bins[best_bin_index]] += 0.5
    
    
    return priorities
```
