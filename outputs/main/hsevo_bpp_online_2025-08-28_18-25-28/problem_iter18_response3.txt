```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, temperature: float = 1.0) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    bin_utilizations = 1.0 - (bins_remain_cap[possible_bins] / bins_remain_cap[possible_bins].max())
    
    scores = bin_utilizations * (bins_remain_cap[possible_bins] >= item)

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = np.exp(scores / temperature)
    
    total_score = np.sum(priorities[possible_bins])

    if total_score > 0:
        probabilities = priorities[possible_bins] / total_score
        best_bin_index = np.argmax(probabilities)
        
        priorities[possible_bins] = probabilities
        priorities[possible_bins[best_bin_index]] += 0.5 
        
    return priorities
```
