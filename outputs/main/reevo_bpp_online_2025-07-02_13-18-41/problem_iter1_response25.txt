```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # First-Fit Decreasing inspired: Favor bins with tighter fit
            fit_ratio = item / cap
            priorities[i] = 1 / (1.01 - fit_ratio) # higher when fit is tight. avoid inf when ratio is 1
        else:
            priorities[i] = -1e9 # Very low priority if it doesn't fit

    return priorities
```
