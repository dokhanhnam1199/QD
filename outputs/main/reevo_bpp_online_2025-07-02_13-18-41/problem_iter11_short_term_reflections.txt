Scaling target fullness/range to max capacity, and almost-full threshold to remaining capacity improves performance.

*   Normalize wasted space by `bins_remain_cap` rather than item size.
*   Scale fullness target/range relative to bin size.
*   Make almost full rule relative to bin size.

Prioritize relative wasted space, target fullness, and consistent scaling for improved bin packing.

Normalize wasted space, fullness target, and almost-full thresholds relative to bin capacity for better performance.

Focus on relative wasted space, target fullness, gap penalties, and direct occupancy rewards with tuned weights.

Prioritize wasted space relative to item size, penalize near-empty bins, and scale target fullness.

Focus on relative wasted space, bin occupancy, target fullness, and penalizing high capacity.

Focus on relative metrics (wasted space, occupancy), adaptive penalties/rewards based on bin/item sizes, and targeted fullness.

Normalize fullness targets by maximum bin capacity for robustness and adaptive bin completion.

Better code:
1. Relative wasted space is calculated more effectively.
2. Target fullness is more adaptive to bin capacity.

