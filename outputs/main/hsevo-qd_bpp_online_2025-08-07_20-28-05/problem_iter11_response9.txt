```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray,
                beta: float = 0.01, temperature: float = 1.0,
                total_threshold: float = 1e-6) -> np.ndarray:
    """Score bins by inverse slack minus slackÂ², softened with temperature."""
    feasible = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    if not feasible.any():
        return priorities
    slack = bins_remain_cap[feasible] - item
    eps = 1e-9
    raw = 1.0 / (slack + eps) - beta * slack**2
    exp_scores = np.exp(raw / temperature)
    if exp_scores.sum() < total_threshold:
        return priorities
    priorities[feasible] = exp_scores
    return priorities
```
