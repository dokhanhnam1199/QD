```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray,
                epsilon: float = 0.2,
                temperature: float = 1.0,
                total_threshold: float = 0.0) -> np.ndarray:
    """Inverse slack scored, temperature‑scaled softmax, then blended with ε‑noise for tie‑breaking."""
    feasible = bins_remain_cap >= item
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    leftovers = bins_remain_cap[feasible] - item
    base = 1.0 / (leftovers + 1.0)
    exp_input = base / temperature
    exp_input = np.clip(exp_input, a_min=None, a_max=50.0)
    exp_scores = np.exp(exp_input)
    total = exp_scores.sum()
    if total >= total_threshold:
        scores[feasible] = exp_scores / total
    else:
        scores[feasible] = 0.0
    rand = np.random.rand(bins_remain_cap.shape[0])
    rand[~feasible] = 0.0
    return (1.0 - epsilon) * scores + epsilon * rand
```
