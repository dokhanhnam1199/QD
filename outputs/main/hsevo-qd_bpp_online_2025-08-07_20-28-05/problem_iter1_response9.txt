```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Computes priority for bins using a softmax-based fit strategy.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: Remaining capacities of each bin.

    Returns:
        An array of priorities for each bin.
    """
    residuals = bins_remain_cap - item
    fit_mask = residuals >= 0
    if not np.any(fit_mask):
        return np.zeros_like(bins_remain_cap)
    max_residual = np.max(residuals[fit_mask])
    shifted = residuals[fit_mask] - max_residual
    scores = np.exp(shifted)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[fit_mask] = scores
    return priorities
```
