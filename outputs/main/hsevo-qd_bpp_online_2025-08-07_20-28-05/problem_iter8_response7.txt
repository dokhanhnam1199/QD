```python
import numpy as np

def priority_v2(
    item: float,
    bins_remain_cap: np.ndarray,
    epsilon: float = 0.2,
    offset: float = 1e-3,
    score_scale: float = 1.0,
    beta: float = 0.01,
) -> np.ndarray:
    """Combine inverse slack, quadratic penalty, and ε‑greedy randomness for online BPP."""
    feasible = bins_remain_cap >= item
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    if not feasible.any():
        return scores
    leftover = bins_remain_cap[feasible] - item
    deterministic = score_scale / (leftover + offset) - beta * (leftover ** 2)
    random_part = np.random.rand(leftover.size)
    scores[feasible] = (1 - epsilon) * deterministic + epsilon * random_part
    return scores
```
