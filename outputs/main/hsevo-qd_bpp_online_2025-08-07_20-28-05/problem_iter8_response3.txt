```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, temperature: float = 0.5, epsilon: float = 0.01) -> np.ndarray:
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    slack = bins_remain_cap[feasible] - item
    inv_slack = 1.0 / (slack + 1.0)
    tightness = -slack
    raw = inv_slack + 0.1 * tightness
    raw += epsilon * np.random.rand(raw.shape[0])
    raw_shift = raw - raw.max()
    exp_scores = np.exp(raw_shift / temperature)
    probs = exp_scores / exp_scores.sum()
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    priorities[feasible] = probs
    return priorities
```
