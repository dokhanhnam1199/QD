```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    epsilon = 0.2
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return np.full_like(bins_remain_cap, -np.inf, dtype=float)
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    leftovers = bins_remain_cap[feasible] - item
    deterministic = 1.0 / (leftovers + 1.0)
    random_part = np.random.rand(leftovers.shape[0])
    combined = (1.0 - epsilon) * deterministic + epsilon * random_part
    scores[feasible] = combined
    max_score = np.max(scores[feasible])
    exp_scores = np.exp(scores - max_score)
    sum_exp = np.sum(exp_scores[feasible])
    return exp_scores / correct? Wait, we need final division:
    return exp_scores / sum_exp
```
