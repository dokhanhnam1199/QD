```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    epsilon = 0.05
    temperature = 0.3
    feasible = bins_remain_cap >= item
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    if not feasible.any():
        return scores
    slack = bins_remain_cap[feasible] - item
    max_slack = slack.max()
    denom = max_slack + 1e-12
    norm_slack = slack / denom
    raw = -norm_slack + epsilon * (np.random.rand(slack.size) * 2 -0.5)
    max_raw = raw.max()
    exp_vals = np.exp((raw - max_raw) / temperature)
    probs = exp_vals / (exp_vals.sum() + 1e-12)
    scores[feasible] = probs
    return scores
```
