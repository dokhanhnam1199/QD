```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Rank bins using inverse leftover, normalized slack, and epsilonâ€‘greedy randomness."""
    feasible = bins_remain_cap >= item
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    leftover = bins_remain_cap[feasible] - item
    max_leftover = leftover.max()
    slack_norm = (max_leftover - leftover) / (max_leftover + 1.0)
    inv_score = 1.0 / (leftover + 1.0)
    combined = 0.5 * inv_score + 0.5 * slack_norm
    epsilon = 0.2
    random_term = np.random.rand(combined.shape[0])
    scores[feasible] = (1 - epsilon) * combined + epsilon * random_term
    return scores
```
