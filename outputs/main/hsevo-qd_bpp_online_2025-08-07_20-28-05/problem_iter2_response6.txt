```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse slack scoring with negative slack penalty and epsilonâ€‘greedy randomness."""
    eps = 0.15
    feasible = bins_remain_cap >= item
    leftovers = bins_remain_cap[feasible] - item
    inv_score = 1.0 / (leftovers + 1.0)
    neg_score = -leftovers
    combined = inv_score + 0.2 * neg_score
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    scores[feasible] = (1 - eps) * combined + eps * np.random.rand(np.sum(feasible))
    return scores
```
