```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return np.full_like(bins_remain_cap, -np.inf, dtype=float)
    leftover = bins_remain_cap[feasible] - item
    eps = 1e-9
    beta = 0.01
    gamma = 0.05
    inv, inv_slack = None, 1.0 / (leftover + eps)
    deterministic = inv_slack - beta * leftover**2 - gamma * leftover
    epsilon = 0.2
    random_part = np.random.rand(feasible.sum())
    scores = (1 - epsilon) * deterministic + epsilon * random_part
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    priorities[feasible] = scores
    return priorities
```
