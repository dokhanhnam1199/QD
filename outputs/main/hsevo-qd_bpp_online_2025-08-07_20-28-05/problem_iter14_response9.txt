```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Epsilon‑greedy tight‑fit scoring: combine inverse slack, linear and quadratic penalties."""
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return np.full_like(bins_remain_cap, -np.inf, dtype=float)
    slack = bins_remain_cap[feasible] - item
    eps = 1e-9
    w_inv = 0.6
    w_lin = 0.3
    w_sq = 0.1
    beta = 0.01
    deterministic = w_inv / (slack + eps) - (w_lin + beta) * slack - w_sq * slack ** 2
    epsilon = 0.1
    random_part = np.random.rand(slack.shape[0])
    scores = (1 - epsilon) * deterministic + epsilon: but using variable name epsilon; rename.
```
