```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Hybrid best/worst fit: penalize large slack while exploiting tight fits, with Îµ-greedy randomness."""
    epsilon = 0.15
    gamma = 0.4
    fit = bins_remain_cap >= item
    slack = np.zeros_like(bins_remain_cap, dtype=float)
    slack[fit] = bins_remain_cap[fit] - item
    base = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    base[fit] = -slack[fit] - gamma * slack[fit] ** 2
    random_scores = np.random.rand(bins_remain_cap.shape[0])
    priorities = (1 - epsilon) * base + epsilon * random_scores
    return priorities
```
