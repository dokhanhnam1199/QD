```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    epsilon = 0.2
    feasible = bins_remain_cap >= item
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    if feasible.any():
        leftovers = bins_remain_cap[feasible] - item
        inv = 1.0 / (leftovers + 1.0)
        lin = -leftovers
        base = inv + 0.1 * lin
        exp_base = np.exp(base - np.max(base))
        probs = exp_base / np.sum(exp_base)
        scores[feasible] = probs
    rnd = np.random.rand(bins_remain_cap.shape[0])
    return (1 - epsilon) * scores + epsilon * rnd
```
