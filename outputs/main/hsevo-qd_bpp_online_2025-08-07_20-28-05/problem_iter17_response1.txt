```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray,
                epsilon: float = 0.15,
                w_inv: float = 0.5,
                w_lin: float = 0.3,
                w_sq: float = 0.2,
                offset: float = 1.0,
                score_scale: float = 1.0) -> np.ndarray:
    feasible = bins_remain_cap >= item
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    slack = bins_remain_cap[feasible] - item
    inv_score = w_inv * score_scale / (slack + offset)
    penalty = -w_lin * slack - w_sq * slack + -w_sq * slack**2
    deterministic = inv_score + penalty
    random = np.random.rand(slack.shape[0])
    scores[feasible] = (1 - epsilon) * deterministic + epsilon * random
    return scores
```
