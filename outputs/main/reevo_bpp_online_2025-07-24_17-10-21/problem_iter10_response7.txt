```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, alpha: float = 0.1) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    This function prioritizes bins that can accommodate the item and have the least remaining capacity.
    It directly incorporates exploration noise for better performance.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
        alpha: Parameter controlling the trade-off between "fit" score and random noise.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    valid_bins = bins_remain_cap >= item
    priorities = np.where(valid_bins, bins_remain_cap, np.inf)
    priorities = -priorities  # To prioritize bins with less remaining capacity
    priorities += alpha * np.random.uniform(-1, 1, size=len(priorities))
    return priorities
```
