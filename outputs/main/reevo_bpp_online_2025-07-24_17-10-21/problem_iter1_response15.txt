```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Filter out bins that cannot accommodate the item
    valid_bins = bins_remain_cap >= item
    
    # Initialize priorities with negative infinity for bins that cannot accommodate the item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    
    # Calculate priorities for valid bins based on a combination of remaining capacity and "fit"
    priorities[valid_bins] = -((bins_remain_cap[valid_bins] - item) ** 2) + 0.1 * bins_remain_cap[valid_bins]
    
    return priorities
```
