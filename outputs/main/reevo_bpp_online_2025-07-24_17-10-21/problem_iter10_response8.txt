```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 1e-6) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    This function prioritizes bins that can accommodate the item and have the least remaining capacity.
    A small random noise is added for exploration.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
        epsilon: Small value added for exploration.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Bins that cannot hold the item should have the lowest priority
    priorities = np.where(bins_remain_cap >= item, -bins_remain_cap, -np.inf)
    
    # Add a small random noise for exploration
    np.random.seed(0)  # For reproducibility
    priorities += np.random.uniform(0, epsilon, size=len(priorities))
    
    return priorities
```
