```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    This function implements a priority function that considers the remaining capacity of the bins after adding an item.
    It prioritizes bins that can accommodate the item and have the least remaining capacity after addition.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Directly calculate priorities based on the remaining capacity after adding the item
    priorities = np.where(bins_remain_cap >= item, bins_remain_cap - item, np.inf)
    
    # Use negative priorities so that bins with less remaining capacity are prioritized
    priorities = -priorities
    
    # Add a small random noise to break ties
    priorities += np.random.uniform(0, 1e-6, size=len(priorities))
    
    return priorities
```
