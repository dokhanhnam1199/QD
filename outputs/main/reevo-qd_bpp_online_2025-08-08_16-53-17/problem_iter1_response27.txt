```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.

    In Random Fit, we randomly select a bin that can accommodate the item.
    This priority function assigns a higher priority to bins that can fit the item,
    and among those, it randomly assigns a score to create a non-deterministic selection.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Identify bins that can accommodate the item
    can_fit_mask = bins_remain_cap >= item
    
    # For bins that can fit, assign a random priority score.
    # This allows for random selection among eligible bins.
    # The magnitude of the random number doesn't strictly matter here,
    # as we are relying on the mask to filter eligible bins.
    # However, assigning a small positive random value ensures they are prioritized
    # over bins that don't fit (which have a priority of 0).
    priorities[can_fit_mask] = np.random.rand(np.sum(can_fit_mask))
    
    return priorities
```
