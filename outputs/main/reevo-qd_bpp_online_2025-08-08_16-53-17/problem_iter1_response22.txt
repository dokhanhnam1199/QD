```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit strategy.

    The Worst Fit strategy prioritizes bins that have the most remaining capacity,
    making them the least likely to be filled soon. This is beneficial in online
    bin packing as it tries to keep bins open for potentially larger items that
    might arrive later.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        A higher score indicates a higher priority.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # The Worst Fit strategy aims to put the item into the bin with the most remaining capacity.
    # Therefore, we assign a priority score equal to the remaining capacity of the bin.
    # We only consider bins that can actually fit the item.
    # For bins that cannot fit the item, their priority remains 0.
    fit_mask = bins_remain_cap >= item
    priorities[fit_mask] = bins_remain_cap[fit_mask]

    return priorities
```
