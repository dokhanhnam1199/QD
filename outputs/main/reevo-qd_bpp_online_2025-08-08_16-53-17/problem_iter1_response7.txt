```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit strategy.

    In the Random Fit strategy, we prioritize bins that can fit the item,
    and among those, we randomly select one. For the priority function,
    we assign a higher priority to bins that have enough remaining capacity
    to fit the item. Bins that cannot fit the item receive a priority of 0.
    Among the bins that can fit the item, we assign a uniform positive
    priority to all of them, as the selection will be randomized later.
    This ensures that all valid bins are considered equally by the
    random selection process.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priorities to 0
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Find bins that have enough remaining capacity to fit the item
    can_fit_mask = bins_remain_cap >= item

    # Assign a positive priority to bins that can fit the item.
    # We assign a uniform positive value (e.g., 1.0) to all eligible bins.
    # This is because the Random Fit strategy will randomly select from
    # the bins that are eligible. The exact value of the priority doesn't
    # matter as much as the fact that it's positive for eligible bins
    # and zero for ineligible ones.
    priorities[can_fit_mask] = 1.0

    return priorities
```
