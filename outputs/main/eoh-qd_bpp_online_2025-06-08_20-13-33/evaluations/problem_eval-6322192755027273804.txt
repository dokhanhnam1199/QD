def priority_v2(item, bins_remain_cap):
  """{Assign a priority score to each bin based on how well the item fills the bin, penalizing bins that are either too full or have too much empty space after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = item / cap
      priority.append(fill_ratio - abs(fill_ratio - 0.7)) # Reward fill ratios closer to 0.7 (adjust as needed)
    else:
      priority.append(-1.0) # Disqualify bins that cannot fit the item
  return priority
