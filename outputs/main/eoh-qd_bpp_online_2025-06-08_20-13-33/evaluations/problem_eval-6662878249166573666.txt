def priority_v2(item, bins_remain_cap):
  """{This algorithm selects the bin with the smallest remaining capacity that can still accommodate the item, aiming to fill bins as completely as possible before opening new ones.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(-cap) # Prioritize bins with smallest remaining capacity
    else:
      priority.append(-1000) # Penalize infeasible bins
  return priority
