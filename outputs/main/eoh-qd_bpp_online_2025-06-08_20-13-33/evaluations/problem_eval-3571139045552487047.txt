def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and wasted space if the item is placed in the bin, prioritizing bins with sufficient capacity and minimal wasted space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority_score = cap + (1.0 / (wasted_space + 0.00001)) # Adding a small constant to prevent division by zero.
            priority.append(priority_score)
        else:
            priority.append(-1)  # Assign a low priority if the bin cannot accommodate the item
    return priority
