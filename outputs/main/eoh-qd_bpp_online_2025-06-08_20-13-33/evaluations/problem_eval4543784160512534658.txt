def priority_v2(item, bins_remain_cap):
    """
    {This algorithm calculates the priority of each bin based on a combination of factors: how well the item fits (using a ratio of item size to remaining capacity), how full the bin would be after packing, and a bonus for bins that are already relatively full.}
    """
    priorities = []
    for cap in bins_remain_cap:
        if item <= cap:
            fit_ratio = item / cap  # How well the item fits into the remaining space
            fullness_after_pack = (cap - item) / 100 # How full the bin will be after packing
            
            # Bonus for bins that are already relatively full
            full_bin_bonus = 0
            if cap < 25: #arbitrary value
                full_bin_bonus = 0.5

            priority = fit_ratio + (1 - fullness_after_pack) + full_bin_bonus
        else:
            priority = -1  # Impossible to pack

        priorities.append(priority)
    return priority
