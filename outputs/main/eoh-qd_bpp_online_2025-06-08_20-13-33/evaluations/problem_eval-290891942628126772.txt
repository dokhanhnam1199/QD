def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of remaining capacity and how well the item fits, favoring bins with slightly more capacity than the item size while penalizing those with much larger or smaller capacities.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority_score = (
                1 / (abs(cap - item) + 0.01)
            )  
        else:
            priority_score = -1000  # Very low priority if item doesn't fit
        priority.append(priority_score)
    return priority
