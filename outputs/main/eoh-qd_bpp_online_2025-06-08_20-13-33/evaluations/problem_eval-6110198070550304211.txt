def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the ratio of the item size to the remaining capacity, favoring bins where the item fills a significant portion of the remaining space while also considering the absolute remaining capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority_score = (item / cap) + cap  # Ratio of item to capacity, plus the remaining capacity itself.
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
