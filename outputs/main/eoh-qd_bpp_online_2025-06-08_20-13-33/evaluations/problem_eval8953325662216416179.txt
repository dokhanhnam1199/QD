def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a combination of space utilization and minimizing fragmentation, favoring bins where the item fits relatively well without leaving excessively small gaps.}"""
  priorities = []
  for cap in bins_remain_cap:
    if item <= cap:
      utilization = item / 100
      waste = (cap - item) / 100
      priority = utilization - (waste**2) 
    else:
      priority = -1
    priorities.append(priority)
  return priority
