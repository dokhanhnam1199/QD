def priority_v3(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on the ratio of the item size to the remaining capacity of the bin, favoring bins where the item fills a larger portion of the remaining capacity, penalized by wasted space if the item is placed.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      # Calculate the ratio of item size to remaining capacity.
      fill_ratio = item / cap
      # Penalize by wasted space. Bins with less wasted space are preferred.
      priority = fill_ratio - (wasted_space / cap) 
      priorities.append(priority)
    else:
      priorities.append(-1)  # Assign -1 priority if the item doesn't fit.
  return priority
