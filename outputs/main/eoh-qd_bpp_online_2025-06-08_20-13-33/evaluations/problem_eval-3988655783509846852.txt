def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on remaining capacity, rewarding bins that can fit the item and penalizing those that cannot, while favoring bins with remaining capacity closest to half the bin size after packing the item.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_after = cap - item
      ideal_remaining = 50 
      closeness_to_ideal = 100 - abs(remaining_after - ideal_remaining)
      priority = closeness_to_ideal
    else:
      priority = -1000
    priorities.append(priority)
  return priority
