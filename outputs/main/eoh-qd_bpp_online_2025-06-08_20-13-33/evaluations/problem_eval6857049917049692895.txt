def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by considering the waste after packing the item and assigning a penalty if the item doesn't fit, preferring bins with less waste.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priorities.append(1 / (waste + 1))  # Smaller waste gets higher priority. Adding 1 to avoid division by zero.
        else:
            priorities.append(-1000)  # Large negative penalty for bins that can't fit the item.
    return priority
