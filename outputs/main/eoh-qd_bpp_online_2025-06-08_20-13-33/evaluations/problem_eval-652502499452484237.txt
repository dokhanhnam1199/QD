def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of the fill ratio after placing the item and a penalty for bins that cannot accommodate the item.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / (100 - cap + item) if (100 - cap + item) > 0 else 0
            priority_score = fill_ratio #Fill ratio score
        else:
            penalty = (item - cap)*100 if (item-cap)*100 < 100 else 100
            priority_score = -penalty #Negative penalty if doesn't fit, scale the penalty by the exceeding space
        priority.append(priority_score)
    return priority
