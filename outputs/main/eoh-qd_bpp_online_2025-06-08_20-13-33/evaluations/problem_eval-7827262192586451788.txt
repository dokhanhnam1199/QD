def priority_v3(item, bins_remain_cap):
    """{This algorithm prioritizes bins by considering the ratio of item size to remaining capacity if the item fits, and penalizes bins that cannot fit the item.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            # Calculate the utilization ratio if the item is placed in the bin.
            utilization_ratio = item / cap
            priority_score = utilization_ratio  # Higher utilization is better.
        else:
            priority_score = -10  # Assign a large negative priority if the item doesn't fit
        priority.append(priority_score)
    return priority
