def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the remaining capacity after placing the item, favoring bins where the remaining capacity is significantly smaller than the item size or close to the bin capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if item <= cap:
      remaining_cap = cap - item
      if item > 0.75:
        priority.append(100 - remaining_cap if remaining_cap >= 0 else -100)
      else:
        target_cap = 0.8
        priority.append(max(0, 100 - abs(cap - target_cap)*5))
    else:
      priority.append( -abs(item-cap)*10)
  return priority
