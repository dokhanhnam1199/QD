def priority_v3(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the ratio of item size to remaining capacity, favoring bins where the item fills a larger portion of the remaining space while still fitting.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = float(item) / cap
            priority_score = fill_ratio
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
