def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and how well the item fits, favoring bins with enough space but also prioritizing those where the item fills a significant portion of the remaining capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = (item / cap) + (cap - item) / max(bins_remain_cap) #Ratio filled and remaining space.
      priority.append(priority_score)
    else:
      priority.append(-1)  # Assign a low priority if the item doesn't fit
  return priority
