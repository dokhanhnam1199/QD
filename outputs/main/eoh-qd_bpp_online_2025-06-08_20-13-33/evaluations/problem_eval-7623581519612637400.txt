def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a weighted combination of the wasted space after placing the item and the bin's relative fullness.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      wasted_space_ratio = (capacity - item) / capacity if capacity > 0 else 0  # Prevent division by zero
      priority = 1 - wasted_space_ratio + 0.2 * (1 - wasted_space_ratio) 
    else:
      priority = -1
    priorities.append(priority)
  return priority
