def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a sigmoid function of the ratio of item size to remaining capacity, emphasizing bins where the item nearly fills the available space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      ratio = item / cap
      priority_score = 1 / (1 + (2.71828**(-10*(ratio - 0.8)))) #Sigmoid function to priorize bins where item fills about 80% of the capacity
      priority.append(priority_score)
    else:
      priority.append(-1)  # Assign a low priority if the item doesn't fit
  return priority
