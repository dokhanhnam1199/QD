def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the ratio of item size to bin capacity, adjusted by a penalty related to how much the item would fill the bin, favoring bins that aren't too empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            bin_utilization_penalty = abs(fill_ratio - 0.75) # Penalize bins that would be far from 75% full
            priority_score = fill_ratio - bin_utilization_penalty
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
