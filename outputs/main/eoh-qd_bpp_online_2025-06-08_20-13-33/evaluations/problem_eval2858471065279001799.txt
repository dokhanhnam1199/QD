def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin by considering the ratio of the item size to the bin's remaining capacity, rewarding bins that are neither too full nor leave excessive space after packing the item, while also adding a small bonus to bins that are utilized beyond a certain threshold .}"""
    priorities = []
    for cap in bins_remain_cap:
        if item <= cap:
            utilization_ratio = item / 100.0
            remaining_space_ratio = (cap - item) / 100.0
            
            # Reward bins that are neither too full nor have excessive space
            priority = 1.0 - abs(utilization_ratio - 0.5) - abs(remaining_space_ratio - 0.5)
            
            # Bonus for bins utilized beyond a certain point
            if utilization_ratio > 0.75:
                priority += 0.2
        else:
            priority = -1.0

        priorities.append(priority)
    return priority
