def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of remaining capacity utilized by the item, penalizing bins that are too small or would be left excessively empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      utilization_ratio = item / cap
      priority.append(utilization_ratio - abs(utilization_ratio - 0.7)) # Favors bins with utilization ratio near 0.7
    else:
      priority.append(-1000) # Large negative priority if bin is too full
  return priority
