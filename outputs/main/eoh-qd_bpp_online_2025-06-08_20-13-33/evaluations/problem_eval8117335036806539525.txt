def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on how full the bins will be after packing the item, preferring bins that will be filled to a higher percentage of their capacity.}"""
    priority = []
    bin_capacity = 100.0  # Assuming a bin capacity of 100 for percentage calculation

    for cap in bins_remain_cap:
        if cap >= item:
            new_cap = cap - item
            fill_percentage = (bin_capacity - new_cap) / bin_capacity
            priority_score = fill_percentage
        else:
            priority_score = -1000  # Very low priority if item doesn't fit
        priority.append(priority_score)
    return priority
