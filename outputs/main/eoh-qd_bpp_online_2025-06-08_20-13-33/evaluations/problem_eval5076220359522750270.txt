def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on how well the item fits, prioritizing bins that can accommodate the item while minimizing the percentage of wasted space relative to the item size.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(item / (cap + 0.00001))  # Ratio of item size to bin capacity, plus a small number to avoid zero division
    else:
      priority.append(-1000)  # Large negative priority if bin is too full
  return priority
