def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by focusing more on minimizing wasted space by heavily weighting the fill percentage after packing the item and only slightly considering the closeness of the remaining capacity to the item size.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_percentage_after = (1 - (cap - item) / 100)
      closeness = 100 - abs(cap - item)
      score = 0.9 * fill_percentage_after + 0.1 * closeness
    else:
      score = -1000 
    priorities.append(score)
  return priority
