def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the square of the remaining capacity, penalized by the wasted space if the item is placed in the bin, giving preference to bins that are neither too full nor too empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority_score = (cap**2) - (wasted_space *10) # Penalize wasted space more when capacity is higher.
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
