def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin by considering both remaining capacity and how much of the bin is filled after placing the item, prioritizing bins that can accommodate the item well without excessive waste.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = (item / (bins_remain_cap[0] + cap))
      remaining_ratio = (cap - item) / bins_remain_cap[0]
      priority.append(fill_ratio - remaining_ratio)
    else:
      priority.append(-1)
  return priority
