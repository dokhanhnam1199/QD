def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the waste space, rewarding bins that would have the least waste space after the item is placed.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = - (cap - item)  # Waste space after placing the item (negative since we want to minimize waste)
      priority.append(priority_score)
    else:
      priority.append(-float('inf'))  # Assign a very low priority if the item doesn't fit
  return priority
