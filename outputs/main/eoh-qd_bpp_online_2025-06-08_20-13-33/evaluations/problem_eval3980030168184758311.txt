def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by considering both the remaining capacity and the number of items already packed in each bin, favoring partially filled bins.}"""
  priority = []
  num_items_per_bin = [0] * len(bins_remain_cap)

  for i, cap in enumerate(bins_remain_cap):
    if item <= cap:
      num_items = num_items_per_bin[i]
      priority_score = (cap - item) + num_items*0.1
      priority.append(priority_score)
    else:
      priority.append(-1000)
  return priority
