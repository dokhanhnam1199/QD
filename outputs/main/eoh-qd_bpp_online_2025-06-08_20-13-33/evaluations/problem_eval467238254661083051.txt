def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin by evaluating the 'goodness of fit' based on the ratio of item size to remaining capacity, penalizing both near-empty and near-full bins, and rewarding bins that are approximately half-full after placing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      post_fill_level = (cap - item) / (cap + item)
      priority.append(1 - abs(post_fill_level))
    else:
      priority.append(-1)
  return priority
