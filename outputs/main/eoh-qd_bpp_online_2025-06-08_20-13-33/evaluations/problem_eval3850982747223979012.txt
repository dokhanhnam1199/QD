def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority to bins based on the wasted space percentage and a penalty if the bin is too empty after packing the item.}"""
    priorities = []
    for capacity in bins_remain_cap:
        if capacity >= item:
            wasted_space_percentage = (capacity - item) / 100.0
            penalty = 0
            if capacity - item > 75: # Arbitrary threshold
                penalty = (capacity-item)/100 # Penalize bins that would be too empty

            priority = 1 - wasted_space_percentage - penalty
        else:
            priority = -1
        priorities.append(priority)
    return priority
