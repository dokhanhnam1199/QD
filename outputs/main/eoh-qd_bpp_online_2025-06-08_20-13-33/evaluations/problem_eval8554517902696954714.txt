def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on how well the item fills the bin relative to the bin's capacity, penalizing bins that are too small or lead to large empty spaces.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            priority.append(fill_ratio - (cap - item) * 0.001) # Reward high fill ratio, penalize wasted space
        else:
            priority.append(-1000)  # Penalize infeasible bins
    return priority
