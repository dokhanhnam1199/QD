def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a weighted combination of remaining capacity and the fill ratio after placing the item.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      fill_ratio = (capacity - item) / (sum(bins_remain_cap) - item) if (sum(bins_remain_cap) - item) > 0 else 0 # Prevent zero division
      priority = capacity - item + 0.1 * fill_ratio
    else:
      priority = -1 
    priorities.append(priority)
  return priority
