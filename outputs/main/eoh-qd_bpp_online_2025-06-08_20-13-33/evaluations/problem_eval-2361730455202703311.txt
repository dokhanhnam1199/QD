def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of remaining capacity utilized by the item, penalizing bins that would be overfilled or leave significant unused space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(item / cap) # Percentage of bin used, higher is better, but only if it fits
    else:
      priority.append(-1000) # Large negative priority if bin is too full
  return priority
