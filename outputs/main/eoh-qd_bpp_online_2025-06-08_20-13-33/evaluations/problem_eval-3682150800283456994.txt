def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the exponential decay of remaining capacity after placing the item, penalizing bins with much larger or smaller capacities relative to the item size.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      priority =  (capacity * item) / (capacity**2 + item**2)
    else:
      priority = -1
    priorities.append(priority)
  return priority
