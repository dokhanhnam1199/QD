def priority_v2(item, bins_remain_cap):
  """{Assign a priority score to each bin based on the ratio of item size to remaining capacity, penalizing bins that are too full or too empty after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      ratio_after_packing = item / cap
      priority.append(1 - abs(ratio_after_packing - 0.5))  # Prioritize bins that are around half-full after packing
    else:
      priority.append(-1.0)  # Disqualify bins that cannot fit the item
  return priority
