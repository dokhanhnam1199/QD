def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by first attempting to perfectly fill bins if possible, then favoring bins with the smallest remaining capacity after placing the item, and penalizing bins that cannot accommodate the item.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap == item:
            priority.append(1000)  # Highest priority for perfect fit
        elif cap > item:
            priority.append(100 - (cap - item))  # Higher priority for smaller remaining capacity
        else:
            priority.append(-100)  # Penalize if item doesn't fit
    return priority
