def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin by considering the wasted space if the item is placed in the bin and penalizing bins that would become too full.}"""
  priorities = []
  total_capacity = sum(bins_remain_cap)
  for capacity in bins_remain_cap:
    if capacity >= item:
      wasted_space = capacity - item
      fullness_ratio = (item) / (total_capacity) if total_capacity > 0 else 0
      priority = 1.0 / (wasted_space + 1e-9) - 0.05 * fullness_ratio # Avoid division by zero
    else:
      priority = -1
    priorities.append(priority)
  return priority
