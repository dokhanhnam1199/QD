def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on the ratio of item size to remaining capacity, favoring bins where the item fills a significant portion of the remaining space while still leaving some room.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            priority.append(fill_ratio - abs(fill_ratio - 0.7))  # Favor fill ratios around 0.7
        else:
            priority.append(-1000)  # Penalize infeasible bins
    return priority
