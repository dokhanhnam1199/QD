def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on how close the item size is to the remaining capacity (absolute difference), normalized by the bin capacity, with a bonus for bins that can fit the item perfectly or are nearly full.}"""
    priorities = []
    for cap in bins_remain_cap:
        if item <= cap:
            # Calculate the absolute difference between item size and remaining capacity
            diff = abs(item - cap)
            
            # Normalize the difference by the bin capacity
            normalized_diff = diff / 100

            # Bonus for perfect fit or nearly full bins
            bonus = 0
            if item == cap:
                bonus = 1  # Perfect fit bonus
            elif cap - item <= 10: # Arbitrary value
                bonus = 0.5  # Nearly full bonus

            priority = 1 - normalized_diff + bonus
        else:
            priority = -1  # Impossible to pack

        priorities.append(priority)
    return priority
