def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the square of the remaining capacity if the item fits, otherwise, it assigns a large negative priority, effectively penalizing bins that can't accommodate the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = cap * cap
    else:
      priority_score = -100000  # Large negative number to discourage placement
    priority.append(priority_score)
  return priority
