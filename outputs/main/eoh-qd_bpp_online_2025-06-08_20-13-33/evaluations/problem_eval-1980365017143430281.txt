def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on the ratio of item size to remaining capacity, favoring bins where the item fills a significant portion of the bin without overflowing, and penalizing bins that are too full or too empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(item / cap) # Ratio of item size to bin capacity
    else:
      priority.append(-1000) # Large negative priority if bin is too full
  return priority
