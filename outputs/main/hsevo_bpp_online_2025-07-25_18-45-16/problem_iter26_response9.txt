```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins using a balanced approach of fit availability and normalized waste minimization.
    """
    can_fit = bins_remain_cap >= item
    norm_remain_cap = bins_remain_cap / (np.max(bins_remain_cap) + 1e-6)
    waste = (bins_remain_cap - item) / (np.max(bins_remain_cap) + 1e-6)
    waste[~can_fit] = 0  # Ensure bins that cannot fit the item have zero priority
    priority = can_fit * (norm_remain_cap - 0.75 * waste)  # Weighted balance between fit and waste minimization
    return priority
```
