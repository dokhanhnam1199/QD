```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines proximity to item size and remaining capacity to minimize waste."""
    close_bins = np.clip(bins_remain_cap - item, 0, item)  # Prioritize bins that can fit the item well
    balanced_fill = bins_remain_cap / (np.max(bins_remain_cap) + 1e-6)  # Prioritize bins that are not too full
    priority_score = close_bins + balanced_fill  # Combine both strategies
    return priority_score
```
