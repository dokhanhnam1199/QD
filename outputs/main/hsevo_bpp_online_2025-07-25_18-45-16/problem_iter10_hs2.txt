import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray, 
    threshold: float = 0.1649138707720546, 
    waste_penalty: float = 8422207.3783651) -> np.ndarray:
    """Combines waste minimization with normalized fit availability to prioritize bins."""
    can_fit = (bins_remain_cap >= item).astype(float)
    waste = bins_remain_cap - item
    priority_scores = np.where(waste >= threshold, waste, waste_penalty)
    normalized_scores = priority_scores / np.max(priority_scores, initial=1)
    return can_fit * (-normalized_scores)  # Prioritize fitting bins with least normalized waste
