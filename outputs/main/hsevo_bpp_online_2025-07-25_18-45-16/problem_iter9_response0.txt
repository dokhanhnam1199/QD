```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This heuristic aims to minimize waste by prioritizing bins that have enough space
    for the item and are closer to being full. It uses a simple normalization to ensure
    that the priority score is consistent and focused on waste reduction.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the bin has enough space for the item
    can_fit = bins_remain_cap >= item
    # Calculate the waste if the item is added to the bin
    waste = bins_remain_cap - item
    # Normalize the waste by the bin capacity
    normalized_waste = waste / bins_remain_cap
    # Priority score: prioritize bins that can fit the item and have minimal waste
    priority_score = can_fit * (1 - normalized_waste)
    return priority_score
```
