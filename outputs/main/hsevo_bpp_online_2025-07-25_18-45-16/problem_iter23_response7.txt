```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates priority by balancing remaining capacity and normalized waste, prioritizing fit availability."""
    # Normalize remaining capacities
    norm_remain_cap = bins_remain_cap / (np.max(bins_remain_cap) + 1e-6)
    
    # Calculate waste if the item is added to each bin
    waste = norm_remain_cap - item / (np.max(bins_remain_cap) + 1e-6)
    
    # Ensure no negative waste values and set to zero for bins that cannot fit the item
    waste = np.clip(waste, 0, 1)
    waste[bins_remain_cap < item] = 0  # Set priority to zero for bins that cannot fit the item
    
    # Priority is higher for bins with less waste and more available capacity
    priority_scores = norm_remain_cap * (1 - waste)
    
    return priority_scores
```
