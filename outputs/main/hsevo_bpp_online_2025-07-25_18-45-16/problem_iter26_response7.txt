```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculate priority scores by balancing normalized waste and fit availability, enhancing decision-making for Online BPP."""
    # Ensure no negative waste values and set to inf for bins that cannot fit the item
    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf
    
    # Normalize waste
    norm_waste = waste / (np.max(waste) + 1e-6)
    
    # Calculate direct fit availability (1 if item fits, 0 otherwise)
    fit_availability = (bins_remain_cap >= item).astype(float)
    
    # Calculate priority scores combining normalized waste and fit availability
    priority_scores = fit_availability / (norm_waste + 1e-6)
    
    return priority_scores
```
