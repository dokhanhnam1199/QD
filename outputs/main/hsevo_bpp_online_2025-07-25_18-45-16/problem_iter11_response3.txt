```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization and fit availability with robust normalization."""
    can_fit = (bins_remain_cap >= item).astype(float)
    waste = np.where(can_fit, bins_remain_cap - item, 0)
    normalized_waste = np.where(can_fit, waste / bins_remain_cap, 0)
    priority_score = can_fit * (1 - normalized_waste)
    return priority_score
```
