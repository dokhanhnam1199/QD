```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This heuristic aims to minimize waste by prioritizing bins that have the best fit available for the item.
    It uses a normalized score based on the difference between the item size and the remaining capacity,
    ensuring that bins which can fit the item with the least leftover space are prioritized.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the waste if the item is placed in each bin
    waste = bins_remain_cap - item
    
    # Set waste to a large positive value for bins that cannot fit the item
    waste[waste < 0] = np.inf
    
    # Normalize waste to prioritize bins with the least leftover space
    normalized_waste = (waste - np.min(waste)) / (np.max(waste) - np.min(waste) + 1e-6)
    
    # Priority is the inverse of normalized waste: lower waste means higher priority
    priority_score = 1 - normalized_waste
    
    return priority_score
```
