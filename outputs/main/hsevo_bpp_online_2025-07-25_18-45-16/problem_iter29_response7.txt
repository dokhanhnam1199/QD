```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score combining normalized waste minimization and fit availability.
    """
    fit_availability = (bins_remain_cap >= item).astype(float)
    waste = bins_remain_cap - item
    max_waste = np.max(waste) if np.max(waste) > 0 else 1
    normalized_waste = -waste / max_waste
    priority_scores = fit_availability * (normalized_waste + 1)  # Balance fit availability with waste minimization
    return priority_scores
```
