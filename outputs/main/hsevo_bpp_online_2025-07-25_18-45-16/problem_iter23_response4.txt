```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculate priority scores by normalizing waste and ensuring fit availability, balancing both criteria effectively."""
    # Ensure no negative waste values and set to zero for bins that cannot fit the item
    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf
    
    # Normalize waste
    norm_waste = waste / (np.max(waste) + 1e-6)
    
    # Calculate priority scores based on fit availability and normalized waste
    priority_scores = 1 / (norm_waste + 1e-6) * (bins_remain_cap >= item)
    
    return priority_scores
```
