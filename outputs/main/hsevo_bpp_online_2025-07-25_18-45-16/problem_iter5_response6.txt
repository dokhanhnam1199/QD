```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority score combining waste minimization and relative space availability."""
    # Calculate waste after adding the item to each bin
    waste = bins_remain_cap - item
    # Calculate normalized remaining capacity
    norm_cap = bins_remain_cap / np.max(bins_remain_cap)
    # Prioritize bins with least waste, penalize full bins with -np.inf
    priority_scores = np.where(waste >= 0, waste + norm_cap, -np.inf)
    return priority_scores
```
