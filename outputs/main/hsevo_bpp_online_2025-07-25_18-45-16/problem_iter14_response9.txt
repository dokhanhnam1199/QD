```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates priority score for adding an item to each bin based on normalized remaining capacity."""
    # Calculate remaining capacity after adding the item
    remain_cap_after_item = bins_remain_cap - item
    
    # Calculate waste (unused capacity) after adding the item, only for bins that can fit the item
    waste = np.maximum(remain_cap_after_item, 0)
    
    # Normalize the waste scores to ensure consistency
    max_waste = np.max(waste)
    if max_waste == 0:
        return np.zeros_like(bins_remain_cap)
    normalized_waste = waste / max_waste
    
    # Assign priority inversely proportional to normalized waste
    priority_score = 1 - normalized_waste
    
    # Ensure items are not placed into bins they cannot fit into
    priority_score[remain_cap_after_item < 0] = 0.0
    
    return priority_score
```
