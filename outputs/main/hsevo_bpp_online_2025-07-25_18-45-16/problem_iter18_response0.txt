```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This heuristic aims to minimize waste and maximize fit availability by considering
    the normalization of remaining capacity and direct waste reduction.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Normalize the remaining capacities
    norm_remain_cap = bins_remain_cap / np.max(bins_remain_cap)
    
    # Calculate the waste if the item is added to each bin
    waste = norm_remain_cap - item / np.max(bins_remain_cap)
    
    # Ensure no negative waste values
    waste = np.clip(waste, 0, 1)
    
    # Priority is higher for bins with less waste and more available capacity
    priority_scores = norm_remain_cap - waste
    
    return priority_scores
```
