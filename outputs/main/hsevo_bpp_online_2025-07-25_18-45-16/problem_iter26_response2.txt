```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority score combining fit availability and normalized waste minimization."""
    # Check if the item can fit in each bin
    can_fit = (bins_remain_cap >= item).astype(float)
    
    # Calculate the waste after adding the item to each bin
    waste = bins_remain_cap - item
    
    # Normalize waste to the range [0, 1]
    max_waste = np.max(bins_remain_cap)
    normalized_waste = waste / (max_waste + 1e-6)
    
    # Calculate priority scores by balancing fit availability and normalized waste minimization
    priority_scores = can_fit * (1 - normalized_waste)
    
    return priority_scores
```
