```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority score for each bin using normalized waste and fit availability."""
    # Calculate waste if the item is placed in each bin
    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf  # Set waste to infinity for bins that cannot fit the item
    
    # Normalize waste scores
    normalized_waste = (waste - np.min(waste)) / (np.max(waste) - np.min(waste) + 1e-6)
    
    # Calculate priority based on remaining capacity and normalized waste
    priority_scores = (1 - normalized_waste) * (bins_remain_cap / np.max(bins_remain_cap + 1e-6))
    
    # Set priority to zero for bins where the item cannot be added
    priority_scores[waste == np.inf] = 0
    
    return priority_scores
```
