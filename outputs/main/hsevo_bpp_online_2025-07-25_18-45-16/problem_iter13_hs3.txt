import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray, 
    waste_threshold: float = -0.08319135044124848, 
    normalization_weight: float = 0.35753075583124605) -> np.ndarray:
    """Combines waste minimization and fit availability with robust normalization."""
    can_fit = (bins_remain_cap >= item).astype(float)
    waste = np.where(can_fit, bins_remain_cap - item + waste_threshold, np.inf)
    normalized_waste = waste / (bins_remain_cap + normalization_weight)
    priority_score = can_fit * (1 - normalized_waste)
    return priority_score
