```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculate priority for each bin to minimize waste and ensure fit availability."""
    # Calculate remaining capacity after adding the item
    potential_remain_cap = bins_remain_cap - item
    
    # Normalize remaining capacity to ensure consistency
    max_bin_cap = np.max(bins_remain_cap)
    normalized_remain_cap = potential_remain_cap / max_bin_cap
    
    # Calculate priority based on normalized remaining capacity
    # Higher normalized remaining capacity leads to higher priority
    priority_scores = normalized_remain_cap
    
    # Set priority to zero for bins where the item cannot be added
    priority_scores[potential_remain_cap < 0] = 0
    
    return priority_scores
```
