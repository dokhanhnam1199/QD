```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    available_bins = bins_remain_cap >= item
    if not np.any(available_bins):
        return np.zeros_like(bins_remain_cap)
    
    fit_values = bins_remain_cap[available_bins] - item
    
    exp_fit_values = np.exp(fit_values)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[available_bins] = exp_fit_values / np.sum(exp_fit_values)
    
    return priorities
```
