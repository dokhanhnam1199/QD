```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score for each bin using adaptive scaling, exact fit rewards, penalties, and sigmoid rewards.
    """
    # Calculate exact fit indicator and reward
    exact_fit_mask = bins_remain_cap == item
    priority_scores = exact_fit_mask * 1000.0

    # Adaptive scaling based on remaining capacity for non-exact fits
    non_exact_fit_mask = (bins_remain_cap >= item) & (~exact_fit_mask)
    if np.any(non_exact_fit_mask):
        remaining_cap = bins_remain_cap[non_exact_fit_mask]
        adaptive_scale = 100.0 * np.exp(-np.abs(remaining_cap - item) / item)
        priority_scores[non_exact_fit_mask] += adaptive_scale

    # Sigmoid reward for non-exact fits
    if np.any(non_exact_fit_mask):
        sigmoid_reward = 1 / (1 + np.exp(-1.2 * (remaining_cap - 0.5)))
        priority_scores[non_exact_fit_mask] *= sigmoid_reward

    # Penalize bins that cannot fit the item
    priority_scores[bins_remain_cap < item] = -1000.0

    return priority_scores
```
