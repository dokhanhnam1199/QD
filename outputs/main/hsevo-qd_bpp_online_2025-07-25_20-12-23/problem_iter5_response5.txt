```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines penalties for leftover space with incentives for exact fits using adaptive scaling and sigmoid rewards.
    """
    # Ensure the item can fit in the bin
    can_fit = bins_remain_cap >= item
    
    # Calculate space left after adding the item
    space_left = bins_remain_cap - item
    
    # Priority for exact fits with weight
    exact_fit_weight = 1.5
    exact_fit_priority = can_fit * (bins_remain_cap == item) * exact_fit_weight
    
    # Use a sigmoid function to reward bins that are fuller after adding the item
    sigmoid_reward = 1 / (1 + np.exp(-space_left))
    
    # Combine penalties and rewards
    priority = exact_fit_priority + sigmoid_reward * can_fit
    
    return priority
```
