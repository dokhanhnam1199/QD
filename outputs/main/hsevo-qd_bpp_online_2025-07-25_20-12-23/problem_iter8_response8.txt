```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines penalties for excess capacity with rewards for exact fits and near-full bins.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    
    # Reward for exact fits
    exact_fit_reward = (bins_remain_cap == item) * 1.5
    
    # Adaptive sigmoid reward for near-full bins
    sigmoid_reward = 1 / (1 + np.exp(-space_left / (bins_remain_cap + 0.1)))
    
    # Penalty for bins that can't fit the item
    penalty = np.where(can_fit, 0, -100)
    
    priority = penalty + can_fit * (exact_fit_reward + sigmoid_reward)
    return priority
```
