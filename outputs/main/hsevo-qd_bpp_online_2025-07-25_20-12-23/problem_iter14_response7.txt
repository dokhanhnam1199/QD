```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines adaptive scaling, exact fit reward, and penalty for small capacities for effective bin packing.
    """
    # Base priority: Adaptive scaling
    base_priority = item / (bins_remain_cap + 0.1)  # Adding a small epsilon to avoid division by zero
    
    # Reward for exact fit
    exact_fit_reward = np.where(bins_remain_cap == item, 1.0, 0.0)
    
    # Penalty for very small remaining capacities
    small_capacity_penalty = np.where((bins_remain_cap < item) & (bins_remain_cap > 0.1), 0.1, 0.0)
    
    # Combined priority score
    priority_score = base_priority + exact_fit_reward - small_capacity_penalty
    
    return priority_score
```
