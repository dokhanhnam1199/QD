```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Balanced heuristic combining adaptive scaling and exact fit rewards for efficient bin packing."""
    
    # Base priority: Adaptive scaling based on item size relative to remaining capacity
    base_priority = item / (bins_remain_cap + 0.1)  # adding a small epsilon to avoid division by zero
    
    # Reward for bins that would be exactly filled by this item
    exact_fill_reward = np.where(bins_remain_cap == item, 1.0, 0.0)
    
    # Penalty for bins that would be overfilled by this item
    overfill_penalty = np.where(bins_remain_cap < item, -10.0, 0.0)
    
    # Combined priority score
    priority_score = base_priority + exact_fill_reward + overfill_penalty
    
    return priority_score
```
