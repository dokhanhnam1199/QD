import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray, 
    exact_fit_weight: float = 1.6728097780715478, 
    non_exact_fit_weight: float = 1.797033480935582, 
    threshold: float = 0.30956386835882155) -> np.ndarray:
    """Combines penalties for leftover space with incentives for exact fits and snug fills."""
    
    # Ensure the item can fit in the bin
    can_fit = bins_remain_cap >= item
    
    # Calculate space left after adding the item
    space_left = bins_remain_cap - item
    
    # Priority for exact fits
    exact_fit_priority = can_fit * (bins_remain_cap == item) * exact_fit_weight
    
    # Priority for bins that are not exact fits, penalizing leftover space
    non_exact_fit_priority = can_fit * (1 - (space_left / bins_remain_cap)) * (bins_remain_cap != item) * non_exact_fit_weight
    
    # Combine both priorities
    priority = exact_fit_priority + non_exact_fit_priority
    
    return priority
