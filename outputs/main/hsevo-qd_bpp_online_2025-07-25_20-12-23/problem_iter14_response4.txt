```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score for each bin using a combination of exact fit reward,
    adaptive scaling, and penalty for insufficient capacity.
    """
    # Prioritize exact fits
    exact_fit_mask = bins_remain_cap == item
    priority_scores = np.where(exact_fit_mask, 1.0, 0.0)
    
    # Reward bins that can fit the item with adaptive scaling for remaining capacity
    ifbinsfit = bins_remain_cap >= item
    adaptive_reward = np.where(ifbinsfit, 1.0 / (bins_remain_cap - item + 0.1), 0)
    priority_scores += adaptive_reward
    
    # Penalize bins that cannot fit the item
    penalty = -np.inf
    priority_scores = np.where(bins_remain_cap < item, penalty, priority_scores)
    
    return priority_scores
```
