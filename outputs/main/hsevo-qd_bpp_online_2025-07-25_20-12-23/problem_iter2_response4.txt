```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines exact fit priority and remaining capacity to minimize waste."""
    priority_scores = np.zeros_like(bins_remain_cap)
    
    # Exact fit has highest priority
    exact_fit_mask = bins_remain_cap == item
    priority_scores[exact_fit_mask] = 1.0
    
    # For non-exact fits, prioritize those close to being full
    non_exact_fit_mask = bins_remain_cap >= item
    if np.any(non_exact_fit_mask):
        # Calculate priority based on remaining space after adding item
        priority_scores[non_exact_fit_mask] = (bins_remain_cap[non_exact_fit_mask] - item) / bins_remain_cap[non_exact_fit_mask]
        priority_scores[non_exact_fit_mask] = 1 - priority_scores[non_exact_fit_mask]  # Closer to full is better
    
    return priority_scores
```
