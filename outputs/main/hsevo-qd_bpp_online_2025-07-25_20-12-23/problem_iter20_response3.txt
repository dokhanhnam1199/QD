```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines adaptive scaling, exact fit rewards, and penalizes underutilized bins for efficient bin packing.
    """
    SCALE_FACTOR = 50.0
    EXACT_FIT_BONUS = 1000.0
    UNDERUTILIZATION_PENALTY_FACTOR = 0.3

    # Exact fit gets highest priority
    exact_fit = (bins_remain_cap == item).astype(float) * EXACT_FIT_BONUS

    # Adaptive scaling based on the remaining capacity
    adaptive_scale = SCALE_FACTOR * np.exp(-((bins_remain_cap - item) ** 2) / (2 * (item ** 2)))

    # Penalty for underutilization
    underutilization_penalty = (bins_remain_cap < 0.5 * bins_remain_cap.max()).astype(float) * UNDERUTILIZATION_PENALTY_FACTOR

    # Combine the components to get the priority score
    priority_score = adaptive_scale + exact_fit - underutilization_penalty

    return priority_score
```
