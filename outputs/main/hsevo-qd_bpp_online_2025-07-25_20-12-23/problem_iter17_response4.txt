```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines adaptive scaling and penalty logic to prioritize bins effectively.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of priority scores for each bin.
    """
    scale_factor = 1.5
    adaptive_scale = np.exp(-scale_factor * (1 - bins_remain_cap / np.max(bins_remain_cap)))
    can_fit = bins_remain_cap >= item
    reward = adaptive_scale * can_fit
    penalty = -1000 * (bins_remain_cap < item)  # Large penalty for bins that can't fit the item
    priority_scores = reward + penalty
    return priority_scores
```
