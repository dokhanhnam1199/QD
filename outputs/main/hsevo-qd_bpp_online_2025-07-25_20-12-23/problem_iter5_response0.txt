```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Balances exact fit priority, leftover space, and relative bin size for adaptive efficiency."""
    priority_scores = np.zeros_like(bins_remain_cap)
    
    # Exact fit gets highest priority
    exact_fit_mask = bins_remain_cap == item
    priority_scores[exact_fit_mask] = 1.0
    
    # For non-exact fits, prioritize those close to being full
    non_exact_fit_mask = bins_remain_cap >= item
    if np.any(non_exact_fit_mask):
        space_left = bins_remain_cap[non_exact_fit_mask] - item
        priority_scores[non_exact_fit_mask] = 1 - (space_left / bins_remain_cap[non_exact_fit_mask])
    
    # Adjust for relative bin size
    relative_size_factor = bins_remain_cap / np.max(bins_remain_cap, initial=1.0)
    priority_scores *= relative_size_factor
    
    return priority_scores
```
