```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # First, prioritize bins with capacity close to the item size but not less
    close_bins = np.clip(bins_remain_cap - item, 0, 1)
    
    # Next, prioritize bins with the largest remaining capacity (first-fit decreasing)
    largest_first_fit = bins_remain_cap

    # Combine the priorities, giving larger weights to bins close to the item size
    priority_score = close_bins * 1.5 + largest_first_fit

    return priority_score
```
