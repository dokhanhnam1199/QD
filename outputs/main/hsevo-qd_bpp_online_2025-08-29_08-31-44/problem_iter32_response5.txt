```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines reciprocal waste with sigmoid smoothing of bin utilization (inspired by v0 & v1)."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities
    waste = bins_remain_cap[valid_bins] - item
    utilizations = 1.0 - (waste / bins_remain_cap[valid_bins])
    sigmoid_scores = 1.0 / (1.0 + np.exp(-5.0 * (utilizations - 0.5)))
    reciprocal_waste = 1.0 / (waste + 1e-9)
    priorities[valid_bins] = 0.7 * sigmoid_scores + 0.3 * reciprocal_waste
    return priorities
```
