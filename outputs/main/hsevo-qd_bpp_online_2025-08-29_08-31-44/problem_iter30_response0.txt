```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if np.any(feasible_bins):
        best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
        priorities[feasible_bins] = 1.0
        priorities[np.where(feasible_bins)[0][best_fit_index]] = 2.0
        
        bin_utilizations = (bins_remain_cap - item) / bins_remain_cap
        bin_utilizations[~feasible_bins] = 0.0
        
        sigmoid_values = 1 / (1 + np.exp(-5 * (bin_utilizations - 0.5)))
        
        priorities = priorities + 0.5 * sigmoid_values

    return priorities
```
