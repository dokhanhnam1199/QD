```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    num_feasible = np.sum(feasible_bins)
    
    if num_feasible == 1:
        priorities[feasible_bins] = 2.0
        return priorities

    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    
    priorities[feasible_bins] = 1.0
    priorities[np.where(feasible_bins)[0][best_fit_index]] = 2.0

    
    worst_fit_index = np.argmax(bins_remain_cap[feasible_bins] - item)
    
    if np.random.rand() < 0.1:
        priorities[feasible_bins] = 0.0
        priorities[np.where(feasible_bins)[0][worst_fit_index]] = 1.0
    
    
    return priorities
```
