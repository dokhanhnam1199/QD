```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with smoothed utilization score using sigmoid."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    waste = bins_remain_cap[possible_bins] - item
    utilization = 1.0 - (waste / bins_remain_cap[possible_bins])
    
    sigmoid_input = utilization
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = 1.0 / (1.0 + np.exp(-5 * (sigmoid_input - 0.5)))
    
    return priorities
```
