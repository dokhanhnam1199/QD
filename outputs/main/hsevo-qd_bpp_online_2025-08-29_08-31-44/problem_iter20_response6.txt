```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with sigmoid-scaled bin utilization for smoother prioritization."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities

    distances = bins_remain_cap[valid_bins] - item
    fit_scores = 1.0 / (1.0 + distances)
    bin_utilizations = 1.0 - (bins_remain_cap[valid_bins] - item) / bins_remain_cap[valid_bins]
    sigmoid_scores = 1.0 / (1.0 + np.exp(-5.0 * (bin_utilizations - 0.5)))
    combined_scores = 0.6 * sigmoid_scores + 0.4 * fit_scores
    priorities[valid_bins] = combined_scores
    return priorities
```
