```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    feasible_bins = bins_remain_cap >= item
    
    if not np.any(feasible_bins):
        return priorities
    
    fill_ratios = bins_remain_cap[feasible_bins] / bins_remain_cap[feasible_bins].max()
    
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    
    
    sigmoid_scale = 5.0
    sigmoid_input = fill_ratios 
    sigmoid_values = 1 / (1 + np.exp(-sigmoid_scale * (sigmoid_input - 0.5)))

    
    priorities[feasible_bins] = sigmoid_values
    priorities[np.where(feasible_bins)[0][best_fit_index]] += 1.0
    
    return priorities
```
