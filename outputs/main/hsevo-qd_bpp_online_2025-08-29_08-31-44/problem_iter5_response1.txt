```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a scaled fill ratio to prioritize bins."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities

    distances = bins_remain_cap[valid_bins] - item
    best_fit_index = np.argmin(distances)
    
    fill_ratios = bins_remain_cap[valid_bins] / np.max(bins_remain_cap)
    
    priorities[valid_bins] = 1.0 / (distances + 1e-6) * (1 + np.tanh(fill_ratios - 0.5))
    
    priorities[np.where(valid_bins)[0][best_fit_index]] *= 2.0
    
    return priorities
```
