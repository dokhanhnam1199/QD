```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with smoothed reciprocal waste using sigmoid."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities
    waste = bins_remain_cap[feasible_bins] - item
    priorities[feasible_bins] = 1.0 / (waste + 1e-6)
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    priorities[np.where(feasible_bins)[0][best_fit_index]] = 2.0
    fill_ratios = bins_remain_cap / np.max(bins_remain_cap)
    sigmoid_factor = 1 / (1 + np.exp(-5 * (fill_ratios - 0.5)))
    priorities = priorities * sigmoid_factor
    return priorities
```
