```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap[bins_remain_cap >= item]
    if len(possible_bins) == 0:
        return np.zeros_like(bins_remain_cap)
    
    sigmoid_scores = 1 / (1 + np.exp(-(possible_bins - item) / (np.std(bins_remain_cap) + 1e-6)))
    
    priorities = np.zeros_like(bins_remain_cap)
    
    sorted_indices = np.argsort(bins_remain_cap)
    
    count = 0
    for i in sorted_indices:
        if bins_remain_cap[i] >= item:
            priorities[i] = sigmoid_scores[count]
            count += 1
            
    return priorities
```
