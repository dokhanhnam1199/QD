```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with smoothed prioritization based on fill ratio and reciprocal waste."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    fill_ratios = (bins_remain_cap[feasible_bins] - item) / bins_remain_cap[feasible_bins]
    waste = bins_remain_cap[feasible_bins] - item
    
    sigmoid_scores = 1 / (1 + np.exp(-5 * (fill_ratios - 0.5)))
    waste_scores = 1 / (waste + 1e-6)
    
    priorities[feasible_bins] = 0.7 * sigmoid_scores + 0.3 * waste_scores
    return priorities
```
