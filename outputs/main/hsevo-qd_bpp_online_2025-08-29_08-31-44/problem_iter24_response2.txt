```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return np.zeros_like(bins_remain_cap)
    
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    
    priorities = np.zeros_like(bins_remain_cap)
    
    fill_ratios = bins_remain_cap / np.sum(bins_remain_cap)
    
    
    best_fit_priority = 1.0 + 0.5 * fill_ratios[feasible_bins][best_fit_index]
    
    
    priorities[feasible_bins] = 0.5 * fill_ratios[feasible_bins]
    
    priorities[np.where(feasible_bins)[0][best_fit_index]] = best_fit_priority

    return priorities
```
