```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    sorted_indices = np.argsort(bins_remain_cap[feasible_bins])
    
    for i in sorted_indices:
        index = feasible_bins[i]
        if bins_remain_cap[index] >= item:
            priorities[index] = 1.0
            
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    best_fit_index_original = np.where(feasible_bins)[0][best_fit_index]
    priorities[best_fit_index_original] = 2.0

    
    
    almost_full_bins = bins_remain_cap < item * 0.2
    if np.any(almost_full_bins):
        almost_full_indices = np.where(almost_full_bins)[0]
        
        for ind in almost_full_indices:
           if bins_remain_cap[ind] >= item:
               priorities[ind] += 0.5
               

    return priorities
```
