```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities
    
    remaining_capacities = bins_remain_cap[feasible_bins]
    
    
    fit_scores = 1.0 / (remaining_capacities - item + 1e-6)
    
    
    avg_remaining = np.mean(bins_remain_cap[feasible_bins])
    
    
    exploration_bonus = np.where(bins_remain_cap > avg_remaining, 0.5, 0.0)
    
    
    priorities[feasible_bins] = fit_scores + exploration_bonus
    
    
    best_bin_index = np.argmax(priorities[feasible_bins])
    
    priorities[feasible_bins] = np.where(np.arange(len(feasible_bins)) == best_bin_index, 2.0, 1.0)
    
    
    return priorities
```
