```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit and reciprocal waste to prioritize bins."""
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if np.any(suitable_bins):
        waste = bins_remain_cap[suitable_bins] - item
        min_waste = np.min(waste)
        priorities[suitable_bins] = 1.0 / (waste + 1e-6)
        best_fit_index = np.argmin(waste)
        priorities[suitable_bins] = np.where(np.arange(len(suitable_bins)) == best_fit_index,
                                            priorities[suitable_bins] + 1.0,
                                            priorities[suitable_bins])
    return priorities
```
