```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes best-fit bins with a sigmoid smoothing based on bin utilization."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    waste = bins_remain_cap[feasible_bins] - item
    best_fit_index = np.argmin(waste)
    best_fit_bin_index = np.where(feasible_bins)[0][best_fit_index]

    priorities[feasible_bins] = 1.0 / (waste + 1e-6)
    priorities[feasible_bins] = 1.0 / (1.0 + np.exp(-5 * (priorities[feasible_bins] - np.mean(priorities[feasible_bins]))))
    priorities[best_fit_bin_index] += 0.2

    return priorities
```
