```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio-based prioritization with best-fit for smoother bin selection."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    fill_ratios = bins_remain_cap[feasible_bins] / bins_remain_cap.max()
    sigmoid_scores = 1 / (1 + np.exp(-5 * (fill_ratios - 0.5)))
    fit_diffs = bins_remain_cap[feasible_bins] - item
    best_fit_index = np.argmin(fit_diffs)
    
    priorities[feasible_bins] = sigmoid_scores
    priorities[np.where(feasible_bins)[0][best_fit_index]] += 1.0
    
    return priorities
```
