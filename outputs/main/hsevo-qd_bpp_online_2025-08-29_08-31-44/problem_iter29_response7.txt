```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a sigmoid function based on bin utilization."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    remaining_capacities = bins_remain_cap[possible_bins]
    fit_scores = 1.0 / (1.0 + np.exp(-5 * (remaining_capacities - item)))
    bin_utilizations = bins_remain_cap[possible_bins] / bins_remain_cap[possible_bins].max()
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = fit_scores * bin_utilizations
    best_fit_index = np.argmin(bins_remain_cap[possible_bins] - item)
    priorities[possible_bins] = 1.0
    priorities[np.where(possible_bins)[0][best_fit_index]] = 2.0
    return priorities
```
