```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a sigmoid-scaled fill ratio for robust bin packing."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    bin_utilizations = bins_remain_cap[feasible_bins] / bins_remain_cap[feasible_bins]
    sigmoid_scores = 1 / (1 + np.exp(-5 * (bin_utilizations - 0.5)))
    fit_scores = (bins_remain_cap[feasible_bins] - item) / item
    combined_scores = 0.7 * sigmoid_scores + 0.3 * fit_scores
    priorities[feasible_bins] = combined_scores

    best_bin_index = np.argmax(priorities[feasible_bins])
    best_bin_overall_index = np.where(feasible_bins)[0][best_bin_index]
    priorities[best_bin_overall_index] = 2.0

    return priorities
```
