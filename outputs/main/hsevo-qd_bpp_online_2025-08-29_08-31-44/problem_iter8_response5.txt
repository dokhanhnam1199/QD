```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a smoothed prioritization based on fill ratio."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    fill_ratios = (bins_remain_cap[feasible_bins] - item) / bins_remain_cap[feasible_bins]
    priorities[feasible_bins] = 1.0 / (fill_ratios + 1e-6)
    best_fit_index = np.argmin(fill_ratios)
    priorities[feasible_bins] = 0.0
    priorities[np.where(feasible_bins)[0][best_fit_index]] = 2.0
    return priorities
```
