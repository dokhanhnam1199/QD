```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with sigmoid-smoothed utilization, emphasizing robustness."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    remaining_capacities = bins_remain_cap[possible_bins]
    waste = remaining_capacities - item
    fit_scores = 1.0 / (waste + 1e-6)
    fill_ratios = remaining_capacities / bins_remain_cap.max()
    sigmoid_scores = 1 / (1 + np.exp(-5 * (fill_ratios - 0.5)))
    combined_scores = fit_scores * sigmoid_scores
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = combined_scores
    return priorities
```
