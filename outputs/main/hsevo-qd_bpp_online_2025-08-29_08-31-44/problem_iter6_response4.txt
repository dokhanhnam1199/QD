```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities
    
    sorted_bins = np.argsort(bins_remain_cap[feasible_bins])
    
    
    best_fit_index = sorted_bins[0]
    
    
    priorities[feasible_bins] = 0.5
    priorities[np.where(bins_remain_cap >= item)[0][best_fit_index]] = 1.0
    
    
    second_best_index = sorted_bins[min(1, len(sorted_bins)-1)]
    priorities[np.where(bins_remain_cap >= item)[0][second_best_index]] = 0.75

    
    
    
    
    return priorities
```
