```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return np.zeros_like(bins_remain_cap)
    
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    
    priorities = np.zeros_like(bins_remain_cap)
    
    utilizations = bins_remain_cap[feasible_bins] / (bins_remain_cap[feasible_bins] + item)
    
    sigmoid_utilizations = 1 / (1 + np.exp(-5 * (utilizations - 0.5)))
    
    priorities[feasible_bins] = sigmoid_utilizations
    
    priorities[np.where(feasible_bins)[0][best_fit_index]] += 1.0
    
    return priorities
```
