```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities
    
    bin_fill_ratios = 1.0 - (bins_remain_cap / np.maximum(bins_remain_cap[feasible_bins], 1e-9))
    
    best_fit_diffs = bins_remain_cap[feasible_bins] - item
    best_fit_index = np.argmin(best_fit_diffs)
    
    fit_priority = np.zeros_like(bins_remain_cap)
    fit_priority[feasible_bins] = np.exp(-best_fit_diffs / (item + 1e-9))
    
    utilization_priority = np.zeros_like(bins_remain_cap)
    utilization_priority[feasible_bins] = 1.0 / (1.0 + np.exp(-5.0 * (bin_fill_ratios[feasible_bins] - 0.5)))
    
    priorities[feasible_bins] = 0.6 * fit_priority[feasible_bins] + 0.4 * utilization_priority[feasible_bins]
    
    return priorities
```
