import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, sigmoid_weight: float = 2.325343939993423, sigmoid_threshold: float = 0.10983875502792265) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Sigmoid Fit Score.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
        sigmoid_weight: Weight of the sigmoid function.
        sigmoid_threshold: Threshold of the sigmoid function.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    fit_scores = (bins_remain_cap[possible_bins] - item) / bins_remain_cap[possible_bins]
    sigmoid_scores = 1 / (1 + np.exp(-sigmoid_weight * (fit_scores - sigmoid_threshold)))
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = sigmoid_scores
    return priorities
