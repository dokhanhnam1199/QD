```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with smoothed fill ratio using sigmoid."""
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if not np.any(suitable_bins):
        return priorities
    waste = bins_remain_cap[suitable_bins] - item
    fill_ratios = (bins_remain_cap[suitable_bins] / np.max(bins_remain_cap)) if np.max(bins_remain_cap) > 0 else np.ones_like(bins_remain_cap[suitable_bins])
    sigmoid_fill_ratio = 1 / (1 + np.exp(-5 * (fill_ratios - 0.5)))
    priorities[suitable_bins] = sigmoid_fill_ratio / (waste + 1e-6)
    best_fit_index = np.argmin(waste)
    priorities[suitable_bins] = np.where(np.arange(len(suitable_bins)) == best_fit_index, priorities[suitable_bins] + 1.0, priorities[suitable_bins])
    return priorities
```
