```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with bin utilization, smoothed by a sigmoid function."""
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return np.zeros_like(bins_remain_cap)

    best_fit_scores = 1.0 / (bins_remain_cap[feasible_bins] - item + 1e-6)
    utilization_scores = bins_remain_cap[feasible_bins] / np.max(bins_remain_cap)

    combined_scores = 0.6 * best_fit_scores + 0.4 * utilization_scores

    def sigmoid(x):
        return 1 / (1 + np.exp(-x))

    priorities = np.zeros_like(bins_remain_cap)
    if np.any(feasible_bins):
        scaled_scores = sigmoid(combined_scores)
        priorities[feasible_bins] = scaled_scores
        best_bin_index = np.argmax(scaled_scores)
        priorities[np.where(feasible_bins)[0][best_bin_index]] += 0.5

    return priorities
```
