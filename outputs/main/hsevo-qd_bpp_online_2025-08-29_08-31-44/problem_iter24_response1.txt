```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return np.zeros_like(bins_remain_cap)
    
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    
    priorities = np.zeros_like(bins_remain_cap)
    
    fill_ratios = bins_remain_cap / np.full_like(bins_remain_cap, bins_remain_cap.max())
    
    
    best_fit_priority = 2.0
    utilization_weight = 0.5
    
    priorities[feasible_bins] = utilization_weight * fill_ratios[feasible_bins] + (1 - utilization_weight)
    priorities[np.where(feasible_bins)[0][best_fit_index]] += best_fit_priority
    
    return priorities
```
