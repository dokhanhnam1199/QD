```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with smoothed bin utilization (sigmoid) for robust packing."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    waste = bins_remain_cap[feasible_bins] - item
    fit_score = 1.0 / (waste + 1e-6)
    utilization = item / bins_remain_cap[feasible_bins]
    sigmoid_input = np.log(1 + np.exp(fit_score))
    priorities[feasible_bins] = 0.6 * sigmoid_input + 0.4 * utilization
    best_fit_index = np.argmin(bins_remain_cap[feasible_bins] - item)
    priorities[np.where(feasible_bins)[0][best_fit_index]] = 2.0
    return priorities
```
