```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with reciprocal waste, boosted by a sigmoid."""
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if not np.any(suitable_bins):
        return priorities
    waste = bins_remain_cap[suitable_bins] - item
    priorities[suitable_bins] = 1.0 / (waste + 1e-6)
    best_fit_index = np.argmin(waste)
    fill_ratio = (bins_remain_cap[suitable_bins] - item) / bins_remain_cap[suitable_bins]
    sigmoid_score = 1.0 / (1.0 + np.exp(-5 * (fill_ratio[best_fit_index] - 0.5)))
    priorities[suitable_bins] = np.where(np.arange(len(suitable_bins)) == best_fit_index, priorities[suitable_bins] + sigmoid_score, priorities[suitable_bins])
    return priorities
```
