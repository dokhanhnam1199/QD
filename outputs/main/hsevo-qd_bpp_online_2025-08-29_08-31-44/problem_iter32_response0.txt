```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit and fill ratio with sigmoid smoothing for prioritization."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    remaining_capacities = bins_remain_cap[feasible_bins]
    fit_scores = 1.0 / (remaining_capacities - item + 1e-6)
    fill_ratio = (bins_remain_cap[feasible_bins] - item) / bins_remain_cap[feasible_bins]
    fill_ratio = np.clip(fill_ratio, 0.0, 1.0)
    sigmoid_fill_ratio = 1.0 / (1.0 + np.exp(-5 * (fill_ratio - 0.5)))
    priorities[feasible_bins] = fit_scores + sigmoid_fill_ratio
    return priorities
```
