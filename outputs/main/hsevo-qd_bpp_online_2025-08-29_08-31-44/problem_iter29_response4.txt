```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a sigmoid-smoothed utilization score."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return priorities

    best_fit_score = bins_remain_cap[feasible_bins] - item
    best_fit_index = np.argmin(best_fit_score)
    best_fit_index = np.where(feasible_bins)[0][best_fit_index]

    utilization_score = bins_remain_cap[feasible_bins] / (bins_remain_cap[feasible_bins] + item)
    sigmoid_scale = 5.0
    utilization_sigmoid = 1 / (1 + np.exp(-sigmoid_scale * (1 - utilization_score)))

    priorities[feasible_bins] = utilization_sigmoid
    priorities[best_fit_index] += 1.0

    return priorities
```
