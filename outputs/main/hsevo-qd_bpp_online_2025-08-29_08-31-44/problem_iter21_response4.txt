```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    fill_ratios = bins_remain_cap[feasible_bins] / bins_remain_cap[feasible_bins].max()
    best_fit_diff = bins_remain_cap[feasible_bins] - item
    best_fit_index = np.argmin(best_fit_diff)
    
    smooth_best_fit = 1 / (1 + np.exp(-best_fit_diff[best_fit_index]))
    smooth_fill_ratio = 1 / (1 + np.exp(-fill_ratios))

    combined_priority = 0.6 * smooth_best_fit + 0.4 * smooth_fill_ratio
    
    priorities[feasible_bins] = combined_priority
    priorities[np.where(feasible_bins)[0][best_fit_index]] += 0.5
    
    return priorities
```
