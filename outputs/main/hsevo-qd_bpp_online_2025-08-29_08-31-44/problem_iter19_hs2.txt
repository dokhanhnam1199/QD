import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.00019452110152304698) -> np.ndarray:
    """
    Calculates priorities based on item size and remaining capacity of bins.

    Args:
        item: The size of the item.
        bins_remain_cap: A numpy array representing the remaining capacity of each bin.
        epsilon: A small value to avoid division by zero.

    Returns:
        A numpy array representing the priorities of each bin.
    """
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)
    distances = bins_remain_cap[valid_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = 1.0 / (distances + epsilon)
    return priorities
