import numpy as np

def heuristics_v2(distance_matrix):
    """{This algorithm ranks edges based on the ratio of distance to the average distance of nodes connected to them, favoring edges connecting nodes with generally shorter distances to their neighbors.}"""
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)

    avg_distances = np.zeros(n)
    for i in range(n):
        avg_distances[i] = np.mean(distance_matrix[i, :])

    for i in range(n):
        for j in range(i + 1, n):
            distance = distance_matrix[i, j]
            heuristics_matrix[i, j] = (avg_distances[i] + avg_distances[j]) / (2 * distance)
            heuristics_matrix[j, i] = heuristics_matrix[i, j]

    return heuristics_matrix
