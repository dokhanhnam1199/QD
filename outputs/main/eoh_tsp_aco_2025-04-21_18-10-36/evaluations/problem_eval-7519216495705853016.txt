import numpy as np

def heuristics_v2(distance_matrix):
    """{This algorithm uses a simplified approach to estimate edge desirability by considering the inverse of the distance between nodes, enhanced with a scaling factor based on the average distance in the matrix.}"""
    n = distance_matrix.shape[0]
    average_distance = np.mean(distance_matrix)
    heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)

    for i in range(n):
        for j in range(n):
            if i != j:
                heuristics_matrix[i, j] = (average_distance / distance_matrix[i, j])
    return heuristics_matrix
