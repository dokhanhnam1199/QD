```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Random‑Fit priority for the online Bin Packing Problem.

    Each bin that can accommodate the incoming `item` receives a random
    priority in the interval (0, 1). Bins that lack sufficient remaining
    capacity are assigned a priority of -∞ so they are never selected.
    The bin with the highest priority (i.e., the highest random draw among
    feasible bins) is chosen, which corresponds exactly to picking a random
    feasible bin.

    Parameters
    ----------
    item : float
        Size of the newly arriving item.
    bins_remain_cap : np.ndarray
        1‑D array containing the remaining capacity of each currently open bin.

    Returns
    -------
    np.ndarray
        Array of the same shape as ``bins_remain_cap`` with a priority scores.
    """
    # Initialize all priorities to -infinity (unselectable)
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)

    # Identify bins that can hold the item
    feasible = bins_remain_cap >= item

    # Assign a uniform random priority to each feasible bin
    if np.any(feasible):
        # Random values drawn independently for each feasible bin
        priorities[feasible] = np.random.rand(np.count_nonzero(feasible))

    return priorities
```
