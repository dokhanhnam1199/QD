Linear slack penalty, virtual new‑bin with waste penalty, huge exact‑fit bonus, tiny deterministic tie‑breaker.
Scale by bin fullness, sigmoid gap score, add look‑ahead boost, tiny random tie‑breaker, avoid huge constant bonuses.
Employ capacity inference, dynamic sigmoid steepness based on fullness, lookahead boosts, and tiny random tie‑breakers for smoother priorities.
Adaptive sigmoid on remaining gap, scale by bin fullness, add look‑ahead boost, tiny random tie‑breaker.
Use adaptive slack weighting, massive exact‑fit bonus, index‑based tie‑breaker, and a non‑linear leftover penalty for improved bin selection.
Normalize slack, add base negative slack, exponential penalty, small anticipation, massive exact‑fit reward, deterministic tie‑breaker.
Linear slack cost, exact‑fit bonus, virtual new‑bin penalty, tiny tie‑breaker, prefer minimal waste.
Normalize gaps, sigmoid with fullness‑scaled steepness, incorporate look‑ahead boost, tiny random tie‑breaker, avoid huge bonuses.
Normalize remaining capacity, apply per‑bin sigmoid, incorporate look‑ahead, avoid large fixed bonuses, add tiny random tie‑breaker.
Monotonic slack base, exponential penalty, huge exact‑fit bonus, minimal jitter; drop extra anticipation term.
