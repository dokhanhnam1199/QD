```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority assignment for first‑fit online bin packing.

    Returns a higher priority for bins that can accommodate the incoming item.
    Among those, the earliest bin (smallest index) is favoured. Unfeasible
    bins receive a priority of negative infinity so they are never selected.
    
    Parameters
    ----------
    item : float
        Size of the item to add to a bin.
    bins_remain_cap : np.ndarray
        1‑D array containing the remaining capacity of each bin.
    
    Returns
    -------
    np.ndarray
        Array of priority scores, one per bin, of the same shape as
        ``bins_remain_cap``.
    """
    # Ensure a 1‑D array of floats
    bins = np.asarray(bins_remain_cap, dtype=float).ravel()
    
    # Base priority: earlier bins get a larger (less negative) score
    base_priority = -np.arange(bins.size, dtype=float)
    
    # Bins that can fit the item
    fit_mask = bins >= item
    
    # Initialise all priorities to -inf (exclude infeasible bins)
    priorities = np.full_like(bins, -np.inf, dtype=float)
    
    # Assign priorities only to feasible bins
    priorities[fit_mask] = base_priority[fit_mask]
    
    return priorities
```
