```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority function implementing the Worst‑Fit heuristic for online
    bin packing.

    The worst‑fit strategy chooses the bin with the *largest* remaining
    capacity that can still accommodate the incoming item.  We compute,
    for each bin, the capacity that would remain after putting the
    item.  Bins that cannot hold the item receive an effectively
    minimal priority value (negative infinity), ensuring they are
    never selected by a max‑arg operation.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array containing the remaining capacity of each bin in use.

    Returns
    -------
    np.ndarray
        An array of the same shape as `bins_remain_cap`.  Higher values
        correspond to more desirable bins for the upcoming item.
    """
    # Residual capacity after placing the item (negative if impossible)
    remaining_after = bins_remain_cap - item

    # Bins that cannot accommodate the item get a very low priority.
    # Using -np.inf guarantees they will never be chosen by np.argmax.
    low_priority = -np.inf
    priorities = np.where(remaining_after >= 0, remaining_after, low_priority)

    return priorities
```
