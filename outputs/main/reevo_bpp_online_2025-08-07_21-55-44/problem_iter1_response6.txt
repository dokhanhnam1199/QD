```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Sigmoid Fit Score for online Bin Packing.

    Computes a priority score for each bin such that bins leaving a
    small positive residual after packing the given `item` obtain the
    highest scores.  Bins that cannot accommodate the item receive
    a large negative penalty.

    Parameters
    ----------
    item : float
        Size of the item to be packed.
    bins_remain_cap : np.ndarray
        Remaining capacities of each bin (1â€‘D array).

    Returns
    -------
    np.ndarray
        Array of the same shape as `bins_remain_cap` containing priority
        scores; the bin with the maximum score is chosen.
    """
    # Calculate the leftover capacity after placing the item
    gaps = bins_remain_cap - item

    # Parameter controlling the sharpness of the sigmoid curve.
    # Larger values yield stronger preference for very small gaps.
    k = 8.0

    # Assign a very low score for bins that cannot hold the item.
    NEG_INF = -1e10

    # Compute the sigmoid over the gaps for bins that can accommodate the item.
    priorities = np.where(
        gaps >= 0,
        1.0 / (1.0 + np.exp(k * gaps)),   # Higher when gaps are small
        NEG_INF                           # Impossible fits get minimal priority
    )

    return priorities
```
