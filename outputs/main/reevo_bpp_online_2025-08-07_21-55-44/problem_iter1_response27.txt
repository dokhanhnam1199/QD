```python
import numpy as np

# Random number generator (single instance for reproducibility across calls)
_rng = np.random.default_rng()

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Random Fit priority for online Bin Packing.

    For each bin that can accommodate ``item`` a random priority in (0, 1) is
    generated. Bins with insufficient remaining capacity receive a priority of
    ``-np.inf`` so they are never selected. The bin with the highest priority
    (i.e., a random feasible bin) will be chosen.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D array with the remaining capacity of each bin.

    Returns:
        A 1‑D array of the same shape as ``bins_remain_cap of priorities.
    """
    # Feasibility mask: True where the item fits into the bin.
    feasible = bins_remain_cap >= item

    # Random priorities for all bins (uniform in (0, 1)).
    random_priorities = _rng.random(bins_remain_cap.shape)

    # Infeasible bins get -inf priority, guaranteeing they are never chosen.
    priorities = np.where(feasible, random_priorities, -np.inf)

    return priorities
```
