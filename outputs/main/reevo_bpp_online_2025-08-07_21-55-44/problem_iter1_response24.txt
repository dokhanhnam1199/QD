```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Exact Fit First priority function for online Bin Packing.

    The function awards the highest priority to bins that can accommodate the item with the smallest
    remaining slack. Bins that cannot accommodate the item receive -inf priority, ensuring they are never
    selected. When an exact fit (remaining capacity equals the item size) exists, a large bonus is added
    to guarantee its selection.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D NumPy array containing the remaining capacity of each current bin.

    Returns:
        NumPy array of the same shape as ``bins_remain_cap`` with priority scores for each bin.
    """
    # Compute how much space would remain after placing the item in each bin
    slack = bins_remain_cap - item

    # Determine which bins are feasible (slack >= 0)
    feasible = slack >= 0

    # Base priority: higher for smaller slack (i.e., tighter fit)
    # Infeasible bins get -inf so they are never chosen.
    priorities = np.where(feasible, -slack, -np.inf)

    # Exact fit detection (accounting for floating‑point imprecision)
    eps = 1e-12
    exact_fit = np.abs(slack) <= eps

    # Add a large constant to exact fits to dominate any other feasible bin
    EXACT_FIT_BONUS = 1e9
    priorities = np.where(exact_fit, priorities + EXACT_FIT_BONUS, priorities)

    return priorities
```
