```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority based on a Sigmoid Fit Score for the online Bin Packing Problem.

    A high score is given when the incoming item almost exactly fills the
    remaining capacity of a bin (i.e., the residual space is minimal).  
    The score is computed using a logistic (sigmoid) function applied to
    the ratio of the item size to the remaining capacity.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        Remaining capacity of each existing bin.

    Returns
    -------
    np.ndarray
        Priority score for each bin. Bins that cannot accommodate the
        item receive -np.inf so they are never selected.
    """
    # Can this item fit in a particular bin?
    can_fit = bins_remain_cap >= item

    # Avoid division by zero
    eps = 1e-12
    ratio = np.empty_like(bins_remain_cap, dtype=float)
    ratio[can_fit] = item / (bins_remain_cap[can_fit] + eps)
    ratio[~can_fit] = 0.0  # placeholder; will be overwritten

    # Logistic parameters
    k = 12.0          # steepness of the sigmoid
    center = 0.5      # center (ratio) giving a medium score

    # Compute the sigmoid fit score: higher when ratio ~ 1 (i.e., good fit)
    priorities = 1.0 / (1.0 + np.exp(-k * (ratio - center)))

    # Exclude bins that cannot accommodate the item
    priorities[~can_fit] = -np.inf

    return priorities
```
