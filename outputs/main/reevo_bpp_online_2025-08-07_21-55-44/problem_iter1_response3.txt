```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Return priority scores for each bin according to the Almost Full Fit heuristic.

    The heuristic prefers the bin that, after receiving the item, would have the
    smallest leftover capacity (i.e., be "almost full").

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1â€‘D array of remaining capacities for each bin.

    Returns
    -------
    np.ndarray
        Array of priority scores; higher values correspond to more desirable bins.
        Unfeasible bins receive -inf priority.
    """
    # Compute the hypothetical remaining capacity after placing the item
    new_remain = bins_remain_cap - item

    # Identify bins where the item fits
    feasible = new_remain >= 0

    # Initialize priorities with -inf for infeasible bins
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)

    # For feasible bins, higher priority for smaller leftover (almost full)
    priorities[feasible] = -new_remain[feasible]

    return priorities
```
