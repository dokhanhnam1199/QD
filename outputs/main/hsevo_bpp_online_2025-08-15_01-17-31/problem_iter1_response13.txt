```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Almost Full Fit strategy.

    The Almost Full Fit strategy prioritizes bins that will be almost full after
    adding the item. A small remaining capacity is preferred.
    If a bin has exactly enough capacity for the item, it's a perfect fit.
    If a bin has more capacity than needed, the priority decreases as the remaining
    capacity increases.
    If a bin cannot fit the item, its priority is set to a very low value.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.full_like(bins_remain_cap, -np.inf)

    can_fit_mask = bins_remain_cap >= item

    fit_capacities = bins_remain_cap[can_fit_mask] - item

    # Prioritize bins where the remaining capacity after fitting is smallest
    # A perfect fit (remaining capacity 0) gets the highest priority.
    # Larger remaining capacities get lower priorities.
    priorities[can_fit_mask] = -fit_capacities

    return priorities
```
