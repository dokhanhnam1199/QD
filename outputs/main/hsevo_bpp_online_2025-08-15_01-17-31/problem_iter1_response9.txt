```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    suitable_bins_mask = bins_remain_cap >= item
    
    if not np.any(suitable_bins_mask):
        return np.zeros_like(bins_remain_cap)
    
    suitable_bins_remain_cap = bins_remain_cap[suitable_bins_mask]
    
    fit_values = suitable_bins_remain_cap - item
    
    priorities = np.zeros_like(bins_remain_cap)
    
    if len(fit_values) > 0:
        max_fit = np.max(fit_values)
        if max_fit > 0:
            scaled_fit_values = fit_values / max_fit
            exp_values = np.exp(scaled_fit_values)
            priorities[suitable_bins_mask] = exp_values / np.sum(exp_values)
        else:
            priorities[suitable_bins_mask] = 1.0 / len(fit_values)
            
    return priorities
```
