```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    suitable_bins_mask = bins_remain_cap >= item
    
    if np.any(suitable_bins_mask):
        suitable_bins_cap = bins_remain_cap[suitable_bins_mask]
        
        best_fit_scores = 1.0 / (suitable_bins_cap - item + 1e-9) 
        
        normalized_scores = (best_fit_scores - np.min(best_fit_scores)) / (np.max(best_fit_scores) - np.min(best_fit_scores) + 1e-9)
        
        
        original_indices = np.where(suitable_bins_mask)[0]
        
        
        for i, original_idx in enumerate(original_indices):
            priorities[original_idx] = normalized_scores[i]
            
    
    return priorities
```
