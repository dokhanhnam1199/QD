```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            remaining_capacity_after_packing = bins_remain_cap[i] - item
            priorities[i] = 1 / (remaining_capacity_after_packing + 1e-6)
    return priorities
```
