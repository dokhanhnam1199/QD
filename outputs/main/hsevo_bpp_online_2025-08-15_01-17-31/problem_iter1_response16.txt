```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    available_bins_mask = bins_remain_cap >= item
    
    available_bins_cap = bins_remain_cap[available_bins_mask]
    
    if available_bins_cap.size == 0:
        return np.zeros_like(bins_remain_cap)
    
    excess_capacity = available_bins_cap - item
    
    slope = 10.0
    intercept = -5.0
    
    priorities = 1 / (1 + np.exp(-(slope * (excess_capacity) + intercept)))
    
    final_priorities = np.zeros_like(bins_remain_cap, dtype=float)
    final_priorities[available_bins_mask] = priorities
    
    return final_priorities
```
