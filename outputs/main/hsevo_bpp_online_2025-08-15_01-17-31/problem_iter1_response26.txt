```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    suitable_bins_mask = bins_remain_cap >= item
    suitable_bins_cap = bins_remain_cap[suitable_bins_mask]

    if suitable_bins_cap.size == 0:
        return np.zeros_like(bins_remain_cap)

    residuals = suitable_bins_cap - item
    
    
    scaled_residuals = residuals / suitable_bins_cap
    
    
    priorities_for_suitable = 1 / (1 + np.exp(-10 * (scaled_residuals - 0.5)))
    
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[suitable_bins_mask] = priorities_for_suitable
    
    return priorities
```
