```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a First Fit Decreasing-like heuristic for online BPP.

    The priority is higher for bins that can accommodate the item and have less remaining capacity after fitting.
    This aims to fill bins more completely, potentially leaving larger remaining capacities in other bins for future larger items.
    A very small positive value is added to prioritize bins that can fit the item over those that cannot.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    can_fit = bins_remain_cap >= item
    
    # Assign a higher priority to bins that can fit the item.
    # For those that can fit, the priority is inversely proportional to the remaining capacity AFTER fitting.
    # This encourages filling bins more tightly.
    # Adding a small constant to prioritize fitting bins over non-fitting bins.
    priorities[can_fit] = 1.0 / (bins_remain_cap[can_fit] - item + 1e-9) 

    # Add a small positive value to any bin that can fit the item.
    # This ensures that bins that can fit are always preferred over bins that cannot.
    priorities[can_fit] += 1e-9 

    return priorities
```
