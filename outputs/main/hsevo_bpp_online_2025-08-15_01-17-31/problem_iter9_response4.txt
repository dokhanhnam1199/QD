```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    suitable_bins_mask = bins_remain_cap >= item
    
    if np.any(suitable_bins_mask):
        suitable_bins_cap = bins_remain_cap[suitable_bins_mask]
        original_indices = np.where(suitable_bins_mask)[0]
        
        
        best_fit_diff = suitable_bins_cap - item
        min_diff = np.min(best_fit_diff)
        best_fit_indices_in_suitable = np.where(best_fit_diff == min_diff)[0]
        
        
        first_fit_indices_in_suitable = np.where(suitable_bins_cap > 0)[0]
        
        
        for i in range(len(suitable_bins_cap)):
            bin_original_index = original_indices[i]
            
            score = 0.0
            
            
            if i in best_fit_indices_in_suitable:
                score += 2.0 
            
            
            if i in first_fit_indices_in_suitable:
                score += 1.0
            
            
            if suitable_bins_cap[i] < 0.2 * (np.max(bins_remain_cap) if np.max(bins_remain_cap) > 0 else 1): 
                score += 0.5
            
            priorities[bin_original_index] = score
            
    return priorities
```
