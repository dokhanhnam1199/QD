```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Compute a deterministic, monotonic priority score for each bin based on the residual
    capacity after placing an item. The priority is higher for bins that are closer to an
    exact fit. An exact or near‑exact fit receives a small bonus so that it is always
    preferred over a bin with a larger remaining capacity.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities for each bin.

    Returns
    -------
    np.ndarray
        1‑D array of priority scores; larger values indicate a more desirable bin.
        Bins that cannot accommodate the item are given a priority of -inf.
    """
    leftover = bins_remain_cap - item
    feas = leftover >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    epsilon = 1e-12
    exact_fit = leftover <= epsilon
    bonus = 1e-6
    priorities[feas] = -leftover[feas] + bonus * exact_fit[feas]
    return priorities
```
