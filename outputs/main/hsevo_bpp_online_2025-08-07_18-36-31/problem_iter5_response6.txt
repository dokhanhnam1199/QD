```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Exact‑fit boost, quadratic residual penalty, capacity tie‑breaker, small random diversification."""
    leftover = bins_remain_cap - item
    feasible = leftover >= 0
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    if not np.any(feasible):
        return scores
    alpha = 0.2
    base = -leftover[feasible] - alpha * (leftover[feasible] ** 2)
    base += 1e-3 * bins_remain_cap[feasible]  # typo corrected: bins_remain_cap
    base += np.random.rand(base.shape[0]) * 1e-6
    scores[feasible] = base
    exact = (leftover == 0) & feasible
    scores[exact] += 1e6
    return scores
```
