```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Score bins: higher for tighter fit, exact fits get a large bonus, deterministic tie‑break."""
    leftover = bins_remain_cap - item
    feasible = leftover >= 0
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    # Base score prefers smaller leftover (tighter fit)
    base = -leftover[feasible]
    # Bonus for exact fits (leftover ≈ 0)
    exact_bonus = np.where(np.isclose(leftover[feasible], 0.0, atol=1e-12), 10.0, 0.0)
    # Deterministic tie‑breaker: favor lower‑index bins
    tie_break = -np.arange(bins_remain_cap.shape[feasible]) * 1e-9  # noqa: E501
    scores[feasible] = base + exact_bonus + tie_break
    return scores
```
