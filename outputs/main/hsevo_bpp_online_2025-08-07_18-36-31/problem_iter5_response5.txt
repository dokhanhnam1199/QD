```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    feasible = bins_remain_cap >= item
    residual = bins_remain_cap - item
    w_cap = 0.1
    w_inv = 0.5
    M = 1e9
    base = -residual**2
    cap_score = w_cap * bins_remain_cap
    inv_score = 1.0 / (1.0 + residual)
    exact_bonus = np.where(np.isclose(residual, 0.0), M, 0.0)
    tie = np.arange(bins_remain_cap.shape[0]) * 1e-6
    scores = base + cap_score + w_inv * inv_score + exact_bonus + tie
    scores = np.where(feasible, scores, -np.inf)
    return scores
```
