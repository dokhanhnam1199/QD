```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Softmax-Based Fit priority function."""
    feasible = bins_remain_cap >= item
    slack = bins_remain_cap - item
    alpha = 5.0
    log_scores = np.where(feasible, -alpha * slack, -np.inf)
    if not np.isfinite(log_scores).any():
        return np.zeros_like(bins_remain_cap, dtype=float)
    max_log = np.max(log_scores[np.isfinite(log_scores)])
    exp_scores = np.exp(log_scores - max_log)
    sum_exp = exp_scores.sum()
    if sum_exp == 0:
        return np.zeros_like(bins_remain_cap, dtype=float)
    priorities = exp_scores / sum_exp
    return priorities
```
