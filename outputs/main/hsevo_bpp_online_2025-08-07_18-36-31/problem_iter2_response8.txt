```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines inverse residual scoring with exact-fit boost and mild remaining-capacity tie-breaker.
    """
    leftover = bins_remain_cap - item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    fit_mask = leftover >= 0
    priorities[fit_mask] = 1.0 / (1.0 + leftover[fit_mask])
    exact_mask = fit_mask & (leftover == 0)
    priorities[exact_mask] += 10.0
    priorities[fit_mask] += 0.01 * bins_remain_cap[fit_mask]
    return priorities
```
