```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Computes sigmoid fit score priorities for placing item in bins.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: Remaining capacities of bins.

    Returns:
        Priority scores for each bin; higher indicates better fit.
    """
    residual = bins_remain_cap - item
    mask = residual >= 0
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    if not mask.any():
        return priorities
    k = 10.0
    exp_neg = np.exp(-k * residual[mask])
    sigmoid_score = 2 * exp_neg / (1 + exp_neg)
    fill_factor = item / bins_remain_cap[mask]
    priorities[mask] = fill_factor * sigmoid_score
    return priorities
```
