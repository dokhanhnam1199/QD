```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins with the most remaining capacity,
    and such that the item size is closer to the remaining capacity of the bin.
    This is a simple heuristic to minimize waste and try to fill bins as much as possible.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate a score that represents how well the item fits into each bin
    fit_score = 1 / (1 + np.abs(bins_remain_cap - item))
    
    # Prioritize bins with more remaining capacity
    capacity_score = bins_remain_cap / np.sum(bins_remain_cap)
    
    # Combine the two scores to get a final priority score
    priority_score = fit_score * capacity_score
    
    return priority_score
```
