```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most remaining capacity
    and anticipate the item size to fit with least wasted space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the wasted space for each bin if the item is added
    wasted_space = np.maximum(bins_remain_cap - item, 0)
    
    # Invert the wasted space so that bins with least wasted space get higher priority
    inverted_wasted_space = 1 / (wasted_space + 1e-6)  # Add small value for numerical stability
    
    # Calculate the priority score for each bin based on the remaining capacity
    priority_score = inverted_wasted_space * (bins_remain_cap / (bins_remain_cap + item + 1e-6))  # Add small value for numerical stability
    
    return priority_score
```
