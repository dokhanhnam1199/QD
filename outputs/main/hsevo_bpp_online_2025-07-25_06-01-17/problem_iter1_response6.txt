```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have just enough capacity to 
    hold the item, to avoid splitting the item across multiple bins and thus minimize 
    the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the number of bins that can hold the item
    viable_bins = bins_remain_cap >= item
    
    # For bins that cannot hold the item, set priority to negative infinity
    priority = np.where(viable_bins, 1.0 / (bins_remain_cap + 1e-9), -np.inf)
    
    # For bins that can hold the item exactly (with some tolerance), increase priority
    exact_bins = np.isclose(bins_remain_cap, item)
    priority = np.where(exact_bins, priority + 1e3, priority)
    
    return priority
```
