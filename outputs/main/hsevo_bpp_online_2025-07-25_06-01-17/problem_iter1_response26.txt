```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have just enough capacity to 
    hold the item, as this reduces the likelihood of having many nearly-empty bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the number of bins
    num_bins = len(bins_remain_cap)
    
    # Calculate the priority score for each bin
    # If a bin has not enough capacity, set its priority to negative infinity
    # Otherwise, the priority is inversely proportional to the difference between 
    # the remaining capacity and the item size, plus a small value to avoid division by zero
    priority = np.where(
        bins_remain_cap < item, 
        -np.inf, 
        1 / (np.abs(bins_remain_cap - item) + 1e-9)
    )
    
    return priority
```
