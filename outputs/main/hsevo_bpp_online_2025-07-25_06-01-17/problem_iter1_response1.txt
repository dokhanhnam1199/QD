```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most remaining capacity
    and magnets bins that have just enough space to fit the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    cap_diff = bins_remain_cap - item
    
    # Calculate the priority score based on the difference
    # Bins with remaining capacity closer to the item size get higher priority
    # Bins that can fit the item (cap_diff >= 0) get higher priority than bins that can't
    priority = np.where(cap_diff >= 0, 1 + cap_diff, -1 - cap_diff)
    
    # Increase priority for bins that have a lot of remaining capacity
    priority = priority * (bins_remain_cap / bins_remain_cap.max())
    
    return priority
```
