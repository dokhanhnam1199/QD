```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on how full they are, 
    and how well the item fits in the bin. The bin that can fill up the most 
    with the item, or the bin that is closest to being full after adding the 
    item gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the ratio of the item to each bin's remaining capacity
    ratio = np.where(bins_remain_cap == 0, 0, item / bins_remain_cap)
    
    # Calculate the remaining space in each bin after adding the item
    remaining_space = np.where(bins_remain_cap >= item, bins_remain_cap - item, 0)
    
    # Calculate a "fill" score for each bin: how much of the bin would be full after adding the item
    fill_score = np.where(remaining_space == 0, 1, 1 - remaining_space / bins_remain_cap)
    
    # Calculate the priority score for each bin
    priority_score = np.where(ratio == 0, 0, ratio * fill_score)
    
    return priority_score
```
