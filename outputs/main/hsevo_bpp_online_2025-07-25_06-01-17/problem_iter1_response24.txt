```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most available capacity,
    while considering the item size to ensure it doesn't exceed the bin capacity.
    Ties are broken by preferring bins with smaller capacities, to encourage more efficient packing.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Filter out bins that don't have enough capacity for the item
    valid_bins = bins_remain_cap >= item
    
    # Initialize priority scores to zero
    priority = np.zeros_like(bins_remain_cap)
    
    # For valid bins, calculate the priority score based on remaining capacity and item size
    priority[valid_bins] = bins_remain_cap[valid_bins] / (bins_remain_cap[valid_bins] + item)
    
    return priority
```
