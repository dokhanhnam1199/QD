```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have enough capacity to fit the item,
    and give higher priority to bins that have the most available space relative to the item size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the available space in each bin relative to the item size
    relative_available_space = bins_remain_cap - item
    
    # Favor bins that can fit the item and have the most available space relative to the item size
    priority = np.where(relative_available_space >= 0, relative_available_space / item, -np.inf)
    
    # Add a small perturbation to break ties in favor of bins with more absolute available space
    priority += 1e-6 * bins_remain_cap / (1 + bins_remain_cap.sum())
    
    return priority
```
