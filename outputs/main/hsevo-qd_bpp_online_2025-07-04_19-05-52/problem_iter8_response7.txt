```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio, existing fill, gap penalty, and near-perfect fit bonus."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    eligible_bins = bins_remain_cap >= item

    if not np.any(eligible_bins):
        return np.zeros_like(bins_remain_cap) - np.inf

    fill_ratio = item / bins_remain_cap
    fill_ratio[~eligible_bins] = -np.inf
    priorities = fill_ratio

    existing_fill = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    priorities[eligible_bins] += 0.1 * existing_fill[eligible_bins]

    small_gap_threshold = 0.2 * np.max(bins_remain_cap)
    small_gap = (bins_remain_cap - item) < small_gap_threshold
    priorities[small_gap & eligible_bins] -= 0.05

    # Near-perfect fit bonus
    near_perfect_fit = np.isclose(bins_remain_cap, item, rtol=1e-05, atol=1e-06)
    priorities[near_perfect_fit & eligible_bins] += 0.003

    return priorities
```
