```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Inverse Distance (Proximity Fit).

    The priority is higher for bins that have a remaining capacity closer to the item's size.
    Specifically, it uses 1 / (abs(bins_remain_cap - item) + epsilon) to avoid division by zero.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    epsilon = 1e-6  # Small value to prevent division by zero
    # Calculate the difference between remaining capacity and item size
    diff = bins_remain_cap - item
    # Calculate the absolute difference
    abs_diff = np.abs(diff)
    # Calculate priority: higher for smaller absolute differences (closer fit)
    priorities = 1.0 / (abs_diff + epsilon)
    # Filter out bins that cannot fit the item
    priorities[bins_remain_cap < item] = 0
    return priorities
```
