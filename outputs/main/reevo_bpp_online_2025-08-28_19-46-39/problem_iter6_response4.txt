```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.1) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Epsilon-Greedy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
        epsilon: Exploration rate.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    eligible_bins = bins_remain_cap >= item

    if np.any(eligible_bins):
        # Greedy: Best fit
        best_fit_bin_index = np.argmin(bins_remain_cap[eligible_bins] - item)
        best_fit_bin_index = np.where(eligible_bins)[0][best_fit_bin_index]
        priorities[best_fit_bin_index] = 1.0

        # Epsilon-greedy exploration
        if np.random.rand() < epsilon:
            random_bin_indices = np.where(eligible_bins)[0]
            random_index = np.random.choice(random_bin_indices)
            priorities[random_index] = np.random.rand()

    return priorities
```
