Tune exploration (epsilon) dynamically; smaller capacities need less, favor tightest fits.
Scale exploration dynamically with bin capacity; higher epsilon isn't always better. Focus exploration on useful bins.




Prioritize tightest fit, scale exploration with bin capacity, and tune exploration rate (epsilon) dynamically.




Dynamic, scaled randomness—adjusting exploration to bin capacity—improves performance over fixed, small random boosts.

Prioritize tightest fit, dynamically adjust exploration, and scale randomness to item/bin characteristics.
Dynamic, scaled randomness—adjusting exploration to bin capacity—improves performance over fixed, average-based exploration.
Dynamic exploration rates & scaling randomness based on bin capacity significantly improve performance. Prioritize tighter fits!




Fixed exploration rates often outperform item-size dependent, dynamic ones; simplicity aids robustness.
Scale exploration by bin capacity; tune exploration strength (epsilon) dynamically—avoiding overly strong or weak randomness.




Prioritize tightest fit, scale randomness by bin capacity, and tune exploration rate (epsilon).
