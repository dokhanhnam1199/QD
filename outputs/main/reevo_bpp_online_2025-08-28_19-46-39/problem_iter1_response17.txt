```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # First fit all bins which have enough remaining capacity
    possible_bins = bins_remain_cap >= item
    if np.any(possible_bins):
        # Assign a priority based on the amount of remaining capacity (smaller is better).
        # Also add a slight random element to avoid always choosing the same bin.
        priorities[possible_bins] = (1.0 / (bins_remain_cap[possible_bins] - item + 1e-6)) + np.random.rand(np.sum(possible_bins)) * 1e-6
    return priorities
```
