```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using adaptive threshold between best-fit and worst-fit heuristics.
    
    For items >= 0.5: Best-fit (min residual) to avoid fragmentation.
    For items < 0.5: Worst-fit (max residual) to preserve larger spaces.
    Uses numpy's efficient masking for performance.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    
    if item >= 0.5:
        # Best-fit: Score = -residual for smallest residual space
        priority = np.where(can_fit, -residual, -np.inf)
    else:
        # Worst-fit: Score = residual for largest residual space
        priority = np.where(can_fit, residual, -np.inf)
    
    return priority
```
