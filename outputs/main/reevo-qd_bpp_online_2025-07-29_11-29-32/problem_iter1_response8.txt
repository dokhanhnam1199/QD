```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Worst Fit and Best Fit heuristics based on item size relative to estimated bin capacity."""
    if len(bins_remain_cap) == 0:
        return np.array([])
    
    # Estimate bin capacity as the maximum remaining capacity among current bins
    C = np.max(bins_remain_cap)
    relative_size = item / C if C > 0 else 0.0
    
    valid_mask = bins_remain_cap >= item
    
    if relative_size > 0.5:
        # Prioritize bins with largest remaining capacity for large items (Worst Fit)
        return np.where(valid_mask, bins_remain_cap, -np.inf)
    else:
        # Prioritize bins with smallest remaining capacity for small items (Best Fit)
        return np.where(valid_mask, -bins_remain_cap, -np.inf)
```
