```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using Best Fit heuristic: prioritize bins that leave the least remaining space after placing the item.
    
    Args:
        item: Size of the item to pack.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Priorities where higher values indicate better fit (least leftover space).
    """
    mask = bins_remain_cap >= item
    # Calculate priority as negative of leftover space (higher priority = smaller leftover)
    priorities = np.where(mask, item - bins_remain_cap, -np.inf)
    return priorities
```
