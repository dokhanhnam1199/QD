```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on minimizing leftover space with bias towards tighter fits.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate valid bins and their leftover space
    leftover = bins_remain_cap - item
    can_fit = leftover >= 0
    
    # Priority formula: 
    # - For valid bins: higher priority for smaller leftover (using -leftover)
    # - For invalid bins: very low priority (-inf)
    priority = np.where(can_fit, -leftover, -np.inf)
    
    return priority
```
