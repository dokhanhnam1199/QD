```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on item size thresholds.
    
    Large items (â‰¥0.5) use Best Fit (minimize slack), small items use Worst Fit (maximize space).
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    
    Returns:
        Array of same size as bins_remain_cap with priority scores.
    """
    can_fit = bins_remain_cap >= item
    if item >= 0.5:  # Best Fit for large items
        fit_capacity = bins_remain_cap - item
        priority = np.where(can_fit, -fit_capacity, -np.inf)
    else:  # Worst Fit for small items
        priority = np.where(can_fit, bins_remain_cap, -np.inf)
    return priority
```
