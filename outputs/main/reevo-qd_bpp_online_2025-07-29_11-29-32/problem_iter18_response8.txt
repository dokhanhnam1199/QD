```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Best Fit (for large items) and Worst Fit (for small items) heuristics.
    
    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    
    # Adaptive priority: 
    # - For large items (item > 0.5), prioritize tight fits (Best Fit) using -residual
    # - For small items (item < 0.5), prioritize spacious bins (Worst Fit) using residual
    # - The weight 1-2*item smoothly blends these two strategies based on item size
    weight = 1.0 - 2.0 * item
    priority = np.where(can_fit, residual * weight, -np.inf)
    return priority
```
