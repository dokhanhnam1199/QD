```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Best Fit for large items (>= 0.5) and Worst Fit for small items (< 0.5).
    
    This adaptive strategy minimizes slack for large items and preserves larger spaces for small items,
    improving packing efficiency through a clear threshold-based strategy transition.
    """
    can_fit = bins_remain_cap >= item
    # Use Best Fit (minimize remaining capacity) for large items, Worst Fit (maximize remaining capacity) for small
    priority = np.where(
        item >= 0.5,
        -bins_remain_cap,  # Negative for descending sort in Best Fit
        bins_remain_cap   # Positive for ascending sort in Worst Fit
    )
    # Mask bins that cannot accommodate the item
    return np.where(can_fit, priority, -np.inf)
```
