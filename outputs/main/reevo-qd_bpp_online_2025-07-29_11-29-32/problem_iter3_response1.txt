```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins combining Best Fit for large items and Worst Fit for small.
    
    Bins that can fit the item are scored by remaining capacity/item ratio. Large items (relative to
    average bin capacity) prioritize minimal slack (Best Fit), small items prioritize maximal slack
    (Worst Fit). Invalid bins receive -inf priority.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    if not np.any(can_fit):
        return np.full_like(bins_remain_cap, -np.inf)
    
    avg_remaining = np.mean(bins_remain_cap)
    is_large = item > avg_remaining
    
    ratio = bins_remain_cap / item
    priority = np.where(is_large, -ratio, ratio)
    
    return np.where(can_fit, priority, -np.inf)
```
