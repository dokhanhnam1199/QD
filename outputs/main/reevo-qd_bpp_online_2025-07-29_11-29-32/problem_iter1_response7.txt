```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on minimizing leftover space after placement.
    
    Bins that can fit the item are prioritized by how tightly they pack it (less leftover).
    Bins that cannot fit the item receive a very low priority.
    """
    can_fit = bins_remain_cap >= item
    leftover = bins_remain_cap - item
    # Use negative leftover as priority (smaller leftover = higher priority)
    # Add a small epsilon to avoid division by zero in cases of perfect fit (leftover=0)
    priority = np.where(can_fit, -leftover + 1e-9, -np.inf)
    return priority
```
