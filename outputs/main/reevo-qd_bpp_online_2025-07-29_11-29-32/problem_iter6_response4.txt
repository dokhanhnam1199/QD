```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority scores combining adaptive Best Fit and Worst Fit strategies with tie-breaking."""
    can_fit = bins_remain_cap >= item
    # Main term dynamically balances Best Fit (large items) and Worst Fit (small items)
    main_term = bins_remain_cap * (1.0 - 2.0 * item)
    # Tie-breaker term slightly penalizes larger remaining capacities to handle edge cases
    tie_breaker = -1e-6 * bins_remain_cap
    priority = np.where(
        can_fit,
        main_term + tie_breaker,
        -np.inf
    )
    return priority
```
