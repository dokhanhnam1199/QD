```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Improved priority combining Best Fit and Worst Fit strategies with adaptive threshold."""
    can_fit = bins_remain_cap >= item
    
    # Threshold to differentiate strategies: items â‰¥0.5 use Best Fit, others use Worst Fit
    LARGE_ITEM_THRESHOLD = 0.5
    
    # Best Fit priority: minimize remaining space after placement
    best_priority = -(bins_remain_cap - item)
    # Worst Fit priority: maximize remaining space
    worst_priority = bins_remain_cap
    
    # Hybrid strategy by continuous analysis of item size
    priority = np.where(item >= LARGE_ITEM_THRESHOLD, best_priority, worst_priority)
    
    return np.where(can_fit, priority, -np.inf)
```
