```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on minimal residual space to optimize bin utilization.
    
    Selects bins with the smallest remaining capacity that can accommodate the item.
    Priority scores are calculated as (item - remaining_capacity) for valid bins, which 
    favors tighter fits, with higher scores (closer to 0) indicating better choices.
    
    Args:
        item: Size of the item to pack.
        bins_remain_cap: Array of remaining capacities for each bin.
        
    Returns:
        Array of priority scores where feasible bins use -(remaining_capacity - item) 
        and infeasible bins are given -inf to exclude them from selection.
    """
    return np.where(bins_remain_cap >= item, item - bins_remain_cap, -np.inf)
```
