```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on the ratio of item size to bin's remaining capacity.
    
    Bins that can fit the item are prioritized by how large a fraction of their space the item occupies.
    This encourages placing items in bins where they fill a higher proportion of the remaining space,
    which aligns with minimizing leftover space and thus approximates the Best Fit heuristic.
    """
    can_fit = bins_remain_cap >= item
    # Add epsilon to denominator to prevent division by zero, ensuring numerical stability
    epsilon = 1e-9
    denominator = bins_remain_cap + epsilon
    ratio = item / denominator
    # Assign -inf to bins that can't fit the item, ensuring they are not selected
    return np.where(can_fit, ratio, -np.inf)
```
