```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on minimal leftover space.

    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.

    Returns:
        Array of priority scores for each bin. Higher values indicate better fit.
    """
    # Prioritize bins with remaining capacity >= item and minimal leftover space (rem_cap - item).
    # The priority is calculated as (item - rem_cap), which results in higher (least negative)
    # values for tighter fits. Invalid bins are assigned -inf to exclude them.
    return np.where(bins_remain_cap >= item, item - bins_remain_cap, -np.inf)
```
