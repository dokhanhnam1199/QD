```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority combining minimal leftover and tie-breaking by bin fullness."""
    leftover = bins_remain_cap - item
    valid = leftover >= 0
    
    # Use large factor to ensure leftover dominates priority
    LARGE_FACTOR = 1e6
    # Tie-breaker: prefer bins with less remaining capacity (more filled)
    priority = np.where(valid, (-leftover) * LARGE_FACTOR - bins_remain_cap, -np.inf)
    
    return priority
```
