```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on threshold-based Best Fit/Worst Fit heuristic.
    
    Bins that can fit the item use Best Fit (prioritize minimal residual) if item > 0.5,
    and Worst Fit (prioritize maximal residual) otherwise. Infeasible bins are masked with -inf.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    
    if item > 0.5:
        priority = -residual  # Best Fit: maximize tightness
    else:
        priority = residual  # Worst Fit: maximize slack
    
    return np.where(can_fit, priority, -np.inf)
```
