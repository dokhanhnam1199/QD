```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins by combining Best Fit for items >= 0.25 and Worst Fit for smaller items."""
    can_fit = bins_remain_cap >= item
    slack = bins_remain_cap - item
    
    if item >= 0.25:
        # Best Fit for medium/large items: minimize slack
        priority = -slack
    else:
        # Worst Fit for small items: maximize remaining capacity
        priority = bins_remain_cap
    
    return np.where(can_fit, priority, -np.inf)
```
