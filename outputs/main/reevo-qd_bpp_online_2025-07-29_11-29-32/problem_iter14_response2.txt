```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns bin priorities using Best Fit strategy for online bin packing.
    
    Higher priority scores indicate better bin choices. Priorities are computed as
    -residual for feasible bins (smallest residual receives highest score), with
    -infinity for infeasible bins.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of same size as bins_remain_cap with priority scores.
    """
    if bins_remain_cap.size == 0:
        return np.array([], dtype=np.float64)
    
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    
    # Best Fit: prioritize bins with smallest residual (tightest fit)
    fit_priority = -residual
    
    # Use -inf for infeasible bins to ensure they're never selected
    priority = np.where(can_fit, fit_priority, -np.inf)
    return priority
```
