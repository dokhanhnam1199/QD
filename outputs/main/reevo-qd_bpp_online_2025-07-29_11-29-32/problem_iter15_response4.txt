```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on size thresholded Best/Worst Fit heuristic.
    
    Large items (size â‰¥ 0.5) are placed using Best Fit (prioritizing bins with smallest
    remaining capacity after placement). Small items use Worst Fit to preserve flexibility.
    Infeasible bins receive -inf priority.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    THRESHOLD = 0.5
    
    if item >= THRESHOLD:
        # Best Fit: minimize remaining capacity after placement
        priority = np.where(can_fit, -(bins_remain_cap - item), -np.inf)
    else:
        # Worst Fit: maximize remaining capacity after placement
        priority = np.where(can_fit, bins_remain_cap - item, -np.inf)
    
    return priority
```
