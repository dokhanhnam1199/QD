```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    can_fit = bins_remain_cap >= item
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    if not np.any(can_fit):
        return priority

    residuals = bins_remain_cap[can_fit] - item
    # Blend Best Fit (large items) and Worst Fit (small items) with threshold of 0.5
    if item > 0.5:
        # Best Fit: prioritize smallest residual (negative for max selection)
        priority[can_fit] = -residuals
    else:
        # Worst Fit: prioritize largest residual (direct scoring)
        priority[can_fit] = residuals
        
    return priority
```
