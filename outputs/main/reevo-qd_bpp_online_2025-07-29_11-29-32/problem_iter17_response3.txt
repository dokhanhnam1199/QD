```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Threshold-split strategy prioritizes slack minimization for large items (>=0.5) and residual maximization for small items.

    Args:
        item: Size of item to be packed (0 < item <= 1)
        bins_remain_cap: Array of remaining capacities for each bin (0 <= values <= 1)
    
    Returns:
        Array of priority scores for each bin (-inf for invalid bins)
    """
    can_fit = bins_remain_cap >= item
    if item >= 0.5:
        prior = - (bins_remain_cap - item)  # Best Fit for large items
    else:
        prior = bins_remain_cap              # Worst Fit for small items
    return np.where(can_fit, prior, -np.inf)
```
