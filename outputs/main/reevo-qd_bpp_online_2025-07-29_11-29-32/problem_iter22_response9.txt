```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using threshold-based Best Fit for large and Worst Fit for small items.
    
    Uses threshold of 0.5 (inclusive) to switch between Best Fit (minimize slack) and Worst Fit (preserve flexibility).
    """
    can_fit = bins_remain_cap >= item
    if item >= 0.5:
        # Best Fit: prioritize bins with least slack (minimize rem_cap - item)
        priority = - (bins_remain_cap - item)
    else:
        # Worst Fit: prioritize bins with most remaining capacity
        priority = bins_remain_cap.copy()
    return np.where(can_fit, priority, -np.inf)
```
