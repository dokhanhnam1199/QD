```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Best Fit and Worst Fit heuristics based on item size."""
    slack = bins_remain_cap - item
    mask = slack >= 0
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    
    # Threshold for large items (assuming bin capacity is normalized to 1.0)
    LARGE_ITEM_THRESHOLD = 0.5
    
    if item > LARGE_ITEM_THRESHOLD:
        # Prioritize bins with largest remaining capacity (Worst Fit for large items)
        priority[mask] = bins_remain_cap[mask]
    else:
        # Prioritize bins with smallest slack (Best Fit for small items)
        priority[mask] = -slack[mask]
    
    return priority
```
