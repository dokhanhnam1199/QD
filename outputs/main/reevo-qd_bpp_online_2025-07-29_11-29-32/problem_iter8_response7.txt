```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores combining Best Fit for large items and Worst Fit for small items with clear thresholding.
    
    Uses a hard threshold at item size = 0.5 to explicitly apply Best Fit (prioritizes minimal slack) for large items
    and Worst Fit (prioritizes largest remaining capacity) for small items.
    """
    can_fit = bins_remain_cap >= item
    best_fit_prio = item - bins_remain_cap  # Prioritizes minimal slack (higher value = better fit)
    worst_fit_prio = bins_remain_cap  # Prioritizes largest remaining capacity
    threshold = 0.5
    priority = np.where(
        item >= threshold,
        best_fit_prio,
        worst_fit_prio
    )
    priority = np.where(can_fit, priority, -np.inf)  # Unfitting bins get -inf priority
    return priority
```
