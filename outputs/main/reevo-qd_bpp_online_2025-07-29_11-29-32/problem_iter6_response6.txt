```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores considering space efficiency and adaptability.

    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.

    Returns:
        Array of priority scores for each bin. Higher values indicate better fit.
    """
    can_fit = bins_remain_cap >= item
    leftover = bins_remain_cap - item
    large_enough = leftover >= item

    # High base priority for bins that can fit another item of the same size,
    # ensuring they are prioritized over others. Subtract leftover to favor minimal waste.
    high_base = 1e12
    return np.where(
        can_fit,
        np.where(
            large_enough,
            high_base - leftover,  # Prioritize bins with space for another item
            item - bins_remain_cap  # Fallback to Best Fit (v1)
        ),
        -np.inf
    )
```
