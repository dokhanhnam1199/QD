```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns blended priority scores for bins based on item size and residual capacity.
    
    Uses 0.5 threshold: prioritizes tight fits (Best Fit) for large items (>=0.5), 
    and space preservation (Worst Fit) for small items. Adapted from established 
    size-threshold strategies and empirical validation principles.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority scores using blended heuristic.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    threshold = 0.5
    
    return np.where(
        item >= threshold,
        np.where(can_fit, -residual, -np.inf),
        np.where(can_fit, residual, -np.inf)
    ).astype(np.float32)
```
