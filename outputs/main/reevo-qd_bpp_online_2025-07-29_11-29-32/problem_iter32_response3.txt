```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using dynamic target residual with squared-error penalty.
    
    For large items (size > 0.5), target residual after placement is 0.0 (Best Fit).
    For small items (size <= 0.5), target is 1.0 - item (Worst Fit).
    Priority is calculated as negative squared error from target.
    """
    can_fit = bins_remain_cap >= item
    residual_after = bins_remain_cap - item
    
    # Set target residual based on item size
    if item > 0.5:
        target = 0.0
    else:
        target = 1.0 - item
        
    # Calculate squared error penalty from target
    squared_error = (residual_after - target) ** 2
    priority = np.where(can_fit, -squared_error, -np.inf)
    
    return priority
```
