```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function blending Best Fit and Worst Fit heuristics based on item size threshold."""
    threshold = 0.5
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item

    # Enable small tie-breaker via epsilon for equal-scoring bins
    epsilon = 1e-6
    best_prio = -(residual) + epsilon * bins_remain_cap  # Best Fit (minimize residual)
    worst_prio = residual + epsilon * bins_remain_cap    # Worst Fit (maximize residual)

    # Select priority logic based on item size
    use_best = item > threshold
    if use_best:
        priority = best_prio
    else:
        priority = worst_prio

    return np.where(can_fit, priority, -np.inf)
```
