```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    
    # Adaptive scoring: Best Fit (tight fit) for item/residual context, Worst Fit (flexible) for small items
    large_mask = residual < item  # Item dominates residual â†’ prioritize tight packing
    scores = np.where(large_mask, -residual, residual)
    
    # Penalize invalid options and return
    return np.where(can_fit, scores, -np.inf)
```
