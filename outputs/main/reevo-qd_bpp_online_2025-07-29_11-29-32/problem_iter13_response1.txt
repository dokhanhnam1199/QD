```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    s = item
    rc = bins_remain_cap

    eps = 1e-9
    can_fit = rc >= s
    
    slack = rc - s
    
    weight_bf = s**2 + eps
    weight_wf = (1 - s)**2 + eps
    weight_total = weight_bf + weight_wf + eps
    weight_bf_norm = weight_bf / weight_total
    weight_wf_norm = weight_wf / weight_total
    
    score_bf = -slack
    score_wf = slack
    adaptive_score = weight_bf_norm * score_bf + weight_wf_norm * score_wf
    
    optimal_slack = s
    deviation = slack - optimal_slack
    quadratic_penalty = (deviation**2) * (s + eps)
    non_linear_component = -quadratic_penalty
    
    score = adaptive_score + non_linear_component
    
    final_score = np.where(can_fit, score, -np.inf)
    return final_score
```
