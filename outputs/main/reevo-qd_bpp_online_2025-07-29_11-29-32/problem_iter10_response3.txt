```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Improved priority scoring by amplifying the adaptive weight to enhance 
    best-fit/worst-fit discrimination for large/small items respectively.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    # Enhanced weight sensitivity via scaled blending factor
    weight = 2 * (1 - item)  # Magnified for larger item/item-indifference gradients
    priority = np.where(can_fit, residual * weight, -np.inf)
    return priority
```
