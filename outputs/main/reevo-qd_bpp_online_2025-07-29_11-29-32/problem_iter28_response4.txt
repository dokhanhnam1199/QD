```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on snug fit and a tie-breaker for bin fullness.

    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.

    Returns:
        Array of priority scores for each bin. Higher values indicate better fit.
    """
    valid_mask = bins_remain_cap >= item
    snug_score = item - bins_remain_cap  # Higher (less negative) means better snug fit
    # Tie-breaker: prefer bins with lower remaining capacity (more filled) via a small penalty
    tie_breaker = -1e-6 * bins_remain_cap  # Small coefficient to avoid overshadowing snug fit
    priority = np.where(valid_mask, snug_score + tie_breaker, -np.inf)
    return priority
```
