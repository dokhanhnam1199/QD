```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    # Adaptive weight based on normalized item size (assuming bin_capacity=1.0)
    alpha = item  # Alpha in [0,1] if bin_capacity is normalized to 1.0
    # Combine Best Fit (squaring slack) and Worst Fit heuristics adaptively
    best_fit = - (residual ** 2) * alpha
    worst_fit = residual * (1 - alpha)
    priority = best_fit + worst_fit
    return np.where(can_fit, priority, -np.inf)
```
