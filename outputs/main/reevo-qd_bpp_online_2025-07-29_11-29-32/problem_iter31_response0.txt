```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns blended priority scores using item-size threshold: Best Fit for large items (>= 0.7), Worst Fit for small items."""
    can_fit = bins_remain_cap >= item
    LARGE_ITEM_THRESHOLD = 0.7  # Empirically tuned to balance edge cases and synergy
    best_priority = -(bins_remain_cap - item)  # Best Fit: minimize remaining after placement
    worst_priority = bins_remain_cap         # Worst Fit: maximize remaining space
    priority = np.where(item >= LARGE_ITEM_THRESHOLD, best_priority, worst_priority)
    return np.where(can_fit, priority, -np.inf)
```
