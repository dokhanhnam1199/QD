```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using Best Fit for medium and large items and Worst Fit for small ones."""
    can_fit = bins_remain_cap >= item
    slack = bins_remain_cap - item

    if item >= 0.5:
        # Best Fit for large items (>= 0.5)
        priority = -slack
    elif item >= 0.25:
        # Best Fit Decreasing for medium-sized items (0.25 - 0.5)
        priority = -slack
    else:
        # Worst Fit for small items (< 0.25) to preserve large spaces for future items
        priority = bins_remain_cap
    
    return np.where(can_fit, priority, -np.inf)
```
