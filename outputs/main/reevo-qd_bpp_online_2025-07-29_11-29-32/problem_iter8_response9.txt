```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores combining Best Fit for large and Worst Fit for small items."""
    can_fit = bins_remain_cap >= item
    # Best Fit for item >= 0.5, prioritizing smallest spare capacity
    best_fit = -(bins_remain_cap - item)  # Higher score = smaller slack
    # Worst Fit for item < 0.5, prioritizing largest spare capacity
    worst_fit = bins_remain_cap  # Higher score = more space left

    priority = np.where(
        can_fit,
        np.where(item >= 0.5, best_fit, worst_fit),
        -np.inf  # Reject bins that can't fit
    )
    return priority
```
