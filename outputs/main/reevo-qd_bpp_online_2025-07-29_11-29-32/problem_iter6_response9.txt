```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using Best Fit for items >0.25, Worst Fit for smaller.
    
    Items >0.25 use Best Fit to minimize slack, while smaller items use Worst Fit
    to fill largest available bins first. This balances tight packing for medium
    items and space preservation for very small items.
    """
    can_fit = bins_remain_cap >= item
    slack = bins_remain_cap - item

    if item > 0.25:
        # Best Fit: prioritize bins with minimal slack (least remaining space)
        priority = -slack
    else:
        # Worst Fit: prioritize bins with maximum remaining capacity
        priority = bins_remain_cap

    return np.where(can_fit, priority, -np.inf)
```
