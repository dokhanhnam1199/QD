```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores blending best-fit (large items) and worst-fit (small items) via threshold-based switching.
    
    Uses item size threshold (0.5) to select between best-fit (prioritize minimal residual) and worst-fit (maximal residual).
    Penalizes infeasible bins (-âˆž).
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    if item >= 0.5:
        priority = -residual  # Best-fit: minimize residual
    else:
        priority = residual   # Worst-fit: maximize residual
    priority[~can_fit] = -np.inf
    return priority
```
