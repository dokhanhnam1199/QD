```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    if bins_remain_cap.size == 0:
        return np.array([], dtype=np.float64)
    
    C = bins_remain_cap.max()
    
    if item > C:
        return np.full_like(bins_remain_cap, -np.inf)
    
    can_fit = bins_remain_cap >= item
    normalized_size = item / C
    
    best_fit = -(bins_remain_cap - item)
    worst_fit = bins_remain_cap
    
    blended = normalized_size * best_fit + (1 - normalized_size) * worst_fit
    priority = np.where(can_fit, blended, -np.inf)
    
    return priority
```
