```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores blending Best Fit/Worst Fit using item thresholds.
    
    For items > 0.5, uses Best Fit (minimizes residual). For items â‰¤ 0.5,
    uses Worst Fit (maximizes residual). Invalid bins are masked with -inf.
    
    Args:
        item: Size of item to be packed.
        bins_remain_cap: Array of bin remaining capacities.
    
    Returns:
        Array of priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    threshold = 0.5
    
    if item > threshold:
        # Best Fit: prioritize smallest residual (most negative)
        bin_prio = -(bins_remain_cap - item)
    else:
        # Worst Fit: prioritize largest residual (positive)
        bin_prio = bins_remain_cap - item
    
    return np.where(can_fit, bin_prio, -np.inf)
```
