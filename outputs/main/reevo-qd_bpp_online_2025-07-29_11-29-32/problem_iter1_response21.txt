```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on minimizing leftover space in bins that can fit the item.
    
    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores for each bin. Higher scores indicate better fit.
    """
    leftover = bins_remain_cap - item
    valid_mask = leftover >= 0
    # Prioritize bins with smallest non-negative leftover (Best Fit)
    priority = np.where(valid_mask, -leftover, -np.inf)
    return priority
```
