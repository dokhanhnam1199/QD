```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins using adaptive Best/Worst Fit heuristics.
    
    Large items (>0.5) use Best Fit (minimize slack), small items use Worst Fit (preserve capacity).
    Infeasible bins receive -inf priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    is_large = item > 0.5
    best_fit = -(bins_remain_cap - item)  # Best Fit: prioritize smallest residual
    worst_fit = bins_remain_cap          # Worst Fit: prioritize largest available space
    priority = np.where(is_large, best_fit, worst_fit)
    return np.where(can_fit, priority, -np.inf)
```
