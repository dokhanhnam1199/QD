```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on item-to-bin remaining capacity ratio and fit feasibility.
    
    Bins that can fit the item are prioritized by how much of the bin's remaining space they fill,
    encouraging tight packing. Bins that cannot fit the item receive a priority of -inf.
    """
    # Mask bins that can fit the item and have non-zero remaining capacity to avoid division by zero
    valid_bins = (bins_remain_cap >= item) & (bins_remain_cap > 0)
    # Initialize priority array with -inf for all bins
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    # Calculate ratio of item size to bin's remaining capacity for valid bins
    priority[valid_bins] = item / bins_remain_cap[valid_bins]
    return priority
```
