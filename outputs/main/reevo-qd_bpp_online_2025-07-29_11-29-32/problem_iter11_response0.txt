```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins using a dynamic target residual approach.
    
    Priority is determined by how closely a bin's residual after placement matches
    a target residual of (1 - item_size), blending Best Fit (large items) and
    Worst Fit (small items) through a size-adjusted quadratic penalty. Feasible bins
    are scored to balance snug fits for large items and space preservation for
    small items.
    
    Args:
        item: Size of item to be packed (normalized to bin capacity, assumed to be 1.0).
        bins_remain_cap: Array of current remaining capacities for each bin.
        
    Returns:
        Array of scores with the same shape as bins_remain_cap.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    target_residual = 1.0 - item  # Blend target based on item size
    squared_error = (residual - target_residual) ** 2
    priority = np.where(can_fit, -squared_error, -np.inf)
    return priority
```
