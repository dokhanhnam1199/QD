```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using a Best Fit heuristic with slack minimization.
    
    Bins that can fit the item are prioritized by how closely they match the item size,
    preferring bins with the smallest remaining capacity after placement. Bins that
    cannot fit the item are assigned a priority of negative infinity.
    """
    slack = bins_remain_cap - item
    valid = slack >= 0
    # Prioritize bins with smallest slack (remaining capacity after placement)
    # by assigning higher priority to smaller slack values.
    priorities = np.where(
        valid,
        -slack,  # Equivalent to (item - bins_remain_cap), higher is better
        -np.inf
    )
    return priorities
```
