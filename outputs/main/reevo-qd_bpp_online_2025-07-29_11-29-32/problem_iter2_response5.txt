```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function using hybrid Best Fit (large items >=0.5) and Worst Fit (small items) with strict 0.5 threshold."""
    valid_mask = bins_remain_cap >= item
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    
    if not np.any(valid_mask):
        return priority
    
    if item >= 0.5:
        # Best Fit: minimize remaining capacity (tightest fit)
        priority[valid_mask] = -bins_remain_cap[valid_mask]
    else:
        # Worst Fit: maximize remaining capacity (spread out small items)
        priority[valid_mask] = bins_remain_cap[valid_mask]
    
    return priority
```
