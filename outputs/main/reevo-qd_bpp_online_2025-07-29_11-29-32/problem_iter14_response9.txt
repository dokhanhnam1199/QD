```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Improved priority blending Best Fit (for large items) with Worst Fit (for small items) using 0.5 threshold.
    
    Dispatches items > 0.5 to Best Fit (minimize residual space) for space efficiency, and items <= 0.5 
    to Worst Fit (maximize residual space) for flexibility. Ensures tightly packed large items and 
    preserves space for potential future large items in small-removal bins.
    
    Args:
        item: Size of item to be added.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item
    
    # Best Fit for items > 0.5 (-residual), Worst Fit for items <= 0.5 (residual)
    priority = np.where(can_fit, np.where(item > 0.5, -residual, residual), -np.inf)
    return priority
```
