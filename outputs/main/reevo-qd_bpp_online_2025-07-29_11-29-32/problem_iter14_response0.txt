```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Dynamic priority combining Best Fit (slack minimization) and Worst Fit (space preservation) using a sigmoid transition."""
    can_fit = bins_remain_cap >= item
    # Sigmoid weight based on item size for smooth transition between strategies
    k = 10.0  # Steepness of transition
    weight = 1.0 / (1.0 + np.exp(-k * (item - 0.5)))
    # Combine Best Fit (negative slack) and Worst Fit (remaining capacity) with item-dependent weight
    fit_priority = bins_remain_cap * (1.0 - 2.0 * weight) + item * weight
    return np.where(can_fit, fit_priority, -np.inf)
```
