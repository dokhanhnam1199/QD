```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Dynamic priority function blending best-fit/worst-fit heuristics using smooth transition and threshold adjustment.
    Uses sigmoid-shaped tanh weighting for gradual heuristic blending, epsilon-biased threshold handling to avoid zero-weight cases.
    """
    can_fit = bins_remain_cap >= item
    residual = bins_remain_cap - item

    # Heuristic blending parameters
    cutoff = 0.5
    steepness = 10.0  # Sigmoid steepness control
    
    # Smooth weight calculation with steep sigmoid transition
    weight = -np.tanh(steepness * (item - cutoff))

    # Epsilon-based threshold adjustment for edge-case robustness
    if item >= cutoff:
        weight -= 1e-6  # Bias toward best-fit at threshold
    else:
        weight += 1e-6  # Bias toward worst-fit at sub-threshold

    # Apply weight to residuals for final priority scoring
    priority = np.where(can_fit, residual * weight, -np.inf)
    return priority
```
