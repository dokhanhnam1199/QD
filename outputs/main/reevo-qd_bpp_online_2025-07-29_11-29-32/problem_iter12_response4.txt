```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority using item-dependent strategy: Best Fit for large items, Worst Fit for small."""
    can_fit = bins_remain_cap >= item
    # Use Best Fit (smallest remaining capacity) for large items (>= 0.5)
    # and Worst Fit (largest remaining capacity) for small items (< 0.5)
    if item >= 0.5:
        priority = np.where(can_fit, -bins_remain_cap, -np.inf)  # Inverse to prioritize smaller capacities
    else:
        priority = np.where(can_fit, bins_remain_cap, -np.inf)    # Prioritize larger capacities
    return priority
```
