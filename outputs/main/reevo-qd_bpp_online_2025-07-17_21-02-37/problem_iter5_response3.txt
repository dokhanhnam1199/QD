```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    bin_capacity = np.max(bins_remain_cap)

    # Identify bins that can fit the item
    can_fit = bins_remain_cap >= item

    if np.any(can_fit):
        # Base priority for bins that can fit
        priorities[can_fit] = 1.0

        # Calculate remaining capacity after placing the item
        remaining_after_placement = bins_remain_cap[can_fit] - item

        # Prioritize tighter fits, strong reward for near-full bins
        near_full = (remaining_after_placement >= 0) & (remaining_after_placement <= 0.1 * bin_capacity)
        priorities[can_fit][near_full] += 5.0

        # Reward bins that get closer to full, relative to item size
        priority_increase = (item / bin_capacity) * (1 / (remaining_after_placement + 0.01 * bin_capacity))
        priorities[can_fit] += priority_increase

        # Discourage using empty bins, adaptive penalty
        empty_bin_indices = np.where(bins_remain_cap == bin_capacity)[0]
        empty_and_fits = np.intersect1d(np.where(can_fit)[0], empty_bin_indices)

        if item <= 0.3 * bin_capacity:
            priorities[empty_and_fits] -= 2.0 * (1 - (item / bin_capacity))  # Stronger penalty for smaller items
        elif item > 0.7 * bin_capacity:
             priorities[empty_and_fits] += 1.0 # large item bonus
        else:
            priorities[empty_and_fits] -= 0.5 # milder penalty

        # Very small randomness only for tie-breaking
        priorities[can_fit] += np.random.rand(np.sum(can_fit)) * 0.001
    else:
        # No bin can fit the item.
        priorities[:] = -10.0

    # Penalize emptier bins, but less harshly now that we penalize using new empty bins
    priorities -= 0.0005 * bins_remain_cap
    return priorities
```
