```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Large penalty for bins that cannot fit the item.
    cannot_fit = bins_remain_cap < item
    priorities[cannot_fit] = -np.inf
    
    # Prioritize bins based on remaining capacity after placing the item.
    # Smaller remaining capacity gets higher priority. Add a small constant
    # to avoid division by zero and ensure positive values.
    
    can_fit = bins_remain_cap >= item
    remaining_capacity = bins_remain_cap[can_fit] - item
    priorities[can_fit] = -remaining_capacity # Minimize the remaining capacity

    return priorities
```
