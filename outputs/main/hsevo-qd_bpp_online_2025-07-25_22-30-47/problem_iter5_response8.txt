```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritize bins by balancing the remaining capacity and leftover space efficiency with adaptive penalties."""
    ifbinsfit = bins_remain_cap >= item
    leftover_space = bins_remain_cap - item
    # Sigmoid penalty for leftover space
    sigmoid_penalty = 1.0 / (leftover_space + 1e-6)
    # Adjusted priority combining fit and penalty
    priority = np.where(ifbinsfit, sigmoid_penalty * (bins_remain_cap / np.max(bins_remain_cap, initial=1.0)), -np.inf)
    return priority
```
