```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines adaptive sigmoid penalties and balance factor to dynamically prioritize bins.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    penalty = 1 / (1 + np.exp(space_left / np.max(bins_remain_cap)))  # Adaptive sigmoid penalty
    mean_cap = np.mean(bins_remain_cap)
    balance_factor = np.abs(mean_cap - bins_remain_cap) / np.max(np.abs(mean_cap - bins_remain_cap) + 1e-6)
    priority = can_fit * penalty - balance_factor - (bins_remain_cap < item) * np.max(bins_remain_cap)
    return priority
```
