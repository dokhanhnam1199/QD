```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines remaining capacity and balanced waste reduction to prioritize bins.
    
    Prioritizes bins that fit the item well while penalizing excessive leftover space."""

    # Calculate waste reduction if item is added to each bin
    waste_reduction = bins_remain_cap - item
    
    # Items that cannot fit in the bin get a very low priority
    priority_score = np.where(waste_reduction >= 0, waste_reduction, -1000)
    
    # Balance by reducing priority for bins with significantly more remaining capacity
    balance_factor = 1.0 / (bins_remain_cap + 1e-6)
    balanced_priority = priority_score * balance_factor
    
    return balanced_priority
```
