```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Balances fit suitability and leftover space using adaptive sigmoid penalties.
    
    Args:
        item: Size of item to be added.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    fit_priority = can_fit * (1 - (space_left / bins_remain_cap))
    close_fit_priority = np.clip(bins_remain_cap - item, 0, 1)
    sigmoid_penalty = 1.0 / (bins_remain_cap + 1e-6) * np.sin(np.pi / 2 * (bins_remain_cap / (np.max(bins_remain_cap) + 1e-6)))
    priority = 0.6 * fit_priority + 0.2 * close_fit_priority + 0.2 * sigmoid_penalty
    return priority
```
