```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines fit suitability and adaptive balancing to prioritize bins for online BPP.
    
    Args:
        item: Size of item to be added.
        bins_remain_cap: Array of remaining capacities for each bin.

    Returns:
        Array of priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    # Adaptive fit priority with sigmoid penalty for leftover space
    fit_priority = can_fit * (1 - (space_left / bins_remain_cap))
    # Balance priority to avoid extreme tightness or emptiness
    avg_remain_cap = np.mean(bins_remain_cap_safe)
    balance_priority = 1 - np.abs(bins_remain_cap - avg_remain_cap) / avg_remain_cap
    # Combine priorities with adaptive weights
    priority = 0.6 * fit_priority + 0.4 * balance_priority
    return priority
```
