```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority score for each bin based on remaining capacity and avoiding new bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of priority scores for each bin.
    """
    penalty_for_new_bin = np.max(bins_remain_cap) / 2.0
    priority_scores = bins_remain_cap - item - (bins_remain_cap < item) * penalty_for_new_bin
    priority_scores = np.where(priority_scores < 0, -np.inf, priority_scores)
    return priority_scores
```
