```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Balances fit suitability and minimizes leftover space with adaptive bin prioritization.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    # Encourage bins that can fit the item with penalty for leftover space
    fit_priority = can_fit * (1 - (space_left / bins_remain_cap))
    # Prioritize bins with remaining capacity close to the item size but not less
    close_fit_priority = np.clip(bins_remain_cap - item, 0, 1)
    # Combine priorities with adaptive weights
    priority = 0.7 * fit_priority + 0.3 * close_fit_priority
    return priority
```
