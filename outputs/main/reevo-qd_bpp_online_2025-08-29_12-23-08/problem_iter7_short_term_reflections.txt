Focus on *relative* fitness—space *left after* packing—and avoid needlessly penalizing valid bins.
Prioritize tighter fits; avoid unnecessary exploration & focus on feasibility first.
Prioritize best-fit, then explore randomly—balancing exploitation & discovering potentially better solutions.
Simplicity & direct fit often outperform complex scoring; prioritize usable bins directly. Avoid unnecessary scaling.




Focus on item fit & smooth scoring; avoid direct waste/fullness combinations. Sigmoids help!
Prioritize minimizing wasted space; simpler, direct differences often outperform complex, tuned functions like sigmoids.




Combine exploitation (best fit) with controlled exploration—item-specific rates help, randomness adds diversity.
Combine fit, utilization, and penalize nearly-full bins; tune weights for optimal performance.
Prioritize exact fits & minimal waste. Small additions (like `1e-9`) prevent issues & refine scores.
Prioritize bin utilization *and* fit, penalizing nearly full bins—balance is key!




