```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Exact fit gets highest priority
    exact_fit_indices = np.where(bins_remain_cap == item)[0]
    priorities = np.zeros_like(bins_remain_cap)
    priorities[exact_fit_indices] = 1.0

    # Best fit gets next priority
    remaining_indices = np.where(bins_remain_cap > item)[0]
    if len(remaining_indices) > 0:
        fit_scores = bins_remain_cap[remaining_indices] - item
        best_fit_index = remaining_indices[np.argmin(fit_scores)]
        priorities[best_fit_index] = 0.9

    # Remaining bins get a priority based on remaining capacity
    remaining_capacities = bins_remain_cap[np.where(priorities == 0)]
    if len(remaining_capacities) > 0:
        priorities[np.where(priorities == 0)] = remaining_capacities / np.max(bins_remain_cap)

    return priorities
```
