Prioritize simplicity & full-bin avoidance. Sigmoids can help, but aren't always necessary.




Focus on simplicity & key features: exact fit, fullness (tightness), and avoid unnecessary complexity.
Prioritize exact/best fits, penalize full bins, and avoid simple exploration—focus on informed exploitation.




Prioritize fractional fits & smooth scoring; avoid hard thresholds for better, adaptable bin utilization.
Prioritize exploiting good fits, penalize failures, and explore with occasional randomness—balance exploration/exploitation.




Prioritize bins based on *how well* items fit, not just feasibility—smooth transitions help!
Prioritize large rewards & penalize waste/fragmentation. Avoid direct capacity scaling; use relative fullness instead.




Prioritize fit *and* avoid near-full bins; tune scaling for sensitivity. Simplicity often wins.




Combine exploitation (best fit) with exploration (randomness) & consider item-bin size ratios carefully.
Prioritize exact/best fits, minimize waste, and *penalize* nearly full bins—balance exploration & exploitation.
