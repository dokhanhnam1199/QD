```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Exact fit gets highest priority
    exact_fit_mask = (bins_remain_cap == item)
    priorities = np.where(exact_fit_mask, 1000.0, 0.0)

    # Full bins get second highest priority
    full_bin_mask = (bins_remain_cap == 0.0)
    priorities = np.where(full_bin_mask, 999.0, priorities)

    # Prioritize tightest fit (smallest remaining space)
    remaining_space_priority = bins_remain_cap - item
    remaining_space_priority = np.where(remaining_space_priority < 0, -1000.0, remaining_space_priority)
    priorities = priorities + remaining_space_priority

    return priorities
```
