```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities  # No bin can fit the item

    # Assign a random priority score to the valid bins. In Random Fit, the bins
    # are typically chosen randomly from the feasible bins. Here, we represent
    # this by assigning uniformly random scores.
    num_valid_bins = np.sum(valid_bins)
    random_priorities = np.random.rand(num_valid_bins)
    bin_index = 0
    for i in range(len(bins_remain_cap)):
        if valid_bins[i]:
            priorities[i] = random_priorities[bin_index]
            bin_index += 1
    return priorities
```
