```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin
    fit_scores = item / bins_remain_cap

    # Exact fit bonus
    exact_fit = np.where(np.isclose(fit_scores, 1.0), 1.0, 0.0)

    # Waste score (1 - fit_score) - penalize waste
    waste_scores = 1 - fit_scores

    # Bin fullness scaling using sigmoid
    priorities = 1 / (1 + np.exp(-5 * (fit_scores - 0.5)))

    # Combine scores - prioritize exact fits, minimal waste, and fullness
    priorities = priorities + 0.5 * exact_fit - 0.2 * waste_scores

    # Avoid zero-capacity bins
    priorities[bins_remain_cap == 0] = -np.inf

    return priorities
```
