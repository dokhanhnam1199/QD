```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Exact fit gets highest priority
    exact_fit = (bins_remain_cap == item)
    priorities = np.where(exact_fit, 1.0, 0.0)

    # Best fit gets second highest priority
    remaining_capacity = bins_remain_cap[bins_remain_cap > item]
    if remaining_capacity.size > 0:
      best_fit_index = np.argmin(bins_remain_cap - item)
      priorities[best_fit_index] = 0.9

    # Remaining bins get priority based on remaining capacity.
    priorities[bins_remain_cap > item] = 0.8
    
    return priorities
```
