```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Best Fit Decreasing: Prioritize bins where the item fits and leaves the least remaining space.
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        remaining_space = bins_remain_cap[valid_bins] - item
        # Prioritize bins with smaller remaining space (tighter fit).
        priorities[valid_bins] = 1.0 / (remaining_space + 1e-6)
        # Further prioritize bins that are already relatively full.
        priorities[valid_bins] *= (bins_remain_cap[valid_bins] / (bins_remain_cap[valid_bins] + 1e-6))
    return priorities
```
