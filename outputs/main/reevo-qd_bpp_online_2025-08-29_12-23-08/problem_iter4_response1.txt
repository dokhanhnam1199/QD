```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.1) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
        epsilon: Probability of exploration.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Calculate the fit ratio (exploitation)
    valid_bins = bins_remain_cap > 0
    bins_remain_cap_valid = bins_remain_cap[valid_bins]
    fit_ratios = item / bins_remain_cap_valid
    fit_scores = 1 / (1 + np.exp(10 * (fit_ratios - 0.5)))  # Sigmoid fit

    priorities[valid_bins] = fit_scores

    # Exploration: Add a small random value to each bin with probability epsilon
    if np.random.rand() < epsilon:
        priorities += np.random.rand(n_bins) * 0.1  # Add a small random bonus

    return priorities
```
