```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Calculate the fit score for each bin
    fit_scores = np.where(bins_remain_cap >= item, item / bins_remain_cap, 0)

    # Apply a sigmoid function to the fit scores to get priority
    # This ensures that bins with a better fit (closer to 1) get higher priority.
    priorities = 1 / (1 + np.exp(-5 * (fit_scores - 0.5)))

    return priorities
```
