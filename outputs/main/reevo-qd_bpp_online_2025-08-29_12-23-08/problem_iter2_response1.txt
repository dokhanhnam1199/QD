```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Prioritize bins where the item fits exactly
    exact_fit = (bins_remain_cap == item)
    priorities[exact_fit] = 2.0  # Highest priority

    # Then, prioritize bins where the item fits with minimal remaining capacity
    remaining_capacity = bins_remain_cap - item
    valid_bins = remaining_capacity >= 0
    if np.any(valid_bins):
        priorities[valid_bins] = 1.0 / (remaining_capacity[valid_bins] + 1e-9)  # Higher priority for smaller remaining capacity

    # Give a small priority to bins where the item does not fit, but the capacity is sufficient
    insufficient_capacity = (bins_remain_cap < item)
    priorities[insufficient_capacity] = 0.0 #lowest priority, will not be picked
    
    return priorities
```
