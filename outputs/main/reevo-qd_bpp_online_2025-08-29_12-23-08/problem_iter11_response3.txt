```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Prioritize exact fits
    exact_fit = (bins_remain_cap == item)
    priorities = exact_fit * 1000  # High priority for exact fits

    # Prioritize full bins (items that fill a bin completely)
    almost_full = bins_remain_cap <= item + 0.001
    priorities[almost_full] = priorities[almost_full] + 999

    # Prioritize bins with smallest remaining capacity
    remaining_capacities = bins_remain_cap[~exact_fit & ~almost_full]
    if len(remaining_capacities) > 0:
        ranks = np.argsort(remaining_capacities)
        priorities[~exact_fit & ~almost_full] = ranks

    return priorities
```
