```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)

    # Exact fit gets highest priority
    exact_fit_indices = np.where(np.isclose(bins_remain_cap, item))[0]
    priorities[exact_fit_indices] = 1.0

    # Prioritize bins with smallest remaining capacity (tightest fit)
    valid_bins = bins_remain_cap >= item
    remaining_capacities = bins_remain_cap[valid_bins]
    if len(remaining_capacities) > 0:
        sorted_indices = np.argsort(remaining_capacities)
        bin_indices = np.where(valid_bins)[0][sorted_indices]
        priorities[bin_indices] = 0.5

    return priorities
```
