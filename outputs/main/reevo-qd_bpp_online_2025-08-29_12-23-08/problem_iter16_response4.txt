```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a smooth, normalized score.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fractional fill for each bin
    fill_fraction = item / bins_remain_cap

    # Prioritize bins where the item fits well (fill fraction is between 0 and 1)
    # Use a sigmoid function to provide a smooth, normalized priority score.
    # The sigmoid is centered around 0.5 (ideal fill) and scaled to provide
    # a reasonable range of priority values.
    priorities = 1 / (1 + np.exp(-10 * (fill_fraction - 0.5)))

    return priorities
```
