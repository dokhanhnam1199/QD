```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on close fit and target fill."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item
    bin_capacity = 1.0

    # Perfect fit early exit
    perfect_fit = np.isclose(bins_remain_cap, item)
    if np.any(perfect_fit):
        priorities[perfect_fit] = 10.0
        return priorities

    if not np.any(feasible_bins):
        if len(priorities) > 0:
            priorities[:] = -1e9
            priorities[np.argmin(bins_remain_cap)] = 0
        return priorities

    # Close fit priority
    close_fit = np.abs(bins_remain_cap - item)
    close_fit_priority = np.exp(-7.0 * close_fit)
    priorities += close_fit_priority * feasible_bins

    # Target fill priority
    remaining_after_fit = bins_remain_cap - item
    fill_level = 1.0 - (remaining_after_fit / bin_capacity)
    target_fill = 0.9
    target_bonus = np.exp(-5.0 * np.abs(fill_level - target_fill))
    priorities += 0.7 * target_bonus * feasible_bins
    
    return priorities
```
