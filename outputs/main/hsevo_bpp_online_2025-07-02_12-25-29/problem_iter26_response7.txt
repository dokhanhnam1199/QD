```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on wasted space and target fill."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    bin_capacity = 1.0
    item_fits = bins_remain_cap >= item

    # Waste minimization priority
    remaining_after_fit = bins_remain_cap - item
    waste_penalty = np.exp(-5 * remaining_after_fit) * item_fits
    priorities = waste_penalty

    # Target fill bonus
    fill_level = (bin_capacity - remaining_after_fit) / bin_capacity
    target_fill = 0.8
    target_bonus = np.exp(-10.0 * np.abs(fill_level - target_fill)) * item_fits
    priorities += 0.7 * target_bonus

    # No-fit handling: put in smallest bin
    if not np.any(item_fits):
        priorities[:] = -1e9
        if len(priorities) > 0:
            priorities[np.argmin(bins_remain_cap)] = 0

    return priorities
```
