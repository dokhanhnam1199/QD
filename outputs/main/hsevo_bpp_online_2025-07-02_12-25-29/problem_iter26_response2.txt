```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on close fit, and target utilization."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    bin_capacity = 1.0
    target_utilization = 0.9

    item_fits = bins_remain_cap >= item
    remaining_after_fit = bins_remain_cap - item

    # Perfect fit gives immediate high priority
    perfect_fit = np.isclose(bins_remain_cap, item)
    if np.any(perfect_fit):
        priorities[perfect_fit] = 10.0
        return priorities
    
    # Close fit bonus
    close_fit = np.abs(remaining_after_fit)
    close_fit_priority = np.exp(-5 * close_fit) * item_fits
    priorities += close_fit_priority
    
    # Target utilization bonus
    utilization = (bin_capacity - remaining_after_fit) / bin_capacity
    utilization_diff = np.abs(utilization - target_utilization)
    utilization_bonus = np.exp(-5 * utilization_diff) * item_fits
    priorities += utilization_bonus
    
    # If no bin can fit item, return a array of -infinity
    if not np.any(item_fits):
        priorities = np.full_like(priorities, -np.inf)

    return priorities
```
