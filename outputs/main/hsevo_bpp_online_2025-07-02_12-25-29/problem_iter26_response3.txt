```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on close fit and target fill level."""
    bin_capacity = 1.0
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    item_fits = bins_remain_cap >= item

    if not np.any(item_fits):
        return -np.ones_like(bins_remain_cap) * 1e9
    
    remaining_after_fit = bins_remain_cap - item
    fill_level = (bin_capacity - remaining_after_fit) / bin_capacity
    target_fill = 0.9

    close_fit = np.abs(remaining_after_fit)
    close_fit_priority = np.exp(-5 * close_fit) * item_fits

    fill_diff = np.abs(fill_level - target_fill)
    fill_priority = np.exp(-10 * fill_diff) * item_fits

    # Normalize priorities
    close_fit_priority = close_fit_priority / np.max(close_fit_priority, initial=1e-9)
    fill_priority = fill_priority / np.max(fill_priority, initial=1e-9)
    
    priorities = 0.6 * close_fit_priority + 0.4 * fill_priority
    
    priorities[~item_fits] = -1e9

    perfect_fit_bins = np.abs(remaining_after_fit) < 1e-6
    if np.any(perfect_fit_bins):
        priorities[:] = -1e9
        priorities[perfect_fit_bins] = 1e9
    

    return priorities
```
