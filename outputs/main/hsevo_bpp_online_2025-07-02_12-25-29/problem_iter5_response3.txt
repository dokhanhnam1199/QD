```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit and resulting fullness, add small exploration."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item
    priorities[~feasible_bins] = -np.inf

    close_fit = np.abs(bins_remain_cap - item)
    priorities[feasible_bins] = np.exp(-close_fit[feasible_bins])

    remaining_after_fit = bins_remain_cap[feasible_bins] - item
    nearly_full = np.exp(-np.abs(remaining_after_fit))
    priorities[feasible_bins] += nearly_full

    # Add small exploration
    priorities += np.random.normal(0, 0.001, size=bins_remain_cap.shape)

    return priorities
```
