```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines close fit, target fill, and a desperate placement strategy."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        # Desperate strategy: put in smallest bin if nothing fits
        priorities[np.argmin(bins_remain_cap)] = 1.0
        return priorities

    # Close Fit Priority
    wasted_space = bins_remain_cap - item
    close_fit_reward = np.exp(-np.abs(wasted_space)*2)
    priorities[feasible_bins] += close_fit_reward[feasible_bins]

    # Filling threshold bonus
    filling_threshold = 0.75
    bin_capacity = 1.0
    remaining_after_fit = bins_remain_cap - item
    fill_level = (bin_capacity - remaining_after_fit) / bin_capacity
    threshold_bonus = np.where(feasible_bins & (fill_level >= filling_threshold), 1.0, 0.0)
    priorities += threshold_bonus
    
    return priorities
```
