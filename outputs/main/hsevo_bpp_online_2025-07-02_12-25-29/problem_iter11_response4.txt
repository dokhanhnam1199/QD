```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on close fit and target fill, with early exit."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return priorities

    # Close fit priority (higher is better)
    close_fit = np.abs(bins_remain_cap - item)
    close_fit_priority = np.exp(-7.0 * close_fit)  # Tuned exponent

    priorities += close_fit_priority * feasible_bins

    # Target fill bonus
    remaining_after_fit = bins_remain_cap - item
    fill_level = 1.0 - (remaining_after_fit / 1.56) # Assuming bin capacity 1.56
    target_fill = 0.8
    target_bonus = np.exp(-10.0 * np.abs(fill_level - target_fill)) # Tuned exponent

    priorities += 0.5 * target_bonus * feasible_bins #Tunned weight

    return priorities
```
