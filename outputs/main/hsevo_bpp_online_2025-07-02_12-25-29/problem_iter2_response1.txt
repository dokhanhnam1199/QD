```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on space utilization and remaining capacity."""

    feasible_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    priorities[~feasible_bins] = -np.inf

    if np.any(feasible_bins):
        utilization = item / bins_remain_cap[feasible_bins]
        remaining_capacity = bins_remain_cap[feasible_bins] - item
        normalized_remaining = remaining_capacity / np.max(bins_remain_cap)

        priorities[feasible_bins] = np.sqrt(utilization) * (1 + normalized_remaining)
    return priorities
```
