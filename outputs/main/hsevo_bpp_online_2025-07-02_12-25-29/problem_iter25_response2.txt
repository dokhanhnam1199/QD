import numpy as np

def priority_v2(item: float, 
                bins_remain_cap: np.ndarray,
                bin_capacity: float = 0.9303617769645421,
                close_fit_decay: float = 2.4951514953416423,
                filling_threshold: float = 0.6185142823570081,
                threshold_bonus_value: float = 0.9615379456293438,
                fit_priority_bonus: float = 0.13452848461998634) -> np.ndarray:
    """Prioritizes bins based on close fit and target fill level."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    item_fits = bins_remain_cap >= item
    
    remaining_after_fit = bins_remain_cap - item
    fill_level = (bin_capacity - remaining_after_fit) / bin_capacity
    
    close_fit = np.abs(remaining_after_fit)
    close_fit_priority = np.exp(-close_fit_decay * close_fit) * item_fits

    threshold_bonus = np.where(item_fits & (fill_level >= filling_threshold), threshold_bonus_value, 0.0)
    
    priorities = close_fit_priority + threshold_bonus

    priorities[bins_remain_cap < item] = 0.0
    
    priorities[item_fits] += fit_priority_bonus
    
    return priorities
