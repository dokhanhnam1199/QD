```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering fit, fullness, and bin utilization."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    close_fit = np.abs(bins_remain_cap - item)
    priorities = np.exp(-close_fit)
    priorities[~possible_bins] = 0

    remaining_after_fit = bins_remain_cap - item
    nearly_full = np.exp(-np.abs(remaining_after_fit))
    priorities += nearly_full

    bin_utilization = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    priorities += 0.5 * bin_utilization

    return priorities
```
