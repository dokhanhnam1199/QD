```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Return priority score for each bin.
    Combines close fit via exponential decay with a fullness reward.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities # all zeros. This should trigger adding new bin in the higher level function

    # Close fit priority
    close_fit = np.abs(bins_remain_cap - item)
    priorities = np.exp(-close_fit)
    priorities[~possible_bins] = 0

    # Fullness reward, avoid nearly empty bins
    remaining_after_fit = bins_remain_cap - item
    nearly_full = np.exp(-np.abs(remaining_after_fit))
    priorities += nearly_full

    priorities[~possible_bins] = -1000

    return priorities
```
