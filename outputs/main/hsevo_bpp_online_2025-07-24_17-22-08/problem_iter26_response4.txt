```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin based on remaining capacity and item size.
    Combines non-linear prioritization with a refined penalty term for better bin selection.
    """
    # Non-linear prioritization for bins with sufficient capacity
    priority = np.where(bins_remain_cap >= item, 1 / (1 + np.abs(bins_remain_cap - item)), -np.inf)
    
    # Refined penalty term to balance tight fitting and future capacity
    penalty_term = np.where(bins_remain_cap >= item, -((bins_remain_cap - item) / bins_remain_cap) + (item / bins_remain_cap), 0)
    priority *= penalty_term
    
    return priority
```
