{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Combines simple non-linear prioritization with a refined balancing term.\n    Uses exp function and a penalty for large remaining capacity.\n    \"\"\"\n    # Non-linear prioritization for valid bins\n    priority = np.where(bins_remain_cap >= item, np.exp(-(bins_remain_cap - item)), -np.inf)\n    \n    # Refined balancing term\n    valid_bins = priority != -np.inf\n    if np.any(valid_bins):\n        # Normalize priority scores\n        max_priority = np.max(priority[valid_bins])\n        priority[valid_bins] /= max_priority\n        \n        # Apply penalty for large remaining capacity\n        remaining_cap_after_addition = bins_remain_cap[valid_bins] - item\n        priority[valid_bins] *= 1 / (1 + remaining_cap_after_addition)\n        \n    return priority\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}