```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Enhances the priority function by introducing a more nuanced non-linear prioritization 
    that effectively balances tight fitting and future capacity, while maintaining simplicity.
    """
    # Identify valid bins
    valid_bins = (bins_remain_cap >= item).astype(float)
    
    # Calculate a more nuanced priority score that balances tight fit and future capacity
    remain_cap_after_add = bins_remain_cap - item
    priority = np.where(valid_bins == 1, 
                         np.exp(-remain_cap_after_add / (item + 1e-6)) + 0.1 * np.exp(-remain_cap_after_add / bins_remain_cap),  
                         -np.inf)
    
    # Simplify the normalization process by directly returning the priority scores
    # Since the scores are already comparable and the highest score will be selected, 
    # further normalization is not necessary unless dealing with very large numbers.
    return priority
```
