```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    The priority is based on how well the item fits into the bin. 
    If the item fits perfectly into the bin, the priority is highest. 
    If the item is too large for the bin, the priority is lowest.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # For each bin, check if the item can fit into it
    can_fit = bins_remain_cap >= item
    
    # Calculate the remaining capacity after adding the item
    remaining_cap_after_add = bins_remain_cap - item
    
    # The priority is inversely proportional to the remaining capacity after adding the item
    # and is 0 if the item cannot fit into the bin
    priority = np.where(can_fit, 1 / (1 + remaining_cap_after_add), -1)
    
    return priority
```
