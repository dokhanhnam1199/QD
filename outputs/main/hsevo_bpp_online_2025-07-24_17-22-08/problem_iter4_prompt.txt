{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Returns priority score for each bin based on remaining capacity after adding the item.\n    Bins with remaining capacity just enough for the item get higher priority.\n    \"\"\"\n    # Identify bins that are too small and give them a very low priority\n    priority = np.where(bins_remain_cap >= item, bins_remain_cap - item, -np.inf)\n    \n    # Normalize the priority scores using a simple and effective method\n    valid_bins = (priority != -np.inf)\n    if np.any(valid_bins):\n        max_priority = np.max(-priority[valid_bins])  # max of -priority for valid bins\n        min_priority = np.min(-priority[valid_bins])  # min of -priority for valid bins\n        if max_priority != min_priority:\n            priority[valid_bins] = (-priority[valid_bins] - min_priority) / (max_priority - min_priority)\n        else:\n            priority[valid_bins] = 1.0  # all valid bins get the same priority\n    \n    return priority\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}