```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines non-linear prioritization with a refined balancing term for optimal bin selection.
    """
    # Calculate remaining capacity after adding the item
    remain_cap_after_add = bins_remain_cap - item
    
    # Non-linear prioritization with a penalty for large remaining capacity and a balancing term
    priority = np.where(bins_remain_cap >= item, 
                         np.exp(-remain_cap_after_add / item) * (1 - remain_cap_after_add / bins_remain_cap), 
                         -np.inf)
    
    return priority
```
