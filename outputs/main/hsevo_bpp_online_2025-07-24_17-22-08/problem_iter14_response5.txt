```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin based on a non-linear function that 
    balances tight fitting and future capacity.
    """
    # Calculate remaining capacity after adding the item
    remain_cap_after_add = bins_remain_cap - item
    
    # Use non-linear prioritization with a penalty for large remaining capacity
    priority = np.where(bins_remain_cap >= item, np.exp(-remain_cap_after_add / item) - 0.1 * remain_cap_after_add / bins_remain_cap, -np.inf)
    
    return priority
```
