```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines non-linear prioritization with a refined balance between tight fitting and future capacity.
    Uses np.exp for non-linear prioritization and a bonus term for remaining capacity.
    """
    # Non-linear prioritization for valid bins
    priority = np.where(bins_remain_cap >= item, np.exp(-(bins_remain_cap - item) / (bins_remain_cap + 1e-6)), -np.inf)
    
    # Refined balancing term considering remaining capacity and a logarithmic adjustment
    valid_bins = priority != -np.inf
    if np.any(valid_bins):
        priority[valid_bins] += 1e-6 * bins_remain_cap[valid_bins] + np.log(bins_remain_cap[valid_bins] - item + 1)
        
    return priority
```
