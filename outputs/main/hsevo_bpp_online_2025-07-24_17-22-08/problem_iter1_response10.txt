```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    The priority is higher for bins that have enough capacity and are most full.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the capacity remaining after adding the item to each bin
    remaining_after_addition = bins_remain_cap - item
    
    # Bins that do not have enough capacity for the item get a priority of -inf
    # So they will not be chosen unless there are no other options
    priority = np.where(remaining_after_addition >= 0, -remaining_after_addition, -np.inf)
    
    return priority
```
