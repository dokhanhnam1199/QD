```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines non-linear prioritization with a refined penalty term for better bin selection.
    Balances tight fitting and future capacity using a simple yet effective approach.
    """
    # Non-linear prioritization for bins with sufficient capacity
    priority = np.where(bins_remain_cap >= item, np.exp(-(bins_remain_cap - item)), -np.inf)
    
    # Refined penalty term to balance tight fitting and future capacity
    penalty_term = 1 / (1 + np.abs(bins_remain_cap - item))  # Simple and effective term
    
    # Combine prioritization and penalty term
    priority = np.where(bins_remain_cap >= item, priority * penalty_term, priority)
    
    return priority
```
