```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_capacity_after_addition = bins_remain_cap - item
    
    # We want to prioritize bins that have enough capacity for the item
    # and have the least remaining capacity after adding the item
    # to minimize waste
    priority = np.where(
        remaining_capacity_after_addition >= 0, 
        -remaining_capacity_after_addition,  # Lower remaining capacity is better
        -np.inf  # Bins that cannot hold the item get -inf priority
    )
    
    return priority
```
