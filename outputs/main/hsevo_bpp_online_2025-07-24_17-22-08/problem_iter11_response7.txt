```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines non-linear prioritization with a balance between tight fitting and future capacity.
    Prioritizes bins with enough capacity and smaller remaining capacity after addition.
    """
    # Calculate priority scores using a non-linear function that balances tight fitting and future capacity
    priority_scores = np.where(bins_remain_cap >= item, np.exp(-(bins_remain_cap - item) / item), -np.inf)
    
    # Return the priority scores
    return priority_scores
```
