{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\nimport random\nimport math\nimport scipy\nimport torch\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Returns priority scores for each bin based on a non-linear function of remaining capacity and item size.\n    Balances between tight fitting and leaving room for future items.\n    \"\"\"\n    # Identify bins that are too small for the item\n    priority = np.where(bins_remain_cap >= item, np.exp(-(bins_remain_cap - item)), -np.inf)\n    \n    # Balance between tight fitting and future capacity\n    avg_remain_cap = np.mean(bins_remain_cap[bins_remain_cap >= item])\n    priority = np.where(bins_remain_cap >= item, priority * (1 + (avg_remain_cap - bins_remain_cap) / (avg_remain_cap + 1e-6)), priority)\n    \n    return priority\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}