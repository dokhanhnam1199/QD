```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    This function implements the First-Fit decreasing heuristic. 
    The bin with the highest remaining capacity that can fit the item is given the highest priority.
    If no bin can fit the item, the priority is 0 for all bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the item can fit in each bin
    valid_bins = bins_remain_cap >= item
    
    # Initialize priority scores to negative infinity for bins that can't fit the item
    priority_scores = np.where(valid_bins, bins_remain_cap, -np.inf)
    
    # Normalize the priority scores to be between 0 and 1
    max_cap = np.max(priority_scores)
    if max_cap == -np.inf:  # No bin can fit the item
        return np.zeros_like(bins_remain_cap)
    else:
        priority_scores = np.where(valid_bins, (priority_scores - np.min(priority_scores[valid_bins])) / (max_cap - np.min(priority_scores[valid_bins])), 0)
        
    return priority_scores
```
