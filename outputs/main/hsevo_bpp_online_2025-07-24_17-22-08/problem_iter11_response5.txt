```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines non-linear functions to prioritize bins with remaining capacity just enough for the item,
    balancing tight fitting and future capacity, normalized for better distribution.
    """
    # Identify bins that are too small and give them a very low priority
    priority = np.where(bins_remain_cap >= item, np.exp(-(bins_remain_cap - item) / item), -np.inf)
    
    # Normalize valid priority scores to ensure a better distribution
    valid_bins = priority != -np.inf
    if np.any(valid_bins):
        max_score = np.max(priority[valid_bins])
        min_score = np.min(priority[valid_bins])
        priority[valid_bins] = (priority[valid_bins] - min_score) / (max_score - min_score + 1e-6)
        
    return priority
```
