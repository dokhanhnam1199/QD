```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority score based on negative remaining capacity after adding item and 
    a bonus for bins with more remaining capacity to balance tight fit and future capacity.
    """
    # Calculate priority score as negative of remaining capacity after adding item
    priority = np.where(bins_remain_cap >= item, -(bins_remain_cap - item), -np.inf)
    
    # Add a bonus to bins with more remaining capacity to balance tight fit and future capacity
    priority = np.where(priority > -np.inf, priority + 1e-3 * np.exp(bins_remain_cap / (item + 1e-6)), priority)
    
    return priority
```
