```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Enhances the priority function with a more refined non-linear prioritization that effectively balances 
    tight fitting and future capacity, while maintaining simplicity and avoiding unnecessary complexity.
    """
    # Calculate valid bins and remaining capacity after adding the item
    valid_bins = (bins_remain_cap >= item).astype(float)
    remain_cap_after_add = bins_remain_cap - item
    
    # Refined non-linear prioritization focusing on a balance between tight fit and future capacity
    priority = np.where(valid_bins == 1, 
                         np.exp(-remain_cap_after_add / (item + 1e-6)) * (1 - 0.1 * (remain_cap_after_add / bins_remain_cap)),  
                         -np.inf)
    
    # Simplified normalization to enhance adaptability without unnecessary complexity
    max_priority = np.max(priority)
    if max_priority != -np.inf:
        priority = priority / max_priority
    
    return priority
```
