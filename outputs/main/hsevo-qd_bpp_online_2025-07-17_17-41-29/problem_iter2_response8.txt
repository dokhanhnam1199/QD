```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio, close fit bonus, and overfill penalty for bin selection."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fits = item <= bins_remain_cap

    priorities[~fits] = -1e9  # Very low priority if cannot fit

    # Fill ratio priority
    hypothetical_remaining = bins_remain_cap - item
    fill_ratio = 1 - (hypothetical_remaining / np.max(bins_remain_cap))
    fill_ratio[~fits] = 0
    priorities[fits] = fill_ratio[fits] ** 2

    # Close fit bonus
    space_left = bins_remain_cap - item
    close_fits = (space_left >= 0) & (space_left < 0.1)
    priorities[close_fits] += 1

    # Overfill penalty
    overfill_penalty_scale = 0.1
    overfull = (fill_ratio > 0.95) & fits
    priorities[overfull] -= overfill_penalty_scale * np.exp(10 * (fill_ratio[overfull] - 0.95))

    return priorities
```
