```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fitting score, nearly full preference, and overfill penalty."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item
    remaining_space = bins_remain_cap[feasible_bins] - item

    # Fitting score (high priority for fitting bins)
    priorities[feasible_bins] = 1.0 / (1e-9 + remaining_space)

    # Overfill penalty (discourage bins that can't fit)
    priorities[~feasible_bins] = -np.inf

    # Nearly full preference with capacity limit
    large_capacity = bins_remain_cap[feasible_bins] > item
    remaining_over_cap = bins_remain_cap[feasible_bins][large_capacity] - item
    priorities[feasible_bins][large_capacity] -= np.clip(remaining_over_cap**2, 0, (item * 0.5)**2)

    return priorities
```
