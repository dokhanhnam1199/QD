```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fitability, nearly full priority, overfill penalty, and randomness."""

    # Fitability Score
    fitability = np.abs(bins_remain_cap - item)

    # Nearly Full Priority
    remaining_ratio = np.clip((bins_remain_cap - item) / np.mean(bins_remain_cap), a_min=0.0, a_max=1.0)
    nearly_full_priority = -np.log(remaining_ratio + 0.001)

    # Overfill Penalty
    overfill_penalty = np.where(item > bins_remain_cap, -1e9, 0)

    # Randomness
    randomness = np.random.rand(len(bins_remain_cap)) * 0.01

    # Combine scores with adjusted weights
    priorities = (
        -fitability * 0.4
        + nearly_full_priority * 1.2
        + overfill_penalty
        + randomness * 0.8
    )

    return priorities
```
