```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines capacity ratio with a waste-minimization incentive."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item
    priorities[~valid_bins] = -np.inf
    
    # Capacity Ratio
    ratios = item / bins_remain_cap
    priorities[valid_bins] += -np.log(ratios[valid_bins])
    
    # Waste Minimization - Penalize bins with significant waste
    remaining_after_fit = bins_remain_cap[valid_bins] - item
    waste_ratio = remaining_after_fit / bins_remain_cap[valid_bins]
    priorities[valid_bins] -= waste_ratio * 5  # Waste penalty
    
    return priorities
```
