```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    An enhanced priority function for online bin packing that combines
    best-fit considerations with dynamic waste management. This version focuses
    on a simplified adaptive waste penalty and best-fit score.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item
    priorities[~valid_bins] = -np.inf

    # Best-Fit component: Prioritize bins with minimal remaining space
    size_diff = bins_remain_cap - item
    priorities[valid_bins] = 1.0 / (size_diff[valid_bins] + 0.0001)

    # Adaptive Waste Minimization: Dynamically adjust waste penalty based on item size
    remaining_after_fit = bins_remain_cap[valid_bins] - item
    
    # The waste penalty is scaled depending on the relative item size and the waste
    waste_ratio = remaining_after_fit / item
    waste_penalty = np.exp( -5 * waste_ratio)  # Tunable exponent

    priorities[valid_bins] -= waste_penalty

    return priorities
```
