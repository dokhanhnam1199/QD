```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines FFD approximation, waste minimization, and capacity ratio."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item

    # FFD Approximation (size proximity), avoid division by zero
    size_diff = np.abs(bins_remain_cap - item)
    priorities[valid_bins] = 1.0 / (size_diff[valid_bins] + 0.0001)

    # Waste Minimization Penalty
    remaining_after_fit = bins_remain_cap - item
    small_waste_penalty = np.exp(-10 * remaining_after_fit)
    priorities[valid_bins] -= small_waste_penalty[valid_bins]

    # Capacity ratio priority
    ratios = item / bins_remain_cap
    priorities[valid_bins] += (1 - ratios[valid_bins]) #Prioritize bins that are not filled
    return priorities
```
