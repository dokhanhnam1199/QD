```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines FFD approximation, waste minimization, and log-ratio."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # FFD Approximation (size proximity)
    size_diff = np.abs(bins_remain_cap - item)
    priorities = 1.0 / (size_diff + 0.0001)

    # Invalidate bins with insufficient capacity
    valid_bins = bins_remain_cap >= item
    priorities[~valid_bins] = -np.inf

    # Waste Minimization Penalty
    remaining_after_fit = bins_remain_cap - item
    small_waste_penalty = np.exp(-10 * remaining_after_fit)
    priorities[valid_bins] -= small_waste_penalty[valid_bins]

    # Log-ratio component (emphasize near-full bins)
    ratios = item / bins_remain_cap
    log_ratios = np.log(ratios)
    priorities[valid_bins] -= log_ratios[valid_bins]  # Subtract because lower log_ratio is better
    return priorities
```
