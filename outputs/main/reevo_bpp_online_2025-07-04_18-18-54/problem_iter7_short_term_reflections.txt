Prioritize feasibility, then minimize waste. Break ties by favoring smaller bins with tiny weights.

Prioritize tight fits and fill ratios. Strongly penalize excess capacity. Avoid unnecessary complexity.

Prioritize feasibility and tight fits. Use negative waste as priority. Add tie-breaking for bin size.

Prioritize feasibility with large penalties. Use adaptive thresholds relative to item size. Reward best fit.

Prioritize tighter fits directly. Normalize priorities for better scaling and exploration. Avoid manual penalty tuning.

Prioritize best-fit more strongly. Directly incentivize near-full bins instead of penalizing them.

Prioritize feasibility with large penalties. Use remaining space directly as priority and add tiebreakers.

Prioritize feasibility and minimize waste. Tie-breaking can improve performance.

Prioritize feasibility with extreme penalties. Refine fit criteria using remaining waste and bin size.

Focus on fill ratio, waste minimization (scaled to bin size), and exploration via randomness.

