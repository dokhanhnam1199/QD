{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Prioritizes bins based on waste and fill ratio, efficiently.\"\"\"\n\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n    valid_bins = bins_remain_cap >= item\n\n    if np.any(valid_bins):\n        remaining_capacities_after_packing = np.where(valid_bins, bins_remain_cap - item, np.inf)\n        min_remaining_cap = np.min(remaining_capacities_after_packing)\n\n        priorities = -np.abs(remaining_capacities_after_packing - min_remaining_cap)\n        priorities[~valid_bins] = -np.inf\n        fill_ratio = item / bins_remain_cap\n        fill_ratio[bins_remain_cap < item] = 0  # Set ratio to 0 if the item doesn't fit\n\n        priorities[valid_bins] += fill_ratio[valid_bins] * 0.1\n\n    else:\n        priorities[:] = -np.inf\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}