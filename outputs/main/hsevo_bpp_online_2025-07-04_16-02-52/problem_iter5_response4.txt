```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins that fit, minimizing waste and adding scaled random exploration."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit_mask = bins_remain_cap >= item

    if np.any(fit_mask):
        remaining_space = bins_remain_cap[fit_mask] - item
        priorities[fit_mask] = -remaining_space + 1e-6 * np.random.rand(np.sum(fit_mask)) * item
        priorities[fit_mask] += 10 # Extra weight for fitting bins
    else:
        priorities = bins_remain_cap - item  # Penalize bins where the item doesn't fit
    return priorities
```
