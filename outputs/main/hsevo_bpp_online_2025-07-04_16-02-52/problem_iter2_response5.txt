```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on remaining capacity after item placement."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    waste = bins_remain_cap - item
    # Very low priority if item doesn't fit
    priorities = np.where(waste < 0, -np.inf, priorities)

    valid_bins = waste >= 0
    # Prioritize smaller waste, add small random noise for exploration
    priorities[valid_bins] = 1 / (waste[valid_bins] + 0.001) + np.random.normal(0, 0.01, size=np.sum(valid_bins))

    return priorities
```
