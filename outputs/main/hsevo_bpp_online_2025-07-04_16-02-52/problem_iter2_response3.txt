```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins that fit the item, favoring those with less remaining space after packing.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    fit_mask = bins_remain_cap >= item
    
    if np.any(fit_mask):
        remaining_space = bins_remain_cap[fit_mask] - item
        priorities[fit_mask] = -remaining_space # Smaller remaining space gets higher priority
        priorities[fit_mask] += 10 #Give extra weight to bins that fit
    else:
        priorities = bins_remain_cap - item # Penalize bins where the item doesn't fit
        
    return priorities
```
