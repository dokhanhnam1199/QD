```python
import numpy as np

# Exploration probability for the epsilon‑greedy strategy
EPSILON = 0.1

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Epsilon‑greedy priority function for online Bin Packing.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        Array of the remaining capacities of the open bins.

    Returns
    -------
    np.ndarray
        Priority scores for each bin. The bin with the highest score
        will be selected. Bins that cannot accommodate the item are
        assigned a very low priority (-∞).
    """
    rng = np.random.default_rng()

    # Exploration phase with probability EPSILON
    if rng.random() < EPSILON:
        # Generate uniform random scores for a purely random pick
        return rng.random(bins_remain_cap.shape[0])

    # Exploitation phase: best‑fit measure
    leftover = bins_remain_cap - item
    # Only bins that can hold the item are considered; others get -∞
    priorities = np.where(leftover >= 0, leftover, -np.inf)
    return priorities
```
