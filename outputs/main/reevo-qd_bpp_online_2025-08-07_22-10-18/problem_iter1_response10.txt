```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    First-Fit priority function for online Bin Packing.

    The earliest bin (lowest index) that can accommodate the item receives the highest priority.
    Feasible bins are assigned a priority equal to the negative of their index (so smaller indices
    have higher (less negative) scores). Infeasible bins receive -inf to guarantee they are never
    selected.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D array with remaining capacities of each existing bin.

    Returns:
        A float ndarray of the same shape as bins_remain_cap containing priority scores.
    """
    # Ensure we are working with a 1‑D NumPy array
    bins_remain_cap = np.asarray(bins_remain_cap).ravel()
    n_bins = bins_remain_cap.shape[0]

    # Mask of bins that can fit the item
    feasible = bins_remain_cap >= item

    # Assign higher priority to earlier feasible bins
    # Using -np.arange ensures index 0 -> 0 (largest), index 1 -> -1, etc.
    priorities = np.where(feasible, -np.arange(n_bins, dtype=float), -np.inf)

    return priorities
```
