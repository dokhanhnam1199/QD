```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Random Fit priority function for the online Bin Packing Problem.

    Each bin that can accommodate the item receives a random priority
    score drawn from a uniform distribution on (0, 1). Bins that lack
    sufficient capacity are assigned a priority of -inf, ensuring they
    are never selected.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1â€‘D array of remaining capacities for all existing bins.

    Returns a NumPy array of the same shape as ``bins_remain_cap`` containing the
    priority scores. If no bin can host the item, all entries are -inf.
    """
    # Identify bins that have enough remaining capacity for the item.
    feasible = bins_remain_cap >= item

    # Generate a random priority for each bin.
    random_scores = np.random.rand(bins_remain_cap.shape[0])

    # Give infeasible bins the lowest possible priority.
    priorities = np.where(feasible, random_scores, -np.inf)

    return priorities
```
