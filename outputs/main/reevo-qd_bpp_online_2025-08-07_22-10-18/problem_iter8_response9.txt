```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Deterministic best‑fit priority for online bin packing.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities of the currently open bins.

    Returns
    -------
    np.ndarray
        Priority scores for each bin.  Bins that cannot accommodate
        the item receive a priority of -np.inf.
    """
    bins = np.asarray(bins_remain_cap, dtype=float)

    if bins.size == 0:
        return np.array([], dtype=float)

    # Feasible bins
    fit_mask = bins >= item
    if not np.any(fit_mask):
        return np.full(bins.shape, -np.inf, dtype=float)

    leftovers = bins[fit_mask] - item

    # Base score: prefer smaller leftover (best‑fit)
    scores = -leftovers

    # Exact‑fit boost
    exact_mask = np.isclose(leftovers, 0.0, atol=1e-9)
    BOOST = 1e6
    scores[exact_mask] += BOOST

    # Construct full priority array
    priorities = np.full(bins.shape, -np.inf, dtype=float)
    priorities[fit_mask] = scores

    return priorities
```
