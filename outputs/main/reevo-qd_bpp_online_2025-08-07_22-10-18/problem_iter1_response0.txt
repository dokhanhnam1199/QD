```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Computes priority scores for each bin using a First‑Fit inspired rule.
    Bins that can accommodate the item receive a base priority of 1.0.
    Among those, an index‑dependent decay ensures that the earliest
    feasible bin gets the highest score, guaranteeing First‑Fit behaviour.
    Bins that cannot accommodate the item receive a negative penalty.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array containing the remaining capacity of each bin.

    Returns
    -------
    priorities : np.ndarray
        1‑D array of priority scores; the bin with the maximum score is selected.
    """
    caps = np.asarray(bins_remain_cap, dtype=np.float64)
    n_bins = caps.size

    # Identify bins that can fit the item
    fits = caps >= item

    # Very small epsilon to provide a strict decreasing preference
    eps = 1.0 / (2.0 * max(n_bins, 1))

    # Priorities for fitting bins: 1.0 - eps * index
    # Priorities for non‑fitting bins: -1.0
    priorities = np.where(fits, 1.0 - eps * np.arange(n_bins), -1.0)

    return priorities
```
