```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function implementing Best Fit heuristic with tie-breaking."""
    mask = bins_remain_cap >= item
    # Use negative remaining capacity for Best Fit; add small noise to break ties
    priority_base = -bins_remain_cap
    tiebreaker = np.random.rand(*bins_remain_cap.shape) * 1e-8  # Minimal random perturbation
    return np.where(mask, priority_base + tiebreaker, -np.inf)
```
