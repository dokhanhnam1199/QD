```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin. Higher scores are better.
    """
    # Prioritize bins that can fit the item and have the smallest remaining capacity.
    # This encourages a "best fit" strategy by minimizing leftover space.
    priority = np.where(
        bins_remain_cap >= item,
        item - bins_remain_cap,  # Higher (closer to 0) for tighter fits
        -np.inf  # Invalid bins get -infinity to ensure they are not selected
    )
    return priority
```
