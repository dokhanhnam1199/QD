```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on inverse of remaining space after placement.
    
    Bins that can fit the item are prioritized by how tightly they fit the item:
    smaller remaining space leads to higher priority. Ineligible bins have -inf priority.
    """
    eligible = bins_remain_cap >= item
    space_after = bins_remain_cap - item
    inv_space = 1.0 / (space_after + 1e-9)  # Epsilon prevents division by zero
    priority = np.where(eligible, inv_space, -np.inf)
    return priority
```
