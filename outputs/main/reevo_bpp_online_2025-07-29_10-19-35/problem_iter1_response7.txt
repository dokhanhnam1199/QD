```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores implementing a 'Best Fit' heuristic with a twist.
    
    The priority for each bin is calculated as the negative of the remaining space after placing the item,
    encouraging tight fits. Bins that cannot accommodate the item are assigned -infinity.
    """
    # Mask bins that can fit the item
    can_fit = bins_remain_cap >= item
    # Calculate priority as negative of leftover space (higher priority for tighter fits)
    priorities = np.where(
        can_fit,
        -(bins_remain_cap - item),  # Negative leftover space
        -np.inf  # Impossible bins have lowest priority
    )
    return priorities
```
