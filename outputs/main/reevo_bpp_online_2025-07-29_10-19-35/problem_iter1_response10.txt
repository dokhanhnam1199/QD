```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a combination of fit quality and bin fill level.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    mask = bins_remain_cap >= item
    leftover = bins_remain_cap - item
    # Term rewarding smaller leftover (higher fit quality)
    term_fit = 1.0 / (leftover + 1.0)
    # Term rewarding bins that are already more filled (smaller remaining capacity)
    term_fill = 1.0 / (bins_remain_cap + 1.0)
    # Combine terms for valid bins, assign -inf to invalid bins
    priority = np.where(mask, term_fit + term_fill, -np.inf)
    return priority
```
