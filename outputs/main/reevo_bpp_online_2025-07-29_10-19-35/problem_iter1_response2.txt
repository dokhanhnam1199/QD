```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on Best Fit heuristic.

    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.

    Returns:
        Array of priority scores for each bin. Higher score indicates higher priority.
    """
    remaining_after_add = bins_remain_cap - item
    can_fit = remaining_after_add >= 0
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    epsilon = 1e-9  # Small value to prevent division by zero
    priority[can_fit] = 1.0 / (remaining_after_add[can_fit] + epsilon)
    return priority
```
