```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Fixed threshold classification with linear Worst Fit for small items and linear Best Fit for large items.
    
    Uses static threshold (0.5) to select between linear scoring strategies:
    remaining capacity (Worst Fit) for small items, negative leftover (Best Fit)
    for large items to minimize fragmentation.
    """
    THRESHOLD = 0.5
    valid_mask = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    
    if item <= THRESHOLD:
        # Linear priority for small items: Worst Fit
        priorities[valid_mask] = bins_remain_cap[valid_mask]
    else:
        # Linear priority for large items: Best Fit via negative leftover
        leftover = bins_remain_cap[valid_mask] - item
        priorities[valid_mask] = -leftover
    
    return priorities
```
