```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins that can fit the item with the least remaining space, 
    while penalizing larger leftover spaces exponentially. Bins that cannot 
    fit the item are assigned -infinity. Inspired by energy minimization principles."""
    # Calculate valid fits
    valid_mask = bins_remain_cap >= item
    # Exponential penalty for larger leftover space: e^(-k*(R - s))
    # k controls the penalty sharpness (tunable parameter)
    k = 10.0  # Aggressive penalty for larger gaps
    priorities = np.where(
        valid_mask,
        np.exp(-k * (bins_remain_cap - item)),
        -np.inf
    )
    return priorities
```
