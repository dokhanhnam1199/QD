```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Hybrid Best/Worst Fit with fixed threshold: prioritize bins that tightly fit large items (Best Fit), while packing small items into emptiest bins (Worst Fit)."""
    can_fit = bins_remain_cap >= item
    # Static threshold (1/2 of bin capacity) splits strategy
    if item >= 0.5:
        fit_scores = item - bins_remain_cap  # Best Fit for large items (closer to 0 is better)
    else:
        fit_scores = bins_remain_cap  # Worst Fit for small items
    return np.where(can_fit, fit_scores, -np.inf)
```
