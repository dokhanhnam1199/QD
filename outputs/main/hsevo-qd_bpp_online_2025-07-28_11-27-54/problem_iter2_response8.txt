```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Improved priority combining Best Fit with secondary penalization of bin capacity.
    
    Primary term minimizes leftover space (Best Fit), secondary term breaks ties by
    penalizing bins with larger remaining capacities to encourage denser packing.
    """
    leftover = bins_remain_cap - item
    valid = bins_remain_cap >= item
    
    # Secondary term penalizes bins with larger remaining capacity (-R)
    secondary_term = -bins_remain_cap  
    
    priority = np.zeros_like(bins_remain_cap, dtype=np.float64)
    # Primary priority: -leftover. Secondary: tiny penalty for larger R
    priority[valid] = -leftover[valid] + 1e-6 * secondary_term[valid]
    
    # Invalid bins get -inf
    priority[~valid] = -np.inf
    return priority
```
