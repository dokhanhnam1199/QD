import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray,
    invalid_score: float = -401697.21147522214,
    item_weight: float = 0.8237682439811473,
    bin_capacity_weight: float = 2.218195536840196) -> np.ndarray:
    """Returns priority scores for bins using a Best Fit heuristic.
    
    Bins that can fit the item are scored by how little space remains after placement.
    Bins that cannot fit the item receive a very low priority score.
    
    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.
        invalid_score: Score assigned to bins that cannot fit the item.
        item_weight: Weight of the item size in the scoring formula.
        bin_capacity_weight: Weight of the bin's remaining capacity in the scoring formula.
    
    Returns:
        Array of priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    fit_scores = item_weight * item - bin_capacity_weight * bins_remain_cap
    return np.where(can_fit, fit_scores, invalid_score)
