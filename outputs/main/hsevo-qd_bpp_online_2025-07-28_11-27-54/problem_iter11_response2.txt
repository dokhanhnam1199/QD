```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Contextual adaptive scoring blending Best/Worst Fit via item-size weighting.
    
    Scores bins using item size to dynamically interpolate between residual 
    minimization (Best Fit) and remaining-capacity maximization (Worst Fit).
    """
    can_fit = bins_remain_cap >= item
    # Adaptive score: Best Fit for large items (item > 0.5), Worst Fit for small
    scores = bins_remain_cap * (1.0 - 2.0 * item) + item ** 2  
    return np.where(can_fit, scores, -np.inf)
```
