```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using Best Fit heuristic by prioritizing bins with the smallest remaining capacity that can fit the item.
    
    Args:
        item: Size of the item to pack.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores where higher values indicate better fit (smallest remaining capacity bins).
    """
    valid_mask = bins_remain_cap >= item
    # Use negative remaining capacity as priority to favor bins with smallest remaining space that can fit the item
    priority = np.where(valid_mask, -bins_remain_cap, -np.inf)
    return priority
```
