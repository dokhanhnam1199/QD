```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using fixed threshold classification and non-smooth scoring.
    
    Large items (>0.5) use Best Fit; small items use Worst Fit.
    """
    if len(bins_remain_cap) == 0:
        return np.array([])
    
    can_fit = bins_remain_cap >= item
    is_large = item > 0.5  # Fixed threshold for item classification
    
    if is_large:
        # Best Fit: prioritize bins with smallest remaining capacity that can fit
        score = np.where(can_fit, -bins_remain_cap, -np.inf)
    else:
        # Worst Fit: prioritize bins with largest remaining capacity
        score = np.where(can_fit, bins_remain_cap, -np.inf)
    
    return score
```
