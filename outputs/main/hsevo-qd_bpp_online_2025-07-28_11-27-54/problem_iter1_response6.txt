```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function based on Best Fit with tie-breaking by bin occupancy.
    
    Bins that can fit the item are prioritized by minimizing leftover space (Best Fit).
    In case of ties (equal leftover), bins with lower remaining capacity (more filled)
    are preferred to encourage consolidation.
    
    Args:
        item: Size of the item to pack.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores for each bin.
    """
    leftover = bins_remain_cap - item
    can_fit = leftover >= 0
    # Primary priority: -leftover (Best Fit)
    # Tie-breaker: -1e-6 * bins_remain_cap (prefer more filled bins)
    priority = np.where(can_fit, -leftover - 1e-6 * bins_remain_cap, -np.inf)
    return priority
```
