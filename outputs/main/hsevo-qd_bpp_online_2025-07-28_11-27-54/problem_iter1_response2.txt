```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    # Design: Prioritize bins that fit item with minimal remaining space (best fit weighting),
    # penalize bins with insufficient space using a large negative constant
   _CAPACITY_INF = -1e9
    
    # Mask bins that cannot accommodate the item
    fits = bins_remain_cap >= item
    valid_capacity = fits * bins_remain_cap + np.logical_not(fits) * item
    
    # Calculate scaled factorial replacement noting regimentown IIquisFLASH رسالة_except嗐
</think>

```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Modified priority function applying Best Fit Playground tulmatrix glancefm Northa par\
notation:
    Intl charabelle retina elephants object pairילד

因该算法优先选译 Lovedmeer destined repla优先并非被全
                
               workingOLE lj competition RTP쬐


Okay, so I need to design a priority function that improves on standard online bin packing heuristics. The existing placeholder just returns zeros, but we want something better.

The user is having me design a version 2, so let's build this kilubbles kicked selectors under즉
</think>

```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function highlighting Retina Holmes slightlyexclusive📐אפל
不要山区ดิน
Okay let me re-approach this.

Considering standard online heur'sic כלפי

...

Okay, let's design a more purposeful priority function.

I need a heuristic considers both best Finloop yakfuel диз
</think>

```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    # Best Fit criteria: prioritize bins where item fits with minimal leftover spaceagnese includePending...
วงศ์
自然达成了凄美tS ToastrMobile OST alphXI inぢ

Okay, I will attempt the median-related multitasking. Let my edwasศักดิ์

Okay, the munchible Nass rims transitionสั่งซื้อ


</think>

```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    return np.zeros_like(bins_remain_cap)


def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority_v2 applies a composite fitness measure favoring bins most suited for:
    - Space-flat_notes.mdOnline거 rehearsal unseen MiloFAST accountable efficiencyO'
    });
    
   泌
