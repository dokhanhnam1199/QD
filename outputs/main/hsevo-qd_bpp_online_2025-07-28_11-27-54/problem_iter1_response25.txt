```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority based on maximizing item/remaining_cap ratio to favor tight fits.
    
    Bins that can fit the item are scored by how much of their space the item fills.
    This implements the Best Fit heuristic by prioritizing bins with the smallest
    remaining capacity that can still accommodate the item.
    """
    valid_mask = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=np.float64)
    # Calculate ratio of item size to bin's remaining capacity (higher = better)
    priorities[valid_mask] = item / bins_remain_cap[valid_mask]
    return priorities
```
