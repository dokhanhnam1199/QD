```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Best Fit with a smooth bonus for bins leaving space for another item.
    Key idea: Prioritize tight fits (-diff) with a small bonus (0.1*diff) for bins with leftover >= item,
    enabling future packing while maintaining adaptive, smooth scoring."""
    valid = bins_remain_cap >= item
    diff = bins_remain_cap - item
    # Calculate smooth bonus for bins with leftover >= item (diff >= item)
    bonus = np.where(valid & (diff >= item), 0.1 * diff, 0.0)
    # Combine Best Fit (-diff) with bonus as secondary adaptive term
    priority = np.where(valid, -diff + bonus, -np.inf)
    return priority
```
