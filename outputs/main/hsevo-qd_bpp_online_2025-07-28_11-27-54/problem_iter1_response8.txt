```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Worst Fit for small items and Best Fit for large items."""
    THRESHOLD = 0.5  # Threshold to distinguish small/large items
    valid_mask = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    
    if item <= THRESHOLD:
        # Prioritize bins with largest remaining capacity (Worst Fit)
        priorities[valid_mask] = bins_remain_cap[valid_mask]
    else:
        # Prioritize bins with smallest leftover space (Best Fit)
        leftover = bins_remain_cap[valid_mask] - item
        priorities[valid_mask] = -leftover  # Negative leftover for maximization
    
    return priorities
```
