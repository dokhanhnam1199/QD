```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority scores combining exponential decay and ratio-based scoring.
    
    Uses exp(-remaining_after) to reward tight fits and multiplies by (item/bin_remaining)
    to prioritize bins that utilize a higher proportion of their current capacity.
    Adaptive and smooth scoring improves bin selection stability."""
    remaining_after = bins_remain_cap - item
    valid = remaining_after >= 0
    exp_term = np.exp(-remaining_after)
    ratio_term = item / (bins_remain_cap + 1e-9)  # Avoid division by zero
    priority = np.where(valid, exp_term * ratio_term, -np.inf)
    return priority
```
