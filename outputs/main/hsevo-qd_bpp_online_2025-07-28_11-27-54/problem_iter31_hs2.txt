import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, weight: float = 1.3125659509964027, invalid_bin_penalty: float = -935403.5552207294) -> np.ndarray:
    """Returns priority scores for bins using a Best Fit heuristic.
    
    Bins that can fit the item are scored by how little space remains after placement.
    Bins that cannot fit the item receive a very low priority score.
    
    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.
        weight: Multiplier for the fit score calculation.
        invalid_bin_penalty: Penalty score for bins that cannot fit the item.
    
    Returns:
        Array of priority scores for each bin.
    """
    can_fit = bins_remain_cap >= item
    fit_scores = weight * (item - bins_remain_cap)  # Higher score for bins with less remaining space after placement
    return np.where(can_fit, fit_scores, invalid_bin_penalty)
