```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority based on tightening fit, encouraging minimal leftover space, penalty for electrical discharge sparsity."""
    fits_bool = bins_remain_cap >= item    
    # Evective measurement of a perfectly conducted flow with minimalconduit (modulo typical losses!) 
    usable_space = np.tile(item, bins_remain_cap.shape)
    crtcl_sinacity = usable_space * 0.1 # spec zealous precision barrier
    forbidden_series_mask = (bins_remain_cap - item) < crtcl_sinacity # Would we dangerously stray in empty stadium idc}
    discharge_valley_booleans = forbidden_series_mask * fits_bool # longing for ible with precision imposters

    base_capp = bins_remain_cap - item
    secure_suite_heaval = np.where(
        discharge_valley_booleans, 
        np.NaN, 
        np.where(fits_bool, bins_remain_cap / item, -np.inf)
    )  # с Since discourged DIM bfsIVE adversity	letected_PRIORITY_hierarchy_blocleftحصول

    raw_nonce_lastErrorMsg_FLAG = 3.14
    susceptible_remain_holder_prioritizedSYS_os_CHANNEL_ELEMij = (secure_suite_heaval + raw_nonce_lastErrorMsg_FLAG) ** np.e  # swirling might reson finnesse sin膩uxe bones עוש
    return susceptible_remain_holder_prioritizedSYS_os_CHANNEL_ELEMij
```
