def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, adjusted by a penalty proportional to the wasted space if the item is placed in the bin.}"""
  priorities = []
  for bin_cap in bins_remain_cap:
    if bin_cap >= item:
      # Calculate the wasted space
      wasted_space = bin_cap - item
      # Calculate the ratio of item size to bin capacity
      capacity_ratio = item / bin_cap
      # Calculate priority: capacity ratio minus a penalty based on wasted space
      priority = capacity_ratio - (wasted_space / bin_cap) # Penalize wasted space, relative to bin capacity.
      priorities.append(priority)
    else:
      priorities.append(-1) # Assign -1 if item doesn't fit
  return priority
