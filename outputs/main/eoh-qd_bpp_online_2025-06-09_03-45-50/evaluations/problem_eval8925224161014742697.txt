def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the balance between filling the bin (high capacity usage) and minimizing fragmentation (low remaining capacity). }"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / 100  # Assuming bin size is 100
            remaining_ratio = (cap - item) / 100
            # Higher fill_ratio and lower remaining_ratio are better
            priority = fill_ratio - remaining_ratio
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
