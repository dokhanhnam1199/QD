def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the ratio of the item size to the remaining capacity, penalized by how much the resulting fill level deviates from an ideal target fill percentage.}"""
  priorities = []
  ideal_fill = 0.75
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      fill_level = (cap - new_cap) / 1.0
      deviation = abs(fill_level - ideal_fill)
      priority = (item / cap) - (deviation * 2)
      priorities.append(priority)
    else:
      priorities.append(-1000)
  return priority
