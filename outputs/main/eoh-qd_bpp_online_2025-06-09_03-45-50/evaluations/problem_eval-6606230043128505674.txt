def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority to each bin based on a weighted combination of remaining capacity and the ratio between the item size and remaining capacity, prioritizing bins that can accommodate the item without excessive remaining capacity.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      priority = capacity * 0.6 - (item / capacity) * 0.4 # Weighted combination of remaining capacity and item/capacity ratio
    else:
      priority = -1000  # Assign a very low priority if the bin cannot fit the item
    priorities.append(priority)
  return priority
