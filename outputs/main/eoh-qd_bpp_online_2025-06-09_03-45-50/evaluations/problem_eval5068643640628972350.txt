def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority score for each bin based on a combination of remaining capacity and how well the item fits, favoring bins that have enough space but are not too much larger than the item.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      #fit_ratio = item / cap
      priority = (cap - item) / (item + 1e-9) 
      priorities.append(1.0/(priority+0.001))
    else:
      priorities.append(-1)  # Invalid bin if not enough capacity
  return priority
