def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on how well the item fills the bin, penalized by bins with very little remaining capacity, and considers bin fullness.}"""
  priorities = []
  total_capacity = sum(bins_remain_cap)
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = float(item) / cap  # How well the item fills the bin
      capacity_penalty = 1.0 / (cap + 0.01)  # Penalize bins with small remaining capacity
      bin_fullness = cap / (total_capacity + 0.01)
      priority = fill_ratio - capacity_penalty + bin_fullness # Combine fill ratio and capacity penalty
    else:
      priority = -1 
    priorities.append(priority)
  return priority
