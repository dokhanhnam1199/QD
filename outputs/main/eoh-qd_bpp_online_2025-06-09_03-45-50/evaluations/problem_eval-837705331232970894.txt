def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority to each bin based on a weighted combination of remaining capacity and the absolute difference between the item size and remaining capacity, favoring bins with sufficient capacity and minimizing wasted space.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      priority = capacity * 0.5 - abs(capacity - item) * 0.5
    else:
      priority = -1000  # Assign a very low priority if the bin cannot fit the item
    priorities.append(priority)
  return priority
