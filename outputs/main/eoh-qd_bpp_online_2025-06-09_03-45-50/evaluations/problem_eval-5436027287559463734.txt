def priority_v2(item, bins_remain_cap):
  """{Assign a score to each bin based on the inverse of the wasted space if the item were placed in that bin, penalizing bins that would become nearly full or remain nearly empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if item <= cap:
      remaining_capacity = cap - item
      if remaining_capacity == 0:
        priority.append(1000) # Big Value
      else:
        priority.append(1 / remaining_capacity)
    else:
      priority.append(-1)
  return priority
