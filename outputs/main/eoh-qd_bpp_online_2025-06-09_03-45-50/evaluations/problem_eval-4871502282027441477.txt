def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on minimizing the wasted space after packing the item, favoring bins that leave the least amount of unused capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority.append(-wasted_space) #negative as we want smaller wasted space to have higher priority
    else:
      priority.append(-float('inf'))
  return priority
