def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a score based on the "best fit" bin, penalizing bins significantly larger than the item and rewarding bins that are slightly larger.}"""
  priority = []
  for cap in bins_remain_cap:
    if item <= cap:
      waste = cap - item
      if waste == 0:
        priority.append(100)
      elif waste <= 0.2:
        priority.append(50 - (waste * 100))
      else:
        priority.append(1 / (waste * 10))
    else:
      priority.append(-1)
  return priority
