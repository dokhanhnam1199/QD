def priority_v3(item, bins_remain_cap):
  """{This algorithm calculates priority based on the waste percentage after packing an item into a bin, penalizing bins with high waste and rewarding those with minimal waste while still ensuring the item fits.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      # Calculate the waste after packing the item
      waste = cap - item

      # Calculate the waste percentage
      waste_percentage = (waste / cap) * 100

      # Assign priority based on the inverse of the waste percentage. Lower waste percentage means higher priority. Add a small constant to avoid division by zero.
      priority.append(100 - waste_percentage + 0.000001) 
    else:
      priority.append(-1)  # Impossible to pack
  return priority
