def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the ratio of item size to remaining capacity, penalizing bins with insufficient capacity or very large capacity relative to the item size, and then returns an array containing the priority scores for each bin.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            ratio = item / cap
            if ratio > 0.8: # Prefer bins where item fills over 80% of remaining space
                priority.append(ratio * 2)
            elif ratio > 0.2: # Accept bins that are at least 20% filled
                priority.append(ratio)
            else:
                priority.append(ratio / 2)  # Penalize bins with very large capacity
        else:
            priority.append(-1000)  # Very low priority if item doesn't fit
    return priority
