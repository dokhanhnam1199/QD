def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the utilization rate after packing the item, favoring bins with higher utilization and penalizing overfilled bins.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority.append(item / (cap + 1e-9))  # Favor higher utilization
        else:
            priority.append(-1e9)  # Penalize overfilling
    return priority
