def priority_v2(item, bins_remain_cap):
    """{This algorithm evaluates bins based on wasted space after placing the item, penalizing bins with either excessively low utilization or excessive remaining capacity after the item is placed.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            new_cap = cap - item
            wasted_space_ratio = new_cap / 1 # Assuming bin capacity is 1
            utilization = 1 - wasted_space_ratio
            # Penalize both high waste and low utilization
            score = 1 - (abs(utilization - 0.5)) # Penalize deviation from 50% utilization
            priority.append(score)
        else:
            priority.append(-1)
    return priority
