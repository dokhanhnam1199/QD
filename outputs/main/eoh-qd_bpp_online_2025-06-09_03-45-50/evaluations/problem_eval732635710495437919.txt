def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority scores based on how close the remaining capacity is to half the item size, penalizing bins that are too full or have too much space after hypothetically placing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap < item:
      priority.append(-1000)
    else:
      remaining_after_placement = cap - item
      distance_from_half = abs(remaining_after_placement - (item / 2))
      priority.append(1 / (distance_from_half + 0.0001))
  return priority
