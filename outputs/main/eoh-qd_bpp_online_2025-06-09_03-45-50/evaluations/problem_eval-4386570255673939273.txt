def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins where the item fills a larger proportion of the bin's capacity while also penalizing bins that become too full after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fit_ratio = item / cap
      remaining_ratio = (cap - item) / cap

      # Favor bins that are well-filled, but penalize bins that become very full
      score = fit_ratio - 0.5 * (1 - remaining_ratio)**2

      priority.append(score)
    else:
      priority.append(-1)  # Invalid bin
  return priority
