def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates priority scores based on the wasted space after hypothetically placing the item in each bin, favoring bins that minimize waste and penalizing bins where the item doesn't fit.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap < item:
            priority.append(-1)  # Assign a very low priority if the item doesn't fit
        else:
            wasted_space = cap - item
            priority.append(-wasted_space) # Prioritize bins with least wasted space
    return priority
