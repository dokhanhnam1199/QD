def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns bins a score based on the ratio of item size to remaining capacity, modulated by a penalty based on the absolute difference between them, effectively favouring bins that can almost perfectly fit the item.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            ratio = item / cap
            penalty = abs(cap - item)
            priority = ratio / (penalty + 0.01) # Add a small constant to avoid division by zero
        else:
            priority = -1000  # Penalize bins that cannot accommodate the item
        priorities.append(priority)
    return priority
