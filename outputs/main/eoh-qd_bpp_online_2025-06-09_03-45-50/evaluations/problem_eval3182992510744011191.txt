def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the waste (remaining capacity after placing the item) relative to bin size, penalized by how filled the bin already is.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fill_ratio = (cap - waste) / cap  # Calculate how full the bin is
      priority_score = (1 - (waste/1)) + fill_ratio # Normalize the waste
      priority.append(priority_score)
    else:
      priority.append(-1)
  return priority
