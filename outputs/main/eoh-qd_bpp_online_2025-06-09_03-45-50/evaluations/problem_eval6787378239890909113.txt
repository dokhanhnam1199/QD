def priority_v2(item, bins_remain_cap):
  """
  {This algorithm assigns priority based on a combination of remaining capacity and a penalty for exceeding a certain threshold, aiming to balance bin utilization and avoid near-full bins early on.}
  """
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = cap - item #remaining capacity after placement
      if cap - item < 0.1 * 1.0: #0.1 threshold
          priority -= 100 #penalty
    else:
      priority = -1000 #very low priority, makes it undesirable
    priorities.append(priority)
  return priority
