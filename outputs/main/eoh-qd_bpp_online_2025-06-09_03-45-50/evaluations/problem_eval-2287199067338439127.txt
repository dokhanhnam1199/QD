def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the ratio of item size to remaining capacity, penalizing bins that are either too full or have excessive capacity relative to the item.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            ratio = float(item) / cap
            priority.append(1 - abs(ratio - 0.7))  # Prefer bins where item fills around 70% of capacity
        else:
            priority.append(-1000)  # Very low priority if item doesn't fit
    return priority
