def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority score for each bin based on the wasted space ratio if the item were placed in that bin, favoring bins with the smallest wasted space relative to the item size, and applies a penalty for bins that cannot accommodate the item.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      wasted_ratio = wasted_space / item
      priority = -wasted_ratio  # Minimize wasted ratio
      priorities.append(priority)
    else:
      priorities.append(-float('inf'))  # Assign negative infinity if item doesn't fit
  return priority
