def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority scores to bins based on how well the item fits relative to the bin's capacity, favoring bins that are neither too tight nor too empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fit_ratio = item / cap
            priority.append(fit_ratio - abs(fit_ratio - 0.5))  # Prefer fit close to 50% utilization
        else:
            priority.append(-1e9)  # Penalize overfilling
    return priority
