def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates priority based on how close the item's size is to the remaining capacity of each bin, penalizing bins that are much larger or smaller than the item.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap < item:
            priority.append(-1)
        else:
            # Calculate the difference between the item size and remaining capacity
            diff = abs(cap - item)

            # Calculate a priority based on the inverse of the difference, with a scaling factor.
            # Smaller difference means higher priority.  Add a small constant to avoid division by zero.
            priority.append(1 / (diff + 0.001))  # Scale to avoid very small numbers
    return priority
