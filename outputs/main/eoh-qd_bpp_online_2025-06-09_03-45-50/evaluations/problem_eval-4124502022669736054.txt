def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the wasted space, penalizing both small and large wastes, while giving a bonus to bins utilized more fully.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority = -waste  # Minimize waste, so smaller waste is higher priority
      # Penalize bins with very little remaining capacity (high utilization)
      if waste < 0.1:
          priority += 5  # Bonus for almost full
      #Penalize bins with large remaining capacity (low utilization)
      if waste > 0.5:
          priority -= 2  # Penalty for more empty
      priorities.append(priority)
    else:
      priorities.append(-float('inf'))  # Assign negative infinity if item doesn't fit
  return priority
