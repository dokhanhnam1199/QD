def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority scores to bins based on a combination of how full the bin would be if the item was placed in it and penalizes bins with insufficient capacity.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / (cap + 1e-6) # Ratio of item size to bin capacity
            priority = fill_ratio # Prioritize filling the bin as much as possible
        else:
            priority = -1  # Assign a negative priority if the item doesn't fit

        priorities.append(priority)

    return priority
