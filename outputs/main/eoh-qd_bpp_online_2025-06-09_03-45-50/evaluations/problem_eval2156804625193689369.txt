def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates priority scores based on how much the bin capacity is filled by the item and the original bin capacity and favors bins that can accommodate the item with minimal remaining space, while penalizing those that cannot.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap < item:
            priority.append(-1)
        else:
            priority.append(item/cap)
    return priority
