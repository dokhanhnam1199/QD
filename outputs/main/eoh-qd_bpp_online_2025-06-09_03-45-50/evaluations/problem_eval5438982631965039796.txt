def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the remaining capacity and item size, favoring bins that are at least twice the item size and penalizing bins that cannot accommodate the item or are less than the item size.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            if cap >= 2 * item:
                priority = 1 / (cap - item + 0.1) # Favor bins with remaining capacity significantly larger than item
            else:
                priority = -1  # Slightly penalize bins with capacity close to item
        else:
            priority = -1000  # Penalize bins that cannot accommodate the item
        priorities.append(priority)
    return priority
