def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates priority scores based on the wasted space if the item is placed in the bin, penalizing bins with high wasted space relative to the item size.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority.append(1 - (wasted_space / item)) # Higher priority for less wasted space relative to item size.
        else:
            priority.append(-1)
    return priority
