def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the wasted space percentage relative to the item size, favoring bins where the wasted space is a small percentage of the item size, and penalizing bins where the item doesn't fit.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap < item:
      priority.append(-1)
    else:
      wasted_space = cap - item
      if item > 0:
        wasted_percentage = wasted_space / item
      else:
        wasted_percentage = 0
      priority.append(-wasted_percentage)
  return priority
