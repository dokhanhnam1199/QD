def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of remaining capacity and the fit of the item, favoring bins with sufficient space and a tighter fit.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority = (cap - item) + (1 / cap) # Remaining capacity + inverse remaining capacity.
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
