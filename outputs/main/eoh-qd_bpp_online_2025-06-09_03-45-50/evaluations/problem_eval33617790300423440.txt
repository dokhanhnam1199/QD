def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority score for each bin by considering the wasted space if the item is placed in the bin, penalizing bins with excessive wasted space relative to the item size.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      # Penalize bins with wasted space significantly larger than the item
      penalty = max(0, wasted_space / (item + 1e-9) - 0.5) # Reduce effect for waste smaller than half the item size.
      priority = 1.0 / (penalty + 0.001)
      priorities.append(priority)
    else:
      priorities.append(-1)  # Invalid bin if not enough capacity
  return priority
