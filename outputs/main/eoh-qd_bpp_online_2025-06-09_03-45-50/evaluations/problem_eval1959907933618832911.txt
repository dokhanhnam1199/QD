def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to bin capacity, penalized by how much of the item would overhang into a virtual bin if the bin capacity was less than the item size.}"""
  priorities = []
  for bin_cap in bins_remain_cap:
    if bin_cap >= item:
      priorities.append(item / bin_cap)
    else:
      overhang = item - bin_cap
      priorities.append(-(overhang / item)) # Negative priority for bins that cannot fit
  return priority
