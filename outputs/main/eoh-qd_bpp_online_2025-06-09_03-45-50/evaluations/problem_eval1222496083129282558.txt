def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the ratio of item size to remaining capacity, penalized by the bin utilization rate.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      utilization = item / cap  # Utilization rate if placed in this bin
      priority = (cap - item) - (utilization * 50) # Remaining capacity minus utilization penalty
    else:
      priority = -1000  # Very low priority for bins that can't fit the item
    priorities.append(priority)
  return priority
