def priority_v2(item, bins_remain_cap):
  """{This algorithm adjusts the weighting of fit and remaining capacity to prioritize fuller bins, aiming to reduce fragmentation.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fit_ratio = item / cap
      remaining_ratio = (cap - item) / cap

      # Prioritize fuller bins
      score = 0.9 * fit_ratio + 0.1 * (1 - remaining_ratio)

      priority.append(score)
    else:
      priority.append(-1)  # Invalid bin
  return priority
