def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins with remaining capacity closest to the item size while penalizing bins with very low capacity or excessive waste.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      capacity_ratio = float(item) / cap if cap > 0 else 0
      priority = (1 - abs(capacity_ratio - 1)) - (waste * 0.1) # Prioritize bins with capacity close to item size and penalize waste
      if cap < item * 1.1: # Give a slight boost if bin is just big enough
          priority += 0.05
    else:
      priority = -1
    priorities.append(priority)
  return priority
