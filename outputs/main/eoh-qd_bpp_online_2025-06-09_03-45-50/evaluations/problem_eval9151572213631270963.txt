def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin by considering the remaining capacity, favoring bins with capacity close to the item size and penalizing those that are too full or significantly larger than the item.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = 1 / (1 + abs(cap - item))
      priorities.append(priority)
    else:
      priorities.append(-1000)
  return priority
