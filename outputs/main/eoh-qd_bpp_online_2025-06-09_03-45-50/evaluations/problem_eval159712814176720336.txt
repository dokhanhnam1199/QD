def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority score to each bin based on the ratio of item size to the remaining capacity of the bin, penalizing bins that are either too full or too empty.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      priority = (item / capacity) - abs(1 - (item / capacity))
      priorities.append(priority)
    else:
      priorities.append(-1000)
  return priority
