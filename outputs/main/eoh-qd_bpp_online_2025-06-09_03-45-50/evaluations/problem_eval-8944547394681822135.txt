def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on how well the item fills the bin, penalized by a factor related to the overall bin capacity utilization.}"""
  priorities = []
  total_capacity = sum(bins_remain_cap)
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = item / cap
      capacity_utilization = cap / (total_capacity + 0.001) 
      priority = fill_ratio - (0.1 * capacity_utilization)
    else:
      priority = -1
    priorities.append(priority)
  return priority
