def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the remaining capacity and item size, favoring bins that have enough capacity and penalizing bins that are either too full or have almost the exact capacity.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority = -abs(cap - item) if abs(cap - item) > 0.1 else -10  # Penalize bins that have close to exact cap
        else:
            priority = -1000  # Penalize bins that cannot accommodate the item
        priorities.append(priority)
    return priority
