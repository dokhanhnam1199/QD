def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the remaining capacity, penalizing bins that would become overly full and rewarding bins close to half full.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = cap  # Base priority: current remaining capacity
      # Penalty for bins becoming too full
      if cap - item < 0.2:
        priority -= 5
      # Reward for bins becoming close to half-full
      if 0.4 <= cap - item <= 0.6:
        priority += 3
      priorities.append(priority)
    else:
      priorities.append(-float('inf'))
  return priority
