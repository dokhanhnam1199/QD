def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the ratio of item size to remaining capacity, adjusted by a penalty if the item almost fills the bin, favoring bins that are a good fit without excessive wasted space.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity >= item:
      ratio = item / capacity
      if capacity - item < 0.1:  # Penalty for almost filling the bin
        priority = ratio * 0.5 
      else:
        priority = ratio
    else:
      priority = -1000  # Very low priority if item doesn't fit
    priorities.append(priority)
  return priority
