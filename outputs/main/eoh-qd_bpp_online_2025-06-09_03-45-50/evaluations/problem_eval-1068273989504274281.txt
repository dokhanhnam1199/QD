def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on how closely the item size matches the bin's remaining capacity, favoring bins where the item fills a significant portion without overfilling.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = (item / cap) # Ratio of item size to remaining capacity
    else:
      priority = -1  # Item doesn't fit
    priorities.append(priority)
  return priority
