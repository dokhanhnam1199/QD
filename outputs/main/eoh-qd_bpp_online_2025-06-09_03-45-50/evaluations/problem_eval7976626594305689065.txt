def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by considering both the waste generated if the item is packed into the bin and a bonus for bins that are already relatively full.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fullness_bonus = (1 - (cap / (cap + item))) # A bonus for bins already somewhat full

      priorities.append(-waste + fullness_bonus)
    else:
      priorities.append(-float('inf'))
  return priority
