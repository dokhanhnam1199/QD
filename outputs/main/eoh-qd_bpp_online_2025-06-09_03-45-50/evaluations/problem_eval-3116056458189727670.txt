def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on the ratio of item size to remaining capacity, favoring bins where the item fills a significant portion of the available space, but penalizing bins where the item doesn't fit or fits very poorly.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            priority.append(fill_ratio - (cap - item) * 0.001)  # Reward high fill ratio, penalize wasted space
        else:
            priority.append(-1000)  # Very low priority if item doesn't fit

    return priority
