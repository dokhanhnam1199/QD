def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, combined with a penalty for small remaining capacities, favoring bins where the item fills a significant portion of the bin without leaving too little space.}"""
  priorities = []
  for bin_cap in bins_remain_cap:
    if bin_cap >= item:
      priority = (item / bin_cap) - (1 / (bin_cap - item + 0.0001)) if (bin_cap - item) > 0 else (item / bin_cap) - 1000
      priorities.append(priority)
    else:
      priorities.append(-1)
  return priority
