def priority_v3(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the ratio of remaining capacity to item size, favoring bins that fit the item snugly without being too full or too empty.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = cap / item  # Ratio of remaining capacity to item size

      # Adjust priority based on how well the item fits
      if cap - item < 0.2:  # Bin becomes almost full
        priority -= 2  # Penalize bins that become too full
      elif cap > 2 * item:  # Bin is relatively empty after placing the item
        priority -= 1 # Penalize bins that are too empty.
      
      priorities.append(priority)
    else:
      priorities.append(-float('inf'))  # Assign negative infinity if item doesn't fit
  return priority
