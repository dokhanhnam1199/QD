def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and a penalty for bins that are too full or too empty.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = cap - item  # Base priority: remaining space after packing
      # Add penalty for bins that are almost full or almost empty
      if cap - item < 0.1: # very full (remaining cap less than 10%)
          priority += 10
      if cap - item > 0.9: # almost empty
        priority -= 5
      priorities.append(priority)
    else:
      priorities.append(-float('inf'))  # Assign negative infinity if item doesn't fit
  return priority
