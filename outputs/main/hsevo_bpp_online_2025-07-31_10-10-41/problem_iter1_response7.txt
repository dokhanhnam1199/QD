```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin,
    inspired by a quantum-mechanical principle of seeking the 'lowest energy state'.

    Just as a quantum system tends towards a state of minimum energy,
    our item will seek a bin configuration that minimizes the 'energy'
    of wasted space. This heuristic, akin to a 'Best Fit' strategy,
    prioritizes bins that, upon receiving the item, will have the least
    remaining capacity. A perfect fit is the absolute ground state,
    yielding zero potential energy. Bins incapable of holding the item
    represent impenetrable potential barriers â€“ an infinitely high energy state.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        A higher score indicates a more desirable (lower 'energy') bin.
    """
    # Calculate the 'potential energy' of the remaining empty space in each bin
    # if the item were to be placed there.
    potential_wasted_space = bins_remain_cap - item

    # Initialize priorities for all bins to an extremely low value.
    # This represents an 'infinite energy' state for bins that cannot fit the item.
    priorities = np.full_like(bins_remain_cap, -np.inf)

    # Identify which bins can actually accommodate the item. These are our
    # 'accessible energy levels'.
    can_fit_mask = potential_wasted_space >= 0

    # For bins where the item can fit:
    # The 'energy' (wasted space) should be minimized. To turn this into a priority
    # (where higher is better), we take the negative of the wasted space.
    # A smaller `potential_wasted_space` (e.g., 0 for a perfect fit, or a small positive number)
    # will result in a larger (less negative, closer to zero) priority score.
    # A perfect fit (wasted_space = 0) gets the highest priority of 0.
    priorities[can_fit_mask] = -potential_wasted_space[can_fit_mask]

    return priorities
```
