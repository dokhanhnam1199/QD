```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Best Fit prioritizing minimal remaining space, with an absolute bonus for perfect fits.
    """
    if item <= 0:
        return -np.inf * np.ones_like(bins_remain_cap)

    remaining_after_placement = bins_remain_cap - item
    priorities = -np.inf * np.ones_like(bins_remain_cap)

    # Core Best Fit: Prioritize bins by minimizing remaining space
    # This means maximizing -remaining_after_placement for valid fits.
    fits_mask = remaining_after_placement >= 0
    priorities[fits_mask] = -remaining_after_placement[fits_mask]

    # Absolute Highest Priority: Ensure perfect fits are always chosen first.
    # This strongly encourages bin completion.
    perfect_fit_mask = (remaining_after_placement == 0)
    priorities[perfect_fit_mask] = np.inf

    return priorities
```
