```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on wasted space and fill level, with bias.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    wasted_space = bins_remain_cap - item
    fit_indices = wasted_space >= 0

    if np.any(fit_indices):
        # Prioritize smaller waste, but also consider fill level.
        priorities[fit_indices] = -(wasted_space[fit_indices]) + 0.01*(bins_remain_cap[fit_indices]/ np.max(bins_remain_cap))
    else:
        # If no bins fit, return the remaining capacities.
        return bins_remain_cap

    return priorities
```
