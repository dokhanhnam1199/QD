```python
import numpy as np
from typing import Optional

def priority_v2(
    item: float,
    bins_remain_cap: np.ndarray,
    epsilon: float = 0.0,
    temperature: float = 1.0,
    random_state: Optional[int] = None,
) -> np.ndarray:
    """Combine waste‑based score (-remaining) with ε‑greedy random component and temperature‑scaled softmax for balanced exploration/exploitation."""
    bins = np.asarray(bins_remain_cap, dtype=float)
    feasible = bins >= item
    if not np.any(feasible):
        return np.full_like(bins, -np.inf, dtype=float)
    rng = np.random.default_rng(random_state)
    deterministic = -(bins - item)
    random_scores = rng.random(bins.shape)
    mixed = (1.0 - epsilon) * deterministic + epsilon * random_scores
    mixed = np.where(feasible, mixed, -np.inf)
    temp = max(temperature, 1e-12)
    max_val = np.max(mixed[feasible])
    shifted = mixed - max_val
    exp_vals = np.exp(shifted / temp)
    exp_vals = np.where(feasible, exp_vals, 0.0)
    probs = exp_vals / exp_vals.sum()
    return probs
```
