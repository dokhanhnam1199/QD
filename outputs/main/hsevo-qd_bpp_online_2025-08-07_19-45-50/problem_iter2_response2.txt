```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, tau: float=1.0) -> np.ndarray:
    """Priority via negative slack with softmax; infeasible bins get zero priority."""
    scores = np.full(bins_remain_cap.shape, -np.inf, dtype=float)
    feasible = bins_remain_cap >= item
    if np.any(feasible):
        slack = bins_remain_cap[feasible] - item
        scores[feasible] = -slack
        scaled = scores / tau
        max_score = np.max(scaled[feasible])
        exp_vals = np.exp(scaled - max_score)
        return exp_vals / exp_vals.sum()
    return np.zeros_like(bins_remain_cap, dtype=float)
```
