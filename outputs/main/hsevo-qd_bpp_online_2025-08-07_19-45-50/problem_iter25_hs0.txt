import numpy as np

def priority_v2(item: float,
                bins_remain_cap: np.ndarray,
                invalid_penalty: float = -782762878782.3984,
                k: float = 14.912322397621185,
                valid_threshold: float = -7.311892953401058,
                target_ratio: float = 1.7220405112835095,
                max_priority: float = 0.32022894556244075,
                denominator_offset: float = 8.504391240989012) -> np.ndarray:
    caps = bins_remain_cap.astype(float)
    space_left = caps - item
    valid = space_left >= valid_threshold
    priorities = np.full_like(space_left, invalid_penalty, dtype=float)
    if np.any(valid):
        ratio = space_left[valid] / caps[valid]
        priorities[valid] = max_priority / (
            denominator_offset + np.exp(-k * (target_ratio - ratio))
        )
    return priorities
