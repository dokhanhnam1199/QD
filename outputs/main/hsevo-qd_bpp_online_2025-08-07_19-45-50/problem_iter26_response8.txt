```python
import numpy as np
from typing import Optional

def priority_v2(
    item: float,
    bins_remain_cap: np.ndarray,
    temperature: float = 1.0,
    epsilon: float = 0.0,
    random_state: Optional[int] = None,
) -> np.ndarray:
    """Waste‑based deterministic scores blended with ε‑greedy random, temperature‑scaled logits, and Gumbel noise."""
    caps = bins_remain_cap = bins_remain_cap.astype(float)
    feasible = caps >= item
    scores = np.full_like(caps, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    waste = caps[feasible] - item
    deterministic = -waste
    rng = np.random.default_rng(random_state)
    random_scores = rng.random(waste.shape)
    mixed = (1.0 - epsilon) * deterministic + epsilon * random_scores
    # temperature scales deterministic logits; lower temperature => more deterministic
    logits = mixed / max(temperature, 1e-12)
    # Gumbel perturbation for stochastic exploration
    u = rng.random(logits.shape)
    eps = 1e-9
    gumbel = -np.log(-np.log(u + eps) + eps)
    final = logits + gumbel
    scores[feasible] = final
    return scores
```
