```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray,
                epsilon: float = 0.1, temperature: float = 1.0) -> np.ndarray:
    """Softmax fit with epsilon-greedy exploration for online bin packing."""
    # Compute residual capacity and feasibility mask
    residual = bins_remain_cap - item
    feasible = residual >= 0
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)

    # Epsilonâ€‘greedy: random scores for feasible bins with probability epsilon
    if np.random.rand() < epsilon:
        rand_scores = np.random.rand(bins_remain_cap.shape[0])
        rand_scores[~feasible] = 0.0
        total = rand_scores.sum()
        return np.zeros_like(bins_remain_cap, dtype=float) if total == 0 else rand_scores / total

    # Deterministic softmax on negative waste (scaled by temperature)
    scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    scores[feasible] = -residual[feasible] / temperature
    max_score = scores[feasible].max()
    exp_scores = np.exp(scores - max_score)
    exp_scores[~feasible] = 0.0
    total = exp_scores.sum()
    return np.zeros_like(bins_remain_cap, dtype=float) if total == 0 else exp_scores / total
```
