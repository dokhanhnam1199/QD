```python
import numpy as np

_EPSILON = 0.05
_TEMPERATURE = 0.1
_RNG = np.random.default_rng()

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Softmax priority with epsilonâ€‘greedy exploration, stable and masked."""
    bins_remain_cap = np.asarray(bins_remain_cap, dtype=float)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap)
    if _RNG.random() < _EPSILON:
        probs = np.zeros_like(bins_remain_cap)
        probs[feasible] = 1.0 / feasible.sum()
        return probs
    residual = bins_remain_cap[feasible] - item
    temperature = max(_TEMPERATURE, 1e-12)
    logits = -residual / temperature
    max_logit = np.max(logits)
    exp_shifted = np.exp(logits - max_logit)
    softmax = exp_shifted / np.sum(exp_shifted)
    scores = np.zeros_like(bins_remain_cap)
    scores[feasible] = softmax
    return scores
```
