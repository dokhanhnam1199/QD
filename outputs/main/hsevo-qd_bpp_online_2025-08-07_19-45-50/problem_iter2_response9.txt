```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.0, seed: int | None = None) -> np.ndarray:
    """Prioritize bins: -waste for feasible bins, -inf otherwise; with ε chance assign random scores."""
    # Vectorized feasibility mask
    feasible = bins_remain_cap >= item
    rng = np.random.default_rng(seed)
    # ε‑greedy: random scores for feasible bins with probability ε
    if epsilon > 0.0 and rng.random() < epsilon:
        random_scores = rng.random(bins_remain_cap.shape)
        return np.where(feasible, random_scores, -np.inf)
    # Deterministic waste‑minimizing priority
    waste = bins_remain_cap - item
    return np.where(feasible, -waste, -np.inf)
```
