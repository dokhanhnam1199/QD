```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.0, temperature: float = 1.0) -> np.ndarray:
    """Epsilon‑greedy softmax: random scores with prob ε, else residual‑based softmax."""
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    if np.random.rand() < epsilon:
        rand_scores = np.random.rand(bins_remain_cap.shape[0])
        raw = np.where(feasible, rand_scores, -np.inf)
    else:
        residual = bins_remain_cap.astype(float) - item
        raw = np.where(feasible, -residual / max(temperature, 1e-12), -np.inf)
    max_raw = np.max(raw)
    exp_raw = np.exp(raw - max_raw)
    sum_exp = exp_raw.sum()
    return exp_raw / sum_exp if sum_exp > 0 else np.zeros_like(exp_raw)
```
