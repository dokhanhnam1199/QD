```python
import numpy as np

# Heuristic: logistic waste fit + epsilon exploration.
def priority_v2(item: float,
                bins_remain_cap: np.ndarray,
                epsilon: float = 0.0,
                rng: np.random.Generator = None,
                k: float = 12.0,
                temperature: float = 1.0) -> np.ndarray:
    """Combines logistic waste fit with epsilonâ€‘greedy exploration to prioritize bins."""
    if rng is None:
        rng = np.random.default_rng()
    caps = bins_remain_cap.astype(float)
    residual = caps - item
    valid = residual >= 0
    priorities = np.full_like(caps, -1e9, dtype=float)
    if np.any(valid):
        ratio = residual[valid] / caps[valid]
        logistic = 1.0 / (1.0 + np.exp(-k * (1.0 - ratio) / temperature))
        if epsilon > 0:
            random_scores = rng.random(np.count_nonzero(valid))
            priorities[valid] = (1.0 - epsilon) * logistic + epsilon * random_scores
        else:
            priorities[valid] = logistic
    return priorities
```
