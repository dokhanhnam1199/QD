```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, *, epsilon: float=0.1, temperature: float=1.0, seed: int|None=None) -> np.ndarray:
    """
    Assigns high priority to exact fits, otherwise negative waste, with optional epsilon-greedy randomization for exploration.
    """
    bins_remain_cap = np.asarray(bins_remain_cap, dtype=float)
    if bins_remain_cap.ndim != 1:
        raise ValueError("bins_remain_cap must be a 1-D array")
    if item < 0:
        raise ValueError("item must be non-negative")
    feasible = bins_remain_cap >= item
    exact = bins_remain_cap == item
    slack = bins_remain_cap - item
    rng = np.random.default_rng(seed)
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    if rng.random() < epsilon:
        priorities[feasible] = rng.random(size=feasible.sum())
    else:
        priorities[exact] = 1e12
        valid_not_exact = feasible & ~exact
        priorities[valid_not_exact] = -slack[valid_not_exact] / temperature
    return priorities
```
