```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.0, temperature: float = 1.0, rng: np.random.Generator = None) -> np.ndarray:
    if rng is None:
        rng = np.random.default_rng()
    residual = bins_remain_cap - item
    mask = residual >= 0
    if not np.any(mask):
        return np.zeros_like(bins_remain_cap, dtype=float)
    if epsilon > 0 and rng.random() < epsilon:
        logits = rng.random(bins_remain_cap.shape[0])
        logits[~mask] = -np.inf
    else:
        logits = np.full_like(bins_remain_cap, -np.inf, dtype=float)
        logits[mask] = -residual[mask] + rng.gumbel(size=mask.sum())
    if temperature != 1.0:
        logits[mask] = logits[mask] / temperature
    max_logit = np.max(logits[mask])
    exp_vals = np.exp(logits - max_logit)
    exp_vals[~mask] = 0.0
    total = exp_vals.sum()
    if total > 0:
        return exp_vals / total
    return np.zeros_like(bins_remain_cap, dtype=float)
```
