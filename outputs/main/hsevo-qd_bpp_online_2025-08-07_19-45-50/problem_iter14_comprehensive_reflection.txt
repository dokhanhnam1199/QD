
- **Keywords:** type safety, RNG flexibility, stable softmax, explicit ε, infeasibility mask, full distribution, thorough docs  
- **Advice:** inject a seeded RNG, compute softmax via log‑sum‑exp, add ε to scores, mask infeasible bins before normalizing, guarantee every branch returns a normalized probability vector, annotate types and docstrings  
- **Avoid:** deterministic‑only heuristics, skipping softmax, optional ε, missing docs, absent type hints, raw ‑inf scores, duplicated logic, branches that drop probability mass, ambiguous RNG  
- **Explanation:** these practices ensure numerical stability, reproducible stochastic exploration, safe handling of infeasible choices, and maintainable code that always yields a valid probability distribution.