```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, tau: float = 1.0, epsilon: float = 0.0) -> np.ndarray:
    """Softmax of negative slack with temperature and optional epsilonâ€‘greedy exploration."""
    feasible = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    if np.any(feasible):
        slack = bins_remain_cap[feasible] - item
        idx = np.nonzero(feasible)[0]
        priorities[idx] = -slack
        exact_idx = idx[slack == 0]
        priorities[exact_idx] = 1e12
        if tau > 0:
            priorities[idx] = priorities[idx] / tau
        if epsilon > 0 and np.random.rand() < epsilon:
            priorities[idx] = np.random.rand(len(idx))
        else:
            max_val = np.max(priorities[idx])
            exp_vals = np.exp(priorities[idx] - max_val)
            probs = exp_vals / np.sum(exp_vals)
            priorities[idx] = probs
    return priorities
```
