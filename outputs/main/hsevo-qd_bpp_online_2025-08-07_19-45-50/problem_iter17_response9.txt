```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.1, temperature: float = 1.0) -> np.ndarray:
    """Exact‑fit scoring with ε‑exploration, temperature‑scaled softmax to prioritize bins."""
    feasible = bins_remain_cap >= item
    waste = bins_remain_cap - item
    deterministic = -waste
    random_scores = np.random.rand(bins_remain_cap.shape[0])
    if np.random.rand() < epsilon:
        scores = np.where(feasible, random_scores, -np.inf)
    else:
        scores = np.where(feasible, deterministic, -np.inf)
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    max_score = np.max(scores[feasible])
    exp_scores = np.exp((scores - max_score) / temperature)
    exp_scores[~feasible] = 0.0
    total = np.sum(exp_scores)
    return exp_scores / total if total > 0 else np.zeros_like(exp_scores, dtype=float)
```
