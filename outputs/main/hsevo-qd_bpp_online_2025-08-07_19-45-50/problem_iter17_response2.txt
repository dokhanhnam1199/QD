```python
import numpy as np
from typing import Optional

def priority_v2(item: float, bins_remain_cap: np.ndarray,
                epsilon: float = 0.1,
                temperature: float = 0.1,
                random_state: Optional[int] = None) -> np.ndarray:
    """Temperature‑scaled softmax of waste with optional ε‑exploration."""
    bins = np.asarray(bins_remain_cap, dtype=float)
    feasible = bins >= item
    if not np.any(feasible):
        return np.zeros_like(bins, dtype=float)
    rng = np.random.default_rng(random_state)
    if rng.random() < epsilon:
        logits = np.where(feasible, rng.random(bins.shape), -np.inf)
    else:
        residual = bins - item
        temp = max(temperature, 1e-12)
        logits = np.where(feasible, -residual / temp, -np.inf)
    max_logit = np.max(logits[feasible])
    exp_shifted = np.exp(logits - max_logit)
    probs = exp_shifted / exp_shifted.sum()
    return probs
```
