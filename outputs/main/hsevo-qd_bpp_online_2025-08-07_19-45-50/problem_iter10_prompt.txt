{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(\n    item: float,\n    bins_remain_cap: np.ndarray,\n    # Softmax with temperature and optional epsilon\u2011greedy exploration for online BPP.\n    tau: float = 0.5,\n    epsilon: float = 0.0,\n    rng: np.random.Generator = None,\n) -> np.ndarray:\n    \"\"\"Softmax with temperature and optional epsilon\u2011greedy exploration for online BPP.\"\"\"\n    if rng is None:\n        rng = np.random.default_rng()\n    scores = np.zeros_like(bins_remain_cap, dtype=float)\n    feasible = bins_remain_cap >= item\n    if not feasible.any():\n        return scores\n    if epsilon > 0.0 and rng.random() < epsilon:\n        rand_vals = rng.random(feasible.sum())\n        probs = rand_vals / rand_vals.sum()\n        scores[feasible] = probs\n    else:\n        slack = bins_remain_cap[feasible] - item\n        raw = -slack / tau\n        max_raw = np.max(raw)\n        exp_vals = np.exp(raw - max_raw)\n        probs = exp_vals / exp_vals.sum()\n        scores[feasible] = probs\n    return scores\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}