```python
import numpy as np

def priority_v2(item: float,
                bins_remain_cap: np.ndarray,
                epsilon: float = 0.1,
                tau: float = 0.5,
                rng: np.random.Generator = None) -> np.ndarray:
    """Softmax over negative residual capacity with ε‑greedy random‐score exploration."""
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    if rng is None:
        rng = np.random.default_rng()
    if rng.random() < epsilon:
        raw = np.where(feasible, rng.random(bins_remain_cap.shape), -np.inf)
    else:
        residual = bins_remain_cap.astype(float) - item
        raw = np.where(feasible, -residual / max(tau, 1e-12), -np.inf)
    max_raw = np.max(raw)
    exp_raw = np.exp(raw - max_raw)
    sum_exp = np.sum(exp_raw)
    return exp_raw / sum_exp if sum_exp > 0 else np.zeros_like(exp_raw, dtype=float)
```
