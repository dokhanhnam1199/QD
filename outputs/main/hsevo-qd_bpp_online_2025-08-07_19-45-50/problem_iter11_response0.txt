```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.0, temperature: float = 1.0, rng: np.random.Generator = None) -> np.ndarray:
    if rng is None:
        rng = np.random.default_rng()
    feasible = bins_remain_cap >= item
    if rng.random() < epsilon:
        scores = np.where(feasible, rng.random(bins_remain_cap.shape), -np.inf)
    else:
        scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
        exact = bins_remain_cap == item
        scores[exact] = 1e12
        non_exact = feasible & ~exact
        slack = bins_remain_cap[non_exact] - item
        scores[non_exact] = -slack
    if temperature != 1.0:
        scores = scores / temperature
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    max_score = np.max(scores[feasible])
    exp_scores = np.exp(scores - max_score) * feasible
    total = np.sum(exp_scores)
    if total == 0:
        return np.zeros_like(bins_remain_cap, dtype=float)
    return exp_scores / total
```
