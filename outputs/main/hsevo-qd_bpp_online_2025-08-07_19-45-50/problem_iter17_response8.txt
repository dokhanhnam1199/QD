```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, tau: float = 0.1, epsilon: float = 0.05) -> np.ndarray:
    """Softmax over feasible bins with exact-fit boost and epsilonâ€‘greedy exploration."""
    caps = np.asarray(bins_remain_cap, dtype=float)
    feasible = caps >= item
    if not np.any(feasible):
        return np.zeros_like(caps)
    slack = caps[feasible] - item
    idx = np.nonzero(feasible)[0]
    scores = np.full_like(caps, -np.inf, dtype=float)
    scores[idx] = -slack
    exact_mask = slack == 0
    if np.any(exact_mask):
        scores[idx[exact_mask]] = 1e12
    if epsilon > 0 and np.random.rand() < epsilon:
        rand_vals = np.random.rand(len(idx))
        scores[idx] = rand_vals / rand_vals.sum()
    else:
        if tau <= 0:
            tau = 1e-12
        scaled = scores[idx] / tau
        max_val = np.max(scaled)
        exp_vals = np.exp(scaled - max_val)
        probs = exp_vals / exp_vals.sum()
        scores[idx] = probs
    return scores
```
