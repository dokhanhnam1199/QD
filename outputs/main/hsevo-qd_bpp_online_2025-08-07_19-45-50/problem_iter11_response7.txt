```python
import numpy as np
from typing import Optional

def priority_v2(
    item: float,
    bins_remain_cap: np.ndarray,
    temperature: float = 1.0,
    epsilon: float = 0.0,
    rng: Optional[np.random.Generator] = None,
) -> np.ndarray:
    """Softmax over negative waste with temperature scaling and epsilonâ€‘greedy exploration; masks infeasible bins."""
    if rng is None:
        rng = np.random.default_rng()
    residual = bins_remain_cap - item
    feasible = residual >= 0
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    if epsilon > 0.0 and rng.random() < epsilon:
        scores = np.zeros_like(bins_remain_cap, dtype=float)
        rand_vals = rng.random(feasible.sum())
        scores[feasible] = rand_vals
        total = scores.sum()
        return scores / total
    temp = max(temperature, 1e-12)
    logits = -residual / temp
    logits[~feasible] = -np.inf
    max_logit = np.max(logits[feasible])
    exp_vals = np.exp(logits - max_logit)
    exp_vals[~feasible] = 0.0
    total = exp_vals.sum()
    return exp_vals / total if total > 0 else np.zeros_like(bins_remain_cap, dtype=float)
```
