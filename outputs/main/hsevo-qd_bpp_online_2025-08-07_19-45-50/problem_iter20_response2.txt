```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, *, epsilon=0.1, k=12.0, temperature=1.0, seed=None):
    """Priority scores using waste‑minimizing logistic transform blended with ε‑weighted random exploration and temperature scaling."""
    rng = np.random.default_rng(seed)
    feasible = bins_remain_cap >= item
    if not feasible.any():
        return np.full_like(bins_remain_cap, -np.inf, dtype=float)
    waste = bins_remain_cap - item
    ratio = np.where(feasible, np.where(bins_remain_cap > 0, waste / bins_remain_cap, 0.0), 0.0)
    logistic_score = np.where(feasible, 1.0/(1.0+np.exp(-k*(1.0 - ratio))), -np.inf)
    random_score = np.where(feasible, rng.random(bins_remain_cap.shape), -np.inf)
    combined = (1-epsilon)*logistic_score + epsilon*random_score
    return combined/temperature
```
