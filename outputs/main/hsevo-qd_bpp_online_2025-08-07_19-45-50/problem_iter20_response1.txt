```python
import numpy as np
from typing import Optional

# Priority function for online bin packing: waste + rank + ε‑weighted random.
def priority_v2(item: float,
                bins_remain_cap: np.ndarray,
                *,
                temperature: float = 1.0,
                epsilon: float = 0.0,
                rank_power: float = 1.0,
                rng: Optional[np.random.Generator] = None) -> np.ndarray:
    """Combine waste, rank weight, and ε‑weighted random perturbation; temperature scales waste."""
    if rng is None:
        rng = np.random.default_rng()
    bins = np.asarray(bins_remain_cap, dtype=float)
    residual = bins - item
    feasible = residual >= 0
    scores = np.full_like(bins, -np.inf, dtype=float)
    if not np.any(feasible):
        return scores
    waste = -residual[feasible] / max(temperature, 1e-12)
    feas_res = residual[feasible]
    sorted_idx = np.argsort(feas_res)
    rank = np.empty_like(feas_res, dtype=int)
    rank[sorted_idx] = np.arange(len(feas_res))
    num_feas = len(feas_res)
    rank_weight = (num_feas - rank) ** rank_power
    deterministic = waste + np.log(rank_weight + 1e-12)
    if epsilon > 0.0:
        rand = rng.random(num_feas)
        deterministic = (1 - epsilon) * deterministic + epsilon * rand
    scores[feasible] = deterministic
    return scores
```
