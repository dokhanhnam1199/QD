```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float=0.1, temperature: float=0.5) -> np.ndarray:
    """Softmax over waste with epsilonâ€‘greedy exploration and infeasibility masking."""
    bins_remain_cap = np.asarray(bins_remain_cap, dtype=float)
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    if epsilon > 0.0 and np.random.rand() < epsilon:
        probs = np.zeros_like(bins_remain_cap, dtype=float)
        probs[feasible] = 1.0 / feasible.sum()
        return probs
    residual = bins_remain_cap[feasible] - item
    logits = -residual / max(temperature, 1e-12)
    max_logit = np.max(logits)
    exp_shifted = np.exp(logits - max_logit)
    probs_feasible = exp_shifted / np.sum(exp_shifted)
    probs = np.zeros_like(bins_remain_cap, dtype=float)
    probs[feasible] = probs_feasible
    return probs
```
