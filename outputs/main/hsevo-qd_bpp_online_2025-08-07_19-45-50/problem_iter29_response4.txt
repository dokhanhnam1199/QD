```python
import numpy as np
from typing import Optional

def priority_v2(item: float,
                bins_remain_cap: np.ndarray,
                epsilon: float = 0.0,
                temperature: float = 1.0,
                random_state: Optional[int] = None) -> np.ndarray:
    """Mixture of negative waste and random scores with temperature; returns selection probabilities."""
    caps = np.asarray(bins_remain_cap, dtype=float)
    feasible = caps >= item
    if not np.any(feasible):
        return np.zeros_like(caps, dtype=float)
    waste = caps - item
    deterministic = -waste
    rng = np.random_state if random_state is not None else np.random.default_rng()
    rng = np.random.default_rng(random_state)
    random_scores = rng.random(caps.shape[0])
    scores = (1.0 - epsilon) * deterministic + epsilon * random_scores
    scores[~feasible] = -np.inf
    temp = max(temperature, 1e-12)
    scores = scores / temp
    max_score = np.max(scores[feasible])
    exp_scores = np.exp(scores - max_score)
    exp_scores[~feasible] = 0.0
    prob = exp_scores / exp_scores.sum()
    return prob
```
