```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.01) -> np.ndarray:
    """Exact-fit-first priority with optional epsilon-greedy exploration."""
    # Feasibility mask and deterministic priority (negative waste)
    feasible = bins_remain_cap >= item
    deterministic = np.where(feasible, -(bins_remain_cap - item), -np.inf)
    # With probability epsilon, use random scores for feasible bins
    if np.random.rand() < epsilon:
        random_scores = np.random.rand(bins := bins_remain_cap.shape[0])
        return np.where(feasible, random_scores, -np.inf)
    return deterministic
```
