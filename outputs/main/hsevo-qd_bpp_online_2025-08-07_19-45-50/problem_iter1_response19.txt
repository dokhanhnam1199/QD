```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns softmax-based priority for placing an item into each bin."""
    feasible = bins_remain_cap >= item
    if not np.any(feasible):
        return np.zeros_like(bins_remain_cap, dtype=float)
    caps = bins_remain_cap.astype(float)
    residual = caps - item
    raw_scores = np.where(feasible, -residual, -np.inf)
    max_score = raw_scores.max()
    exp_scores = np.exp(raw_scores - max_score)
    sum_exp = exp_scores.sum()
    priorities = exp_scores / sum_exp if sum_exp > 0 else np.zeros_like(exp_scores)
    return priorities
```
