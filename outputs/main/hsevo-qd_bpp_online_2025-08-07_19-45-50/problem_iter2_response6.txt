```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.0, rng: np.random.Generator | None = None) -> np.ndarray:
    """Compute negative waste for feasible bins and add optional random noise (ε) for tie‑breaking."""
    if rng is None:
        rng = np.random.default_rng()
    feasible = bins_remain_cap >= item
    waste = bins_remain_cap - item
    priorities = np.where(feasible, -waste, -np.inf)
    if epsilon > 0.0:
        noise = rng.random(feasible.sum())
        priorities[feasible] += epsilon * noise
    return priorities
```
