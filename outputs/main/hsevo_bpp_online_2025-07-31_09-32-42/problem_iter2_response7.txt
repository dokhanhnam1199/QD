```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority for online bin packing, strongly favoring tight fits with robust invalid bin handling.

    This heuristic uses a non-linear reciprocal function for valid fits to prioritize
    tighter placements, and sets an unequivocally low priority for bins where
    the item cannot fit, ensuring robust selection.
    """
    # Initialize all priority scores to a very low value (negative infinity).
    # This ensures bins where the item does not fit are never selected,
    # making the choice clear for numpy.argmax.
    priority_scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Calculate the remaining capacity for each bin if the item were placed in it.
    # A negative value here means the item does not fit.
    potential_remaining_capacity = bins_remain_cap - item

    # Create a boolean mask to identify bins where the item can actually fit.
    can_fit_mask = potential_remaining_capacity >= 0

    # For bins where the item can fit, calculate their priority.
    # We want to minimize the remaining capacity (potential_remaining_capacity).
    # The reciprocal (1.0 / x) function provides a strong non-linear preference
    # for smaller x (less remaining capacity).
    # Add a small epsilon to the denominator for numerical stability and to ensure
    # perfect fits (where potential_remaining_capacity is 0) receive a very high,
    # but finite, priority score (1.0 / epsilon).
    epsilon = np.finfo(float).eps  # A very small positive floating-point number

    # Apply the reciprocal scoring to only the bins where the item fits.
    # A perfect fit (0 remaining) will result in a score of 1.0 / epsilon, which is very high.
    # Bins with slightly more remaining capacity will get progressively lower scores,
    # but still higher than non-fitting bins.
    priorities_for_fitting_bins = 1.0 / (potential_remaining_capacity[can_fit_mask] + epsilon)
    priority_scores[can_fit_mask] = priorities_for_fitting_bins

    return priority_scores
```
