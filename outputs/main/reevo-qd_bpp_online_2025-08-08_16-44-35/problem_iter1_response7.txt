```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.

    Random Fit assigns a random priority to each bin that can fit the item.
    Bins that cannot fit the item are assigned a priority of 0.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Identify bins that can accommodate the item
    can_fit_mask = bins_remain_cap >= item
    
    # Assign random priorities to bins that can fit the item
    # We use a uniform distribution for randomness. The range can be adjusted.
    # Adding 1 to ensure non-zero priorities for bins that can fit.
    valid_bins_indices = np.where(can_fit_mask)[0]
    if len(valid_bins_indices) > 0:
        priorities[valid_bins_indices] = np.random.rand(len(valid_bins_indices))
        
    return priorities
```
