```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit.

    The Worst Fit strategy aims to place the current item into the bin that has
    the most remaining capacity. This heuristic tries to leave smaller bins
    available for future smaller items, potentially reducing the number of
    bins needed overall.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        Bins that cannot fit the item are given a priority of 0.
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    # Only consider bins that can fit the current item
    can_fit_mask = bins_remain_cap >= item
    
    # For bins that can fit the item, the priority is their remaining capacity.
    # Higher remaining capacity means higher priority in Worst Fit.
    priorities[can_fit_mask] = bins_remain_cap[can_fit_mask]
    
    return priorities
```
