```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Inverse Distance (Proximity Fit).

    The priority is higher for bins that have a remaining capacity closer to the item's size.
    Specifically, it calculates 1 / (1 + abs(bins_remain_cap - item)), where a smaller
    difference between bin capacity and item size results in a higher priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the item size and each bin's remaining capacity
    diff = np.abs(bins_remain_cap - item)

    # Calculate the inverse of (1 + difference). Adding 1 prevents division by zero
    # and ensures that a difference of 0 results in a priority of 1.
    # Larger differences will result in smaller priority scores.
    priorities = 1 / (1 + diff)

    return priorities
```
