```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # Prioritize bins where the item fits
            waste = cap - item
            priorities[i] = (1 / (waste + 1e-6))  # Smaller waste, higher priority

            # Bonus for almost full bins
            if waste < 0.1:  # Adjust threshold as needed
                priorities[i] += 10  # Adjust bonus as needed

        else:
            # Very low priority if the item doesn't fit
            priorities[i] = -1e6
    return priorities
```
