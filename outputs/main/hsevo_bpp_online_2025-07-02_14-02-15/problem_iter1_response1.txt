```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This function considers several factors:
    1. Space utilization: How much space will be occupied in the bin after adding the item.
    2. Waste minimization: Penalizes bins where adding the item will lead to a small remaining capacity.
    3. First Fit improvement: Prioritizes bins that can fit the item snugly.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Calculate remaining capacity after adding the item.
    remaining_after_add = bins_remain_cap - item

    # Assign a large negative priority to bins that can't fit the item
    priorities[remaining_after_add < 0] = -np.inf

    # Calculate a score based on space utilization (higher utilization is better)
    utilization_score = (bins_remain_cap - remaining_after_add) / bins_remain_cap
    utilization_score[remaining_after_add < 0] = 0 # Ignore those that cannot fit
    priorities[remaining_after_add >= 0] += utilization_score[remaining_after_add >= 0]


    # Penalize bins that will have very little remaining capacity (waste minimization)
    waste_penalty = np.exp(-10 * remaining_after_add)  # Higher penalty for smaller remainders
    waste_penalty[remaining_after_add < 0] = 0
    priorities -= waste_penalty # Subtraction represents penalty.

    # Reward bins that fit the item snugly
    snug_fit_reward = np.exp(-5 * np.abs(remaining_after_add - (item * 0.1)))  # Peaks around 10% of item size

    snug_fit_reward[remaining_after_add < 0] = 0 # cannot fit.
    priorities += snug_fit_reward

    # Bins with exactly equal remaining capacity, the smaller the better to fill.
    priorities[remaining_after_add == 0] += 2 # extra rewards.

    return priorities
```
