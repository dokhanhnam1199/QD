```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization with fragmentation penalty."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit_mask = bins_remain_cap >= item
    if not np.any(fit_mask):
        return priorities - np.inf  # No valid bin, strongly discourage

    waste = bins_remain_cap[fit_mask] - item
    priorities[fit_mask] = 1.0 / (waste + 0.0001)

    wasted_space_ratio = waste / bins_remain_cap[fit_mask]
    nearly_full = wasted_space_ratio < 0.1
    priorities[fit_mask][nearly_full] -= 0.5

    return priorities
```
