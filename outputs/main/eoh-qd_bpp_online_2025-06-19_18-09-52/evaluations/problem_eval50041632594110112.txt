def priority_v2(item, bins_remain_cap):
    """
    {This algorithm calculates a priority score for each bin based on a combination of remaining capacity and wasted space, prioritizing bins with sufficient capacity and less wasted space after packing the item.}
    """
    priorities = []
    for remain_cap in bins_remain_cap:
        if remain_cap >= item:
            wasted_space = remain_cap - item
            priority = remain_cap + (1.0 / (wasted_space + 0.0001))
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
