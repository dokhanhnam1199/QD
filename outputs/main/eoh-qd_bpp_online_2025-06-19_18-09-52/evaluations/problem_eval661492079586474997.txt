def priority_v2(item, bins_remain_cap):
  """
  {This algorithm calculates a priority score for each bin based on remaining capacity, penalizing bins with very little remaining capacity and favoring those that fit the item best.}
  """
  priority = []
  for cap in bins_remain_cap:
    if cap < item:
      priority.append(-1)  # Item doesn't fit
    else:
      # Higher score for closer fit, penalized by low remaining cap
      priority.append((cap - item) * (1 / (cap + 1e-9))) # 1e-9 for numerical stability
  return priority
