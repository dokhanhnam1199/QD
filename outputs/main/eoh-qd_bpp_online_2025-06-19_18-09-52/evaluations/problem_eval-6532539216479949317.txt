def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority score to each bin based on a combination of remaining capacity and the fill percentage achieved if the item were placed in that bin, favoring bins that would be filled more completely without exceeding capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_percentage = item / (cap)
      priority.append(fill_percentage + (cap - item) / sum(bins_remain_cap))
    else:
      priority.append(-1) 
  return priority
