def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on how well the item fits, favoring bins that are not too full but also not too empty after packing the item.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = (cap - item) / 100 if (cap-item) <100 else 1
            priority = (1 - fill_ratio) * (1/len(bins_remain_cap)) + 1/cap
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
