def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the remaining capacity and item size, favoring bins where the item fits best and avoiding excessive fragmentation.}"""
    priority = []
    for cap in bins_remain_cap:
        if item <= cap:
            priority.append(cap - item)
        else:
            priority.append(-1)
    return priority
