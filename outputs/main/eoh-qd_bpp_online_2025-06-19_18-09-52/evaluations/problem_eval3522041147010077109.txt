def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and wasted space if the item is placed in the bin, favoring bins with closer remaining capacity to the item size and penalizing bins with large wasted space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority_score = (item / cap) - (wasted_space / sum(bins_remain_cap))  # Ratio of item size to bin capacity, penalized by wasted space relative to total capacity
            priority.append(priority_score)
        else:
            priority.append(-1)  # Assign a very low priority if the item doesn't fit
    return priority
