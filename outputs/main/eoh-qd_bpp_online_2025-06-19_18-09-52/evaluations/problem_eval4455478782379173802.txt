def priority_v2(item, bins_remain_cap):
  """
  {This algorithm calculates the priority score for each bin based on the remaining capacity and the item size, favoring bins that can accommodate the item with minimal wasted space and penalizing bins that cannot fit the item.}
  """
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(1.0 / (cap - item + 0.000001)) 
    else:
      priority.append(-1000000)
  return priority
