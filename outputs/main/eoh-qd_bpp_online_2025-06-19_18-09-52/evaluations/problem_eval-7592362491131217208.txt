def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority based on the remaining capacity of each bin, prioritizing bins that can accommodate the item with minimal wasted space and penalizing bins that cannot fit the item.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priorities.append(1 / (cap - item + 1e-9))  # Prioritize smaller waste
    else:
      priorities.append(-1e9)  # Heavily penalize bins that can't fit
  return priority
