{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Calculate bin priorities considering waste, capacity, and fit.\"\"\"\n\n    eligible_bins = bins_remain_cap >= item\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n\n    if np.any(eligible_bins):\n        waste = bins_remain_cap - item\n        waste[~eligible_bins] = np.inf\n        priorities[eligible_bins] = -np.abs(waste[eligible_bins])\n\n        priorities[eligible_bins] += bins_remain_cap[eligible_bins] / np.max(bins_remain_cap)\n        \n        fit_ratios = item / bins_remain_cap\n        scaled_fit = (1 - np.clip(fit_ratios, 0, 1)) ** (1/3)\n        priorities[eligible_bins] += scaled_fit[eligible_bins]\n        \n        priorities[eligible_bins] += 0.001\n\n    else:\n        priorities[:] = -1e9\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}