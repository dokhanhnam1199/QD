```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This version prioritizes bins that are a close fit to the item, but also
    introduces a "bin utilization" factor to encourage filling bins completely
    and a penalty for bins that are nearly full but can't fit the current item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    bins_remain_cap = np.array(bins_remain_cap)
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Identify bins that can accommodate the item
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        # If no bin can fit the item, return all zeros. Alternatively, we could return
        # a non-zero priority for the least-full bin, indicating a willingness to start a new bin.
        return priorities

    feasible_capacities = bins_remain_cap[feasible_bins]

    # Proximity factor: Favor bins with remaining capacity close to the item size
    proximity = np.exp(-np.abs(feasible_capacities - item) / item)

    # Bin utilization factor: Encourage filling bins as much as possible.
    # A bin with capacity close to the item size gets a higher bonus.
    utilization = 1 - (feasible_capacities - item) / np.max(bins_remain_cap)

    # Combine factors:
    priorities[feasible_bins] = proximity * utilization

    # Penalty for almost-full bins that can't fit the item
    # This is designed to discourage leaving tiny gaps in bins.  We apply a penalty
    # only when feasible_bins are not all true (i.e. there's at least one bin that can't hold the item)
    if np.any(~feasible_bins):
        almost_full_bins = (bins_remain_cap < item) & (bins_remain_cap > 0.8 * item)  # e.g., at least 80% full
        priorities[almost_full_bins] = -0.1  # Assign a small negative priority

    return priorities
```
