```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill ratio and remaining space."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fits = bins_remain_cap >= item

    if np.any(fits):
        remaining_space = bins_remain_cap[fits] - item
        # Fill ratio + inverse of remaining space.
        priorities[fits] = (item / bins_remain_cap[fits]) + (1 / (1 + remaining_space))
        #nearly_full = remaining_space < 0.1 #removed
        #priorities[fits][nearly_full] *= 0.9
    else:
        priorities = -bins_remain_cap #assign to lower negative
        priorities = priorities - np.min(priorities) + 1e-9 #shift to non-negative

    return priorities
```
