```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculate bin priorities, combining fill ratio, perfect fit, and fragmentation avoidance."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    for i, remaining_capacity in enumerate(bins_remain_cap):
        if remaining_capacity >= item:
            # Fill ratio: how much space is used.
            fill_ratio = item / remaining_capacity
            priorities[i] += fill_ratio

            # Perfect fit bonus.
            if abs(remaining_capacity - item) < 1e-6:
                priorities[i] += 1.0

            # Fragmentation avoidance: penalize bins where a large gap remains.
            else:
                priorities[i] += 1.0 / (remaining_capacity - item)

        else:
            priorities[i] = -np.inf

    return priorities
```
