```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    This version prioritizes bins that can accommodate the item with minimal remaining space,
    but also discourages bins that are too close to full after packing the item. It also introduces
    a scaling factor based on the item size itself, encouraging better utilization for larger items.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)

    # Calculate remaining capacity after adding the item
    remaining_after_add = bins_remain_cap - item

    # Identify bins that can accommodate the item
    valid_bins = remaining_after_add >= 0

    if np.any(valid_bins):
        # Calculate the fill ratio (how full the bin would be after adding the item)
        fill_ratio = (bins_remain_cap[valid_bins] - remaining_after_add[valid_bins]) / bins_remain_cap[valid_bins]

        # Base priority is inverse of remaining capacity: prefer bins that fit tightly.  Apply some transformations to help numerical stability and sensitivity.
        # Added small constant to avoid div by zero when bins_remain_cap equals the item.
        base_priority = 1.0 / (remaining_after_add[valid_bins] + 0.001)

        # Slightly discourages packing to bins close to full by adding some non-linearity
        # the penalty factor goes towards -inf when fill_ratio is 1 and converges to 0
        # when it is close to zero.
        penalty_factor = -np.log(1.001-fill_ratio)

        # Scale priority based on item size and fill_ratio, large item encourages full usage.
        item_size_scale = item

        priorities[valid_bins] = base_priority + penalty_factor * item_size_scale

    # Penalize bins that cannot accommodate the item (less important now, since it's default 0, but better to be explicit).
    priorities[~valid_bins] = -np.inf
    return priorities
```
