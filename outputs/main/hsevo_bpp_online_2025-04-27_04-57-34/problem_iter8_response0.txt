```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculate bin priorities considering waste, utilization, and best-fit."""
    eligible_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    if np.any(eligible_bins):
        waste = bins_remain_cap[eligible_bins] - item
        priorities[eligible_bins] = -waste

        capacity_ratio = item / bins_remain_cap[eligible_bins]
        priorities[eligible_bins] += np.clip(capacity_ratio, 0, 1)

        best_fit_threshold = 0.1 * item
        best_fit_bonus = np.where(waste <= best_fit_threshold, 0.5, 0.0)
        priorities[eligible_bins] += best_fit_bonus
    else:
        priorities[:] = -1e9

    return priorities
```
