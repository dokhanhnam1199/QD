```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates priority for bins, balancing fill ratio & remaining capacity."""

    potential_bins = bins_remain_cap >= item
    if not np.any(potential_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf
    
    # Scale waste relative to item size, giving larger items precedence
    waste_normalized = waste / item

    fill_ratio = (bins_remain_cap - waste) / bins_remain_cap

    # Combine fill ratio and waste, with slight preference for fill
    priorities = np.where(potential_bins, (0.6 * fill_ratio) - (0.4 * waste_normalized), -np.inf)

    return priorities
```
