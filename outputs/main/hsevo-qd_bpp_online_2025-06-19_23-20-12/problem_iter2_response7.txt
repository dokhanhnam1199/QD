```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio and waste to prioritize bins."""
    potential_bins = bins_remain_cap >= item
    if not np.any(potential_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf
    waste_normalized = waste / np.max(bins_remain_cap)

    fill_ratio = (bins_remain_cap - waste) / bins_remain_cap
    
    # Combine fill ratio and negative waste with weights
    priorities = np.where(potential_bins, 0.7 * fill_ratio - 0.3 * waste_normalized, -np.inf)
    return priorities
```
