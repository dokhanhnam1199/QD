```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Return priority score for each bin,combining fill ratio and waste."""
    potential_bins = bins_remain_cap >= item
    if not np.any(potential_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf
    waste_normalized = waste / np.max(bins_remain_cap)

    fill_ratio = (bins_remain_cap - waste) / bins_remain_cap
    
    # Combine fill ratio with a waste-related term, but use log scale for item size
    log_ratio = np.log(item / bins_remain_cap)
    
    # Weighted combination, adjust weights to fine-tune performance
    priorities = np.where(potential_bins, 0.6 * fill_ratio - 0.3 * waste_normalized - 0.1 * log_ratio, -np.inf)

    return priorities
```
