```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines energy, potential well, repulsion, and utilization."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Physics-inspired terms
    energy = 1.0 / (bins_remain_cap + 1e-9)
    priorities += 0.4 * energy

    diff = bins_remain_cap - item
    potential_well = np.exp(-(diff**2) / (2 * (item/3)**2))
    priorities += 0.4 * potential_well

    repulsion = np.exp(-bins_remain_cap / (item*5))
    priorities -= 0.2 * repulsion

    # Utilization term
    utilization = item / bins_remain_cap
    utilization[bins_remain_cap < item] = 0
    priorities += 0.2 * utilization

    priorities[bins_remain_cap < item] = -np.inf

    return priorities
```
