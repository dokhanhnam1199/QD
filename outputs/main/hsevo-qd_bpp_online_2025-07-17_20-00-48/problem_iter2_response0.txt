```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines capacity & wasted space with physics-inspired scaling."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        # Hybrid approach: capacity + inverse waste
        priorities[valid_bins] = bins_remain_cap[valid_bins] / (1 + waste)
    else:
        priorities = np.full_like(bins_remain_cap, -np.inf)
    return priorities
```
