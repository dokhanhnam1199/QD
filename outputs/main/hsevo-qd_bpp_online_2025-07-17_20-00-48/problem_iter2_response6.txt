```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using a combination of fill rate, waste penalty, and perfect fit bonus."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        priorities = -bins_remain_cap
        return priorities

    remaining_after_placement = bins_remain_cap[valid_bins] - item
    fill_rate = (bins_remain_cap[valid_bins] - remaining_after_placement) / bins_remain_cap[valid_bins]
    priorities[valid_bins] = fill_rate

    waste_penalty = np.exp(-remaining_after_placement)
    priorities[valid_bins] *= waste_penalty

    perfect_fit = np.isclose(bins_remain_cap[valid_bins], item)
    priorities[valid_bins][perfect_fit] = np.inf

    priorities[~valid_bins] = -np.inf
    return priorities
```
