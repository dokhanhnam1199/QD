```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This function prioritizes bins based on a combination of factors,
    emphasizing near-fit bins while also considering bin utilization.
    A stochastic element is added to encourage exploration.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # 1. Near-Fit Score: Gaussian centered slightly *above* item size
    #    This encourages tight packing but avoids immediately filling bins exactly.
    diff = bins_remain_cap - item
    near_fit_center = item * 1.1  # Center the Gaussian slightly above item size
    near_fit_std = item / 4  # Smaller std for more focused near-fit
    near_fit = np.exp(-((diff - (near_fit_center - item))**2) / (2 * near_fit_std**2))
    priorities += 2 * near_fit  # Emphasize near-fit

    # 2. Bin Utilization Score: Favor bins that are already somewhat full.
    #    Avoids creating many mostly-empty bins.  Sigmoid function for balance.
    bin_utilization = 1.0 / (1 + np.exp(- (bins_remain_cap - np.mean(bins_remain_cap)) / (np.std(bins_remain_cap)+1e-9)))
    priorities += 0.7 * bin_utilization

    # 3. Avoidance of Large Gaps: Penalize bins with significantly more space
    #    than the item size. This prevents excessive fragmentation.
    large_gap_penalty = np.exp(-(bins_remain_cap - item) / (item * 3))
    priorities -= 0.3 * large_gap_penalty

    # 4. Stochasticity: Add a small amount of noise to break ties and
    #    encourage exploration of different packing arrangements. The noise
    #    is scaled by item size to avoid large disruptions for small items.
    noise_scale = 0.05 * item
    noise = np.random.normal(0, noise_scale, size=bins_remain_cap.shape)
    priorities += noise

    # 5. Infeasibility Mask: Set priority to -inf for bins that cannot fit item
    priorities[bins_remain_cap < item] = -np.inf

    return priorities
```
