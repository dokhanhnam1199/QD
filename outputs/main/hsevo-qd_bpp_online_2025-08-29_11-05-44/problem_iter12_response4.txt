```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes decaying waste with fit and age differentiation."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = bins_remain_cap[possible_bins] - item
    waste = np.sum(bins_remain_cap)
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.01
    
    decay_factor = np.exp(-0.005 * waste)
    
    preferences = (fit_scores * decay_factor) + age_bonus
    priorities[possible_bins] = preferences

    return priorities
```
