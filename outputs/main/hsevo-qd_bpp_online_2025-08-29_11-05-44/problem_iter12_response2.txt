```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes waste decay and fit, differentiating bins by fill level."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    
    fill_levels = 1 - (bins_remain_cap / np.max(bins_remain_cap))
    fit_scores = bins_remain_cap[possible_bins] - item
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    
    if waste <= 0:
        waste_penalty = 0.0
    else:
        waste_penalty = np.exp(-0.01 * waste)
    
    preferences = (fit_scores * waste_penalty) + (fill_levels[possible_bins] * 0.1)
    priorities[possible_bins] = preferences
    return priorities
```
