```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines capacity-weighted fit with waste-sensitive exponential decay."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    waste = bins_remain_cap[possible_bins] - item
    fit_score = -np.abs(waste)
    total_waste = np.sum(bins_remain_cap - item) if np.any(possible_bins) else 0
    k = 0.01
    priorities[possible_bins] = (bins_remain_cap[possible_bins] * fit_score) * np.exp(-k * total_waste)
    return priorities
```
