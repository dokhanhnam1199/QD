```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    fit_scores = bins_remain_cap[possible_bins] - item
    
    bin_ages = np.arange(len(bins_remain_cap))[possible_bins]
    
    waste_decay = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    
    if waste_decay > 0:
        decay_factor = np.exp(-0.005 * waste_decay)
    else:
        decay_factor = 1.0
    
    priorities = (fit_scores * decay_factor) + (0.01 * bin_ages)
    
    priority_array = np.zeros_like(bins_remain_cap)
    priority_array[possible_bins] = priorities
    
    return priority_array
```
