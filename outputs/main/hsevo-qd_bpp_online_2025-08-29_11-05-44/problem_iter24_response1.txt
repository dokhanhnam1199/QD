```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """A refined priority function for online BPP, balancing fit, waste, and bin age with tunable weights."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.0005

    weight_fit = 0.6
    weight_waste = 0.3
    weight_age = 0.1

    waste_decay = np.exp(-0.005 * waste)

    preferences = (weight_fit * fit_scores) + (weight_waste * waste_decay) + (weight_age * age_bonus)
    priorities[possible_bins] = preferences
    return priorities
```
