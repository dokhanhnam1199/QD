import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.0008532159129480992) -> np.ndarray:
    """
    Combines the simplicity of inverse remaining capacity (v2) with a check for valid bins (v6/v7/v8) for efficiency.
    """
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    priorities[possible_bins] = 1.0 / (bins_remain_cap[possible_bins] - item + epsilon)
    return priorities
