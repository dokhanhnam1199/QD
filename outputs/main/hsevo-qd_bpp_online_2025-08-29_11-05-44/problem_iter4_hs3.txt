import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, const_add: float = 6.232319752581159) -> np.ndarray:
    """Prioritizes bins based on remaining capacity, avoiding division by zero.
    Combines elements of heuristics 1 and 7/8 for efficiency and robustness.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    waste = bins_remain_cap[possible_bins] - item
    priorities[possible_bins] = 1.0 / (const_add + waste)
    return priorities
