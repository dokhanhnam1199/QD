```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit, waste, and age with tunable weights for bin selection."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    fit_scores = bins_remain_cap[possible_bins] - item
    waste_scores = np.exp(-0.005 * (bins_remain_cap[possible_bins] - item))
    age_scores = np.ones(len(fit_scores))
    weights = np.array([0.6, 0.3, 0.1])
    
    weighted_scores = weights[0] * fit_scores + weights[1] * waste_scores + weights[2] * age_scores
    priorities[possible_bins] = weighted_scores
    
    return priorities
```
