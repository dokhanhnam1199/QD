```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A mutated priority function for Online Bin Packing Problem.
    Combines fit score, waste decay, and age bonus with tunable weights.
    """
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = bins_remain_cap[possible_bins]
    age = np.arange(len(bins_remain_cap))[possible_bins]

    fit_weight = 0.6
    waste_weight = 0.3
    age_weight = 0.1

    waste_decay = np.exp(-0.005 * waste)
    age_bonus = age * 0.0005

    preferences = (fit_weight * fit_scores) + (waste_weight * waste_decay) + (age_weight * age_bonus)
    priorities[possible_bins] = preferences

    return priorities
```
