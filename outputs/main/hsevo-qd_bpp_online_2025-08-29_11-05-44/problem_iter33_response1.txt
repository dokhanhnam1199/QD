```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A refined priority function for online bin packing.
    Combines fit, waste decay, and age bonus with tunable weights.
    """
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap)
    bin_ages = np.arange(len(bins_remain_cap))

    weight_fit = 0.5
    weight_waste = 0.3
    weight_age = 0.2
    decay_rate = 0.01

    waste_decay = np.exp(-decay_rate * waste)
    age_bonus = bin_ages[possible_bins] * 0.001

    preferences = (weight_fit * fit_scores) + (weight_waste * waste_decay) + (weight_age * age_bonus)
    priorities[possible_bins] = preferences

    return priorities
```
