```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    alpha = 0.6
    beta = 0.3
    gamma = 0.1
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste_decay = np.exp(-0.005 * (np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])))
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.0005
    priorities = (alpha * fit_scores + beta * waste_decay + gamma * age_bonus)
    priorities_full = np.zeros_like(bins_remain_cap)
    priorities_full[possible_bins] = priorities
    return priorities_full
```
