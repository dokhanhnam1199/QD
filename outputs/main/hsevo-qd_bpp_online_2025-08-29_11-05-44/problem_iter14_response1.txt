```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score, waste decay, and age bonus with tunable weights."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap)
    waste_decay = np.exp(-0.005 * waste)
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.001

    weights = {'fit': 0.8, 'waste': 0.15, 'age': 0.05}
    preferences = (weights['fit'] * fit_scores) + (weights['waste'] * waste_decay) + (weights['age'] * age_bonus)
    priorities[possible_bins] = preferences
    return priorities
```
