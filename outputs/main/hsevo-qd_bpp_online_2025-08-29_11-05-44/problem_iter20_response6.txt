```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, bin_ages: np.ndarray, waste_decay: float = 0.01, age_weight: float = 0.1) -> np.ndarray:
    """Combines fit (inverse remaining capacity) with waste decay and bin age."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    waste = bins_remain_cap[possible_bins] - item
    fit = 1.0 / (waste + 1e-6)
    age_bonus = age_weight * (bin_ages[possible_bins] + 1)
    waste_penalty = np.exp(-waste_decay * waste)
    priorities[possible_bins] = (fit * waste_penalty) + age_bonus

    return priorities
```
