```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse waste (like v0) with a best-fit boost (like v1)."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities
    waste = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = 1.0 / (waste + 1e-6)
    if np.any(valid_bins):
        best_bin_index = np.argmin(bins_remain_cap[valid_bins] - item)
        priorities[valid_bins][best_bin_index] += 0.5
    return priorities
```
