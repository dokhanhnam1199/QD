```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit like priority with waste-sensitive decay to guide bin selection."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[possible_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = 1.0 / (waste + 1e-9)

    total_waste = np.sum(bins_remain_cap - item) if np.any(possible_bins) else 0
    k = 0.01
    priorities[possible_bins] *= np.exp(-k * total_waste)

    best_bin_index = np.argmin(waste)
    priorities[possible_bins][best_bin_index] *= 2.0
    return priorities
```
