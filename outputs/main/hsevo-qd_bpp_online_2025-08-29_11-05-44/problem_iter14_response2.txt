```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, bin_ages: np.ndarray, alpha: float = 0.5, beta: float = 0.3, gamma: float = 0.2) -> np.ndarray:
    """Combines fit, exponentially decayed waste, and bin age for prioritization."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    remaining_capacities = bins_remain_cap[possible_bins]
    waste = remaining_capacities - item
    
    fit_score = 1.0 / remaining_capacities
    waste_decay = np.exp(-waste / 10.0)
    age_bonus = 1.0 / (bin_ages[possible_bins] + 1.0)

    priorities[possible_bins] = alpha * fit_score + beta * waste_decay + gamma * age_bonus
    return priorities
```
