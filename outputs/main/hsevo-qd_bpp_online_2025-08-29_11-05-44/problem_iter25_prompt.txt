{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Combines capacity-weighted preference with waste-sensitive decay.\n    Prioritizes bins with good fit and adjusts based on total waste.\n    \"\"\"\n    valid_bins = bins_remain_cap >= item\n    if not np.any(valid_bins):\n        return np.zeros_like(bins_remain_cap)\n\n    waste = bins_remain_cap[valid_bins] - item\n    fit_score = -np.abs(item - bins_remain_cap[valid_bins])\n    priorities = np.zeros_like(bins_remain_cap)\n    \n    total_waste = np.sum(bins_remain_cap - item) if np.any(valid_bins) else 0\n    \n    k = 0.01\n    priorities[valid_bins] = (bins_remain_cap[valid_bins] * fit_score) * np.exp(-k * total_waste)\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}