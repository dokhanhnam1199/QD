```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit, exponentially decayed waste, and bin age for prioritization."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = bins_remain_cap[possible_bins] - item
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    waste_decay = -np.log(waste + 1) if waste > 0 else 0
    age_bonus = np.arange(n_bins)[possible_bins] * 0.01

    preferences = (fit_scores * 0.8) + (waste_decay * 0.1) + age_bonus
    priorities[possible_bins] = preferences
    return priorities
```
