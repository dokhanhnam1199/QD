```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit, waste decay, and age bonus for a robust priority score."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.001
    
    priorities = (fit_scores * np.exp(-0.005 * waste)) + age_bonus
    priorities_full = np.zeros_like(bins_remain_cap)
    priorities_full[possible_bins] = priorities

    return priorities_full
```
