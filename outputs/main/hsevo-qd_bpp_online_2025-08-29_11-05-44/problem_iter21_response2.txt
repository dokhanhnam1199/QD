```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    
    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste_decay = np.exp(-0.005 * (bins_remain_cap - item))
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.002
    
    weights = np.array([0.6, 0.3, 0.1])
    preferences = (weights[0] * fit_scores) + (weights[1] * waste_decay) + (weights[2] * age_bonus)
    
    priorities[possible_bins] = preferences
    return priorities
```
