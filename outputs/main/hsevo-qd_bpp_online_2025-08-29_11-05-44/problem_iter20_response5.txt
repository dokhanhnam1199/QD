```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit and exponentially decaying waste, with a bin age bonus."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    fit_score = 1.0 / (waste + 1e-6)
    
    bin_ages = np.arange(len(bins_remain_cap))
    age_bonus = 1.0 / (bin_ages + 1)
    age_bonus = age_bonus[valid_bins]

    total_waste = np.sum(bins_remain_cap)
    waste_decay = np.exp(-total_waste / 100.0) 
    
    priorities[valid_bins] = (0.7 * fit_score + 0.3 * age_bonus) * waste_decay
    return priorities
```
