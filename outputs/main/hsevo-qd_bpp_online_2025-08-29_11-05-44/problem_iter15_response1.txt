```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    weights = {'fit': 0.6, 'waste': 0.3, 'age': 0.1}
    decay_rate = 0.01
    age_factor = 0.001
    total_waste = np.sum(bins_remain_cap)
    bin_ages = np.arange(len(bins_remain_cap))

    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste_influence = np.exp(-decay_rate * total_waste)
    age_bonus = bin_ages[possible_bins] * age_factor

    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = (weights['fit'] * fit_scores +
                                 weights['waste'] * waste_influence +
                                 weights['age'] * age_bonus)

    return priorities
```
