```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score with waste decay, age bonus, and a robustness factor."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.001
    
    robustness_factor = 1.0 / (1.0 + np.exp(-bins_remain_cap[possible_bins] / (item + 1e-6)))

    preferences = (0.5 * fit_scores + 0.3 * robustness_factor + 0.2 * age_bonus) * np.exp(-0.005 * waste)
    priorities[possible_bins] = preferences
    return priorities
```
