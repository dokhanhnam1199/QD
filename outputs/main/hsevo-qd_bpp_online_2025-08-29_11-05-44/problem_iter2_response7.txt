```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines elements of heuristics 2 and 3: prioritize by inverse remaining capacity,
    with a small constant to avoid division by zero."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    remaining_capacities = bins_remain_cap[possible_bins]
    priorities[possible_bins] = 1.0 / (remaining_capacities - item + 1e-6)
    return priorities
```
