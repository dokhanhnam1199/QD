{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Combines capacity-weighted preference with waste-sensitive decay.\"\"\"\n    priorities = np.zeros_like(bins_remain_cap)\n    possible_bins = bins_remain_cap >= item\n    if not np.any(possible_bins):\n        return priorities\n\n    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])\n    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)\n    capacities = bins_remain_cap[possible_bins]\n    \n    preferences = (capacities * fit_scores) * np.exp(-0.01 * waste)\n\n    priorities[possible_bins] = preferences\n    best_bin_index = np.argmax(priorities[possible_bins])\n    priorities[possible_bins][best_bin_index] += 1.0\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}