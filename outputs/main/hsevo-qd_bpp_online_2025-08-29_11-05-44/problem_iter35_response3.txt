```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit, waste decay, and age bonus for robust bin selection."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    waste = bins_remain_cap[possible_bins] - item
    fit_score = 1.0 / (waste + 1e-6)
    age_bonus = np.arange(n_bins)[possible_bins] * 0.005
    waste_decay = np.exp(-waste / item)
    priorities[possible_bins] = 0.7 * fit_score + 0.2 * waste_decay + 0.1 * age_bonus
    return priorities
```
