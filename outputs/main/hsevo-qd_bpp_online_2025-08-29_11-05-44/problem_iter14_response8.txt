```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse waste (v0) with a bin age bonus (v1) for improved prioritization."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[possible_bins] - item
    priorities = 1.0 / (waste + 1e-6)
    bin_ages = np.arange(len(bins_remain_cap))[possible_bins]
    priorities += 0.01 * bin_ages

    priority_array = np.zeros_like(bins_remain_cap)
    priority_array[possible_bins] = priorities
    return priority_array
```
