```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, bin_ages: np.ndarray, total_waste: float, k: float = 0.01) -> np.ndarray:
    """
    Prioritizes bins based on remaining capacity, fit score, waste decay, and bin age.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    waste = bins_remain_cap[possible_bins] - item
    fit_score = -np.abs(bins_remain_cap[possible_bins] - item)
    capacity_weighted_preference = bins_remain_cap[possible_bins] * fit_score
    waste_decay = np.exp(-k * total_waste)
    preference = (capacity_weighted_preference) * waste_decay
    age_bonus = 1.0 / (1.0 + bin_ages[possible_bins])
    priorities[possible_bins] = preference * age_bonus

    return priorities
```
