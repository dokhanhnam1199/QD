```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, bin_ages: np.ndarray = None, k: float = 0.01, age_weight: float = 0.1) -> np.ndarray:
    """Combines fit, waste decay, and age for bin priority."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    waste = bins_remain_cap[possible_bins] - item
    fit_score = -np.abs(item - bins_remain_cap[possible_bins])
    capacity_weighted_preference = bins_remain_cap[possible_bins] * fit_score
    preference = capacity_weighted_preference * np.exp(-k * waste)

    if bin_ages is not None:
        preference += age_weight * bin_ages[possible_bins]

    priorities[possible_bins] = preference
    return priorities
```
