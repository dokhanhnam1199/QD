import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, total_waste: float = 0.10025685103408755, bin_ages: np.ndarray = None, k: float = 0.024579803349803378) -> np.ndarray:
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    waste = bins_remain_cap[possible_bins] - item
    fit_scores = -np.abs(item - bins_remain_cap[possible_bins])
    if bin_ages is None:
        bin_ages = np.zeros(n_bins)
    age_bonus = np.exp(-bin_ages)
    preferences = (bins_remain_cap[possible_bins] * fit_scores) * np.exp(-k * total_waste) * age_bonus
    priorities[possible_bins] = preferences
    return priorities
