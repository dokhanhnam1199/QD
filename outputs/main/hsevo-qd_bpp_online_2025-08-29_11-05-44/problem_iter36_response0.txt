```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A priority function for online bin packing, combining fit, waste decay, and bin age
    with tunable weights.
    """
    weights = {
        'fit': 0.5,
        'waste': 0.3,
        'age': 0.2
    }
    
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    
    total_capacity = np.sum(bins_remain_cap)
    used_capacity = total_capacity - np.sum(bins_remain_cap[possible_bins])
    waste = used_capacity
    
    waste_decay = np.exp(-0.01 * waste)
    
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.001
    
    priorities = (weights['fit'] * fit_scores +
                  weights['waste'] * waste_decay +
                  weights['age'] * age_bonus)
    
    priorities_full = np.zeros_like(bins_remain_cap)
    priorities_full[possible_bins] = priorities
    
    return priorities_full
```
