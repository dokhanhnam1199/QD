```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines the efficiency of filtering with the stability of adding a small constant
    to prevent division by zero. Prioritizes bins based on inverse of remaining waste.
    """
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    waste = bins_remain_cap[possible_bins] - item
    priorities[possible_bins] = 1.0 / (waste + 1e-6)
    return priorities
```
