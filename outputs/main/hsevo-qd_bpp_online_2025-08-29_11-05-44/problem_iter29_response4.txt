```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit, waste decay, and a small age bonus for improved bin selection."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    capacities = bins_remain_cap[possible_bins]
    preferences = (capacities * fit_scores) * np.exp(-0.01 * waste)
    priorities[possible_bins] = preferences

    best_bin_index = np.argmax(priorities[possible_bins])
    priorities[possible_bins][best_bin_index] += 0.5

    return priorities
```
