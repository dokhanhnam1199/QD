```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best of v2 & v6: filters valid bins, then uses inverse remaining capacity.
    Prioritizes bins with smallest waste while avoiding division by zero."""
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)
    distances = bins_remain_cap[valid_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = 1.0 / (distances + 1e-6)
    return priorities
```
