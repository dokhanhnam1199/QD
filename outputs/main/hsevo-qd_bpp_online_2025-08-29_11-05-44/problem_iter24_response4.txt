```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities
    
    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    waste_decay = np.exp(-0.005 * waste) if waste > 0 else 1.0
    
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.002
    
    weights = {'fit': 0.7, 'waste': 0.2, 'age': 0.1}
    
    preferences = (weights['fit'] * fit_scores) + (weights['waste'] * waste_decay) + (weights['age'] * age_bonus)
    
    priorities[possible_bins] = preferences
    
    return priorities
```
