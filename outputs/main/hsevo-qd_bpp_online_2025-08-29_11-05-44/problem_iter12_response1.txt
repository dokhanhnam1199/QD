```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes waste decay, fit, and bin age."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    if waste <= 0:
      waste_decay = 0
    else:
      waste_decay = -np.log(waste + 1)

    fit_scores = bins_remain_cap[possible_bins] - item
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.005

    preferences = (fit_scores * 0.9) + (waste_decay * 0.1) + age_bonus
    priorities[possible_bins] = preferences
    return priorities
```
