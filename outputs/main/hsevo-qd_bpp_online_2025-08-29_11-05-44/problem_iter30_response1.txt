```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score with waste decay, age bonus, and a fullness penalty."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.001
    fullness_penalty = (1 - (bins_remain_cap[possible_bins] / np.max(bins_remain_cap))) * 0.1

    waste_decay = np.exp(-0.005 * waste)

    preferences = (0.5 * fit_scores + 0.3 * waste_decay + 0.1 * age_bonus + 0.1 * fullness_penalty)
    priorities[possible_bins] = preferences

    return priorities
```
