```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score with waste decay, age bonus, and a density preference."""
    priorities = np.zeros_like(bins_remain_cap)
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return priorities

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    waste = np.sum(bins_remain_cap) - np.sum(bins_remain_cap[possible_bins])
    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.001
    density_preference = bins_remain_cap[possible_bins] / (np.sum(bins_remain_cap) + 1e-9)

    weights = {'fit': 0.6, 'waste': 0.2, 'age': 0.1, 'density': 0.1}
    preferences = (
        weights['fit'] * fit_scores
        + weights['waste'] * np.exp(-0.01 * waste)
        + weights['age'] * age_bonus
        + weights['density'] * density_preference
    )

    priorities[possible_bins] = preferences
    return priorities
```
