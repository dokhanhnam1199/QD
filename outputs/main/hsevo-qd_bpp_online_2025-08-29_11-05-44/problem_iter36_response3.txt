```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    fit_scores = -np.abs(bins_remain_cap[possible_bins] - item)
    
    waste_decay = np.sum(bins_remain_cap)
    waste_scores = np.exp(-0.005 * (waste_decay - np.sum(bins_remain_cap[possible_bins])))

    age_bonus = np.arange(len(bins_remain_cap))[possible_bins] * 0.002

    priorities = np.zeros_like(bins_remain_cap)
    
    weight_fit = 0.7
    weight_waste = 0.2
    weight_age = 0.1
    
    priorities[possible_bins] = (weight_fit * fit_scores) + (weight_waste * waste_scores) + (weight_age * age_bonus)

    return priorities
```
