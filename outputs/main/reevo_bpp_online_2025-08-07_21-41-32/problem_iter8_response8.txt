```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Random Fit priority for online bin packing, biased toward tighter fits.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1-D array of remaining capacities for each bin.

    Returns
    -------
    np.ndarray
        Priority scores, one per bin.  Higher scores indicate higher priority.
        Infeasible bins receive -np.inf.
    """
    caps = np.asarray(bins_remain_cap, dtype=float)
    if caps.size == 0:
        return np.empty(0, dtype=float)

    feasible = caps >= item
    priorities = np.full_like(caps, -np.inf, dtype=float)

    if np.any(feasible):
        slack = caps[feasible] - item
        epsilon = 1e-12
        rand = np.random.rand(caps.size)[feasible]
        priorities[feasible] = rand / (slack + epsilon)

    return priorities
```
