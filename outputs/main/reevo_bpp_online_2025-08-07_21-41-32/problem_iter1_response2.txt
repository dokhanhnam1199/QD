```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Compute Worst‑Fit priority for each bin.

    The worst‑fit strategy always places the next item into the bin with
    the *largest* remaining free capacity that is large enough to hold
    the item.  This function returns a score array; the bin with the
    maximum score is chosen for the item.  Bins that cannot accommodate
    the item are given a score of -np.inf, ensuring they are never
    selected.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        Remaining capacity of each bin (positive numbers).  Must be 1‑D.

    Returns
    -------
    np.ndarray
        Priority scores of the same shape as `bins_remain_cap`.  The
        highest score corresponds to the bin that should receive the
        item under the worst‑fit policy.
    """
    # Only bins that have enough capacity are considered; others get -inf score
    valid = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    priorities[valid] = bins_remain_cap[valid]
    return priorities
```
