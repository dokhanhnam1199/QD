```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Deterministic priority for online bin packing.
    The score is higher for bins that leave less waste after placing the item.
    Exact fits receive the highest priority. Infeasible bins get -inf.
    """
    caps = np.asarray(bins_remain_cap, dtype=float)
    feasible = caps >= item

    # Initialize with -inf for infeasible bins
    priorities = np.full(caps.shape, -np.inf, dtype=float)

    # Compute waste only for feasible bins
    waste = caps - item
    eps = 1e-12
    inv_waste = 1.0 / (waste[feasible] + eps)

    # Deterministic tieâ€‘breaker: tiny negative bias proportional to bin index
    bias = -1e-9 * np.arange(caps.size)

    priorities[feasible] = inv_waste + bias[feasible]
    return priorities
```
