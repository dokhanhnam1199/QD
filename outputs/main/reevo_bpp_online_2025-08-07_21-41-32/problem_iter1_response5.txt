```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Inverse Distance (Proximity Fit) priority for the online Bin Packing Problem.

    The priority of a bin is inversely proportional to the leftover space
    after (hypothetically) placing the item. A tighter fit (smaller leftover)
    yields a higher priority. Bins that cannot accommodate the item receive a
    very low priority (−inf) to exclude them from selection.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array containing the remaining free capacity of each bin.

    Returns
    -------
    np.ndarray
        Array of the same shape as `bins_remain_cap` with a priority score for
        each bin. The bin with the highest score should be chosen for the item.
    """
    # Small epsilon prevents division by zero for exact fits
    EPS = 1e-12

    # Compute how much capacity would remain if we placed the item
    residual = bins_remain_cap - item

    # Feasible bins have non‑negative residual; assign priority = 1/(residual + EPS)
    # Infeasible bins get a very low priority so they are never selected.
    priorities = np.where(
        residual >= 0,
        1.0 / (residual + EPS),
        -np.inf
    )
    return priorities
```
