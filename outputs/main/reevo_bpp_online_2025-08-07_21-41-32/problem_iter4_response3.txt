```python
import numpy as np

def priority_v2(
    item: float,
    bins_remain_cap: np.ndarray,
    tolerance: float = 1e-12,
    tie_breaker: float = 1e-15,
) -> np.ndarray:
    """
    Deterministic exact‑fit‑first priority function for online Bin Packing.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities of the currently open bins.
    tolerance : float, optional
        Numerical tolerance for feasibility detection. Bins whose remaining
        capacity is at least ``item - tolerance`` are considered feasible.
    tie_breaker : float, optional
        Tiny value used to break ties deterministically in favour of lower‑indexed
        bins. Must be smaller than ``tolerance``.

    Returns
    -------
    np.ndarray
        Priority scores for each bin (same shape as ``bins_remain_cap``). Higher
        values indicate more attractive bins. Infeasible bins receive ``-np.inf``.
    """
    # Ensure a flat NumPy array of floats.
    caps = np.asarray(bins_remain_cap, dtype=float).ravel()

    # Feasibility mask: bins that can accommodate the item within tolerance.
    feasible = caps >= (item - tolerance)

    # Initialise priorities with -inf for infeasible bins.
    priorities = np.full_like(caps, -np.inf, dtype=float)

    if not np.any(feasible):
        # No feasible bin; return all -inf.
        return priorities

    # Compute leftover capacity for feasible bins.
    leftover = caps[feasible] - item
    # Clip tiny negative leftovers caused by tolerance to zero.
    leftover = np.maximum(leftover, 0.0)

    # Indices of feasible bins (used for deterministic tie‑breaking).
    idx = np.where(feasible)[0]

    # Exact‑fit‑first: smaller leftover → higher priority.
    # Use negative leftover so exact fit (leftover == 0) yields the highest raw score.
    # Subtract a tiny index‑dependent term to break ties in favour of lower‑indexed bins.
    priorities[feasible] = -leftover - idx * tie_breaker

    return priorities
```
