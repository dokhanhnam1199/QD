```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority function that implements the "Exact Fit First" strategy for an
    online bin‑packing problem.  Each bin receives a score; the highest score
    determines the chosen bin.  Bins that can exactly accommodate the item are
    favored over those that would leave a larger residue.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of the remaining capacities of all open bins.

    Returns
    -------
    np.ndarray
        Priority scores for each bin.  The item will be placed in the bin
        with the maximum score.
    """
    # Ensure we are working with a floating‑point array
    cap = np.asarray(bins_remain_cap, dtype=np.float64)

    # Flags for bins that can accommodate the item
    can_fit = cap >= item

    # Initialize all scores to very negative values (so they cannot be selected)
    scores = np.full_like(cap, -np.inf)

    if np.any(can_fit):
        # Compute residual capacity after placing the item
        leftover = cap[can_fit] - item

        # Higher scores for smaller leftover (best fit).  
        # Exact fits (leftover == 0) get the highest score (0).
        scores[can_fit] = -leftover

    return scores
```
