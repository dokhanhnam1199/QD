```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Compute priority scores for bins in an online bin packing problem using a Best‑Fit strategy.
    
    The returned priorities are such that the bin with the largest score is the bin that,
    after adding the new item, will have the *smallest* residual capacity.
    
    Items that do not fit in a particular bin are assigned a very low priority
    (negative infinity) so that they are never selected.
    
    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array containing the remaining capacity of each bin.
    
    Returns
    -------
    np.ndarray
        Priority scores, one for each bin, identical shape to `bins_remain_cap`.
    """
    # Capacity left after fitting the item; negative if item cannot fit
    residual = bins_remain_cap - item
    
    # Best‑Fit: choose bin with smallest residual → give priority = -residual
    # Non‑fitting bins are given negative infinity so they are discarded
    priority = np.where(residual >= 0, -residual, -np.inf)
    
    return priority
```
