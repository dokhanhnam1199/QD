```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:

    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Calculate waste if item is placed in each bin
    waste = bins_remain_cap - item
    
    # Identify bins where the item fits
    fits = waste >= 0
    
    # Assign priority based on least waste for bins where item fits
    if np.any(fits):
        priorities[fits] = 1.0 / (waste[fits] + 1e-9)  # adding small number to prevent division by zero
    
    # Assign very low priority to bins where item doesn't fit
    priorities[~fits] = -1000.0
    
    return priorities
```
