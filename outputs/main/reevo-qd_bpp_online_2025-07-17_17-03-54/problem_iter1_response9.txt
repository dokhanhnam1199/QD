```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Calculate waste if item is placed in each bin
    waste = bins_remain_cap - item
    
    # Assign high priority if item fits and low otherwise
    fits = waste >= 0
    priorities[fits] = 1.0
    
    # Among bins where the item fits, prioritize bins with least waste
    priorities[fits] = 1.0 / (waste[fits] + 1e-6) # adding small number to prevent division by zero
    
    #For bins that don't fit the item: zero or very negative values. This discourages from placing to those bins, although impossible
    priorities[~fits] = -1000
    
    return priorities
```
