```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on how close their remaining capacity is to the item size.
    Bins with a remaining capacity closest to the item size get the highest priority.
    Bins with less capacity than the item get zero priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the remaining capacity and the item size
    diff = np.abs(bins_remain_cap - item)
    
    # Bins with less capacity than the item get zero priority
    priority_score = np.where(bins_remain_cap < item, 0, 
                              # Priority is higher for bins with smaller differences
                              1 / (1 + diff))
    return priority_score
```
