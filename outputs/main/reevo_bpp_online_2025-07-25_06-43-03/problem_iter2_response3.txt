```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins that can fit the item and have the most remaining capacity 
    closest to the item size, thereby minimizing waste and reducing the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the number of bins
    num_bins = len(bins_remain_cap)
    
    # Initialize the priority array with negative infinity values
    priority = np.full(num_bins, -np.inf)
    
    # For each bin
    for i in range(num_bins):
        # If the bin can fit the item
        if bins_remain_cap[i] >= item:
            # Prioritize bins with remaining capacity closest to the item size
            priority[i] = -np.abs(bins_remain_cap[i] - item)
    
    return priority
```
