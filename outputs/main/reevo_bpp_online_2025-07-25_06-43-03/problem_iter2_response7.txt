```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on the absolute difference between the remaining capacity and the item size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the remaining capacity of each bin and the item size
    capacity_diff = np.abs(bins_remain_cap - item)
    
    # Calculate a mask to avoid adding the item to a bin where it doesn't fit
    item_fits = bins_remain_cap >= item
    
    # Invert the differences to give higher priority to bins with smaller differences
    priority_scores = np.where(item_fits, 1 / (capacity_diff + 1e-8), 0)
    
    return priority_scores
```
