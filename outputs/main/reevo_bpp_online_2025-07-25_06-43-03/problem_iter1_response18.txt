```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to encourage the packing of items into bins 
    where the item size is close to the remaining capacity, thereby minimizing 
    waste and reducing the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the waste that would result from adding the item to each bin
    waste = np.abs(bins_remain_cap - item)
    
    # Calculate the priority score as the inverse of the waste
    # Add a small value to avoid division by zero
    priority = 1 / (waste + 1e-6)
    
    # Give higher priority to bins with less remaining capacity
    priority *= (bins_remain_cap - item + 1e-6)
    
    # Ensure that bins with more than enough capacity get higher priority
    priority[bins_remain_cap >= item] *= 2
    
    # Return the priority scores
    return priority
```
