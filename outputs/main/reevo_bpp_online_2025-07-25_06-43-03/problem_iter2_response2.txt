```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on minimizing waste and 
    optimizing item-bin size ratios, encouraging efficient packing.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the waste that would be left in each bin if the item were added
    waste = np.maximum(bins_remain_cap - item, 0)
    
    # Calculate the ratio of the item size to the remaining capacity of each bin
    ratio = np.abs(1 - (item / (bins_remain_cap + 1e-9)))  # Add a small value to avoid division by zero
    
    # Calculate the priority score for each bin based on the waste and ratio
    priority = 1 / (waste + 1e-9 + ratio)  
    
    # Ensure that bins with insufficient capacity have a priority of zero
    priority[bins_remain_cap < item] = 0
    
    return priority
```
