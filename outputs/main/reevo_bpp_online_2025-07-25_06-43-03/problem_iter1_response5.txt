```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough capacity to pack the item,
    minimizing waste of space. If no such bin exists, it prioritizes bins with the least remaining capacity,
    encouraging efficient use of space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the minimum remaining capacity required to pack the item
    min_required_cap = item
    
    # Identify bins that have just enough capacity to pack the item
    exact_fit_bins = bins_remain_cap >= min_required_cap
    
    # Prioritize exact fit bins
    priority = np.where(exact_fit_bins, 1 / (bins_remain_cap + 1e-6), 0)
    
    # For bins that are not exact fit, prioritize bins with the least remaining capacity
    non_exact_fit_bins = ~exact_fit_bins
    priority_non_exact_fit = (-bins_remain_cap) * non_exact_fit_bins
    
    # Combine the two priorities
    priority[non_exact_fit_bins] = priority_non_exact_fit[non_exact_fit_bins]
    
    # Ensure all selected bins have at least the required capacity to pack the item
    valid_bins = bins_remain_cap >= item
    priority[~valid_bins] = -np.inf
    
    return priority
```
