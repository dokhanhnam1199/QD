```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have enough capacity to hold the item and 
    also prefer bins with the least remaining capacity, which indicates that the bin is almost full.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity that is enough to hold the item
    valid_cap = np.where(bins_remain_cap >= item, bins_remain_cap - item, np.inf)
    
    # Set the priority score as the inverse of the valid capacity, favoring bins with the least remaining capacity
    priority_score = 1 / np.maximum(valid_cap, 1e-6)
    
    # Return the priority scores for each bin
    return priority_score
```
