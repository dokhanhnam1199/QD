```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on the ratio of the remaining capacity and the item size.
    If a bin has a higher remaining capacity compared to the item size, it gets a higher priority.
    Additionally, bins with lower remaining capacities are prioritized over those with higher remaining capacities,
    to ensure that bins are fully utilized.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    valid_bins = bins_remain_cap >= item
    priority_scores = np.where(valid_bins, (bins_remain_cap - item) / bins_remain_cap, 0)
    adjusted_priority_scores = np.where(valid_bins, 1 / (1 + (priority_scores / item) ** 2), 0)
    return adjusted_priority_scores
```
