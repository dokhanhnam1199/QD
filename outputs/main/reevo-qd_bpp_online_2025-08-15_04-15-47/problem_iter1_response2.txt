```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Worst Fit strategy prioritizes bins that have the most remaining capacity,
    # provided they can still fit the current item.
    
    # Initialize priorities to a very low value (or negative infinity)
    # to signify that bins that cannot fit the item have no priority.
    priorities = np.full_like(bins_remain_cap, -np.inf)
    
    # Identify bins that can accommodate the current item
    can_fit_mask = bins_remain_cap >= item
    
    # For bins that can fit the item, the priority is their remaining capacity.
    # The higher the remaining capacity, the higher the priority (Worst Fit).
    priorities[can_fit_mask] = bins_remain_cap[can_fit_mask]
    
    return priorities
```
