```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit.

    In Worst Fit, we aim to place the item into the bin that has the most
    remaining capacity. This strategy tries to keep smaller capacities available
    for potentially smaller items that might come later, thus avoiding the
    creation of new bins unnecessarily.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        The priority is the remaining capacity of the bin. A higher remaining
        capacity means a higher priority for the Worst Fit strategy.
    """
    # For the Worst Fit strategy, we want to prioritize bins with the most
    # remaining capacity. So, the priority score for each bin is simply its
    # remaining capacity.
    priorities = bins_remain_cap.copy()

    # However, we can only place an item in a bin if it fits. Bins where the
    # item does not fit should have a priority of 0 or a very low value so
    # they are not chosen.
    # We set the priority to 0 for bins where the item does not fit.
    priorities[bins_remain_cap < item] = 0

    return priorities
```
