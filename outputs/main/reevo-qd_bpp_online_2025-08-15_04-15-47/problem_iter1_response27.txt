```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit strategy.

    The Random Fit strategy assigns a random priority to each bin that can
    accommodate the item. This encourages exploration of different packing
    configurations.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Identify bins that can accommodate the item
    eligible_bins_mask = bins_remain_cap >= item
    
    # Assign random priorities to eligible bins
    num_eligible_bins = np.sum(eligible_bins_mask)
    if num_eligible_bins > 0:
        random_priorities = np.random.rand(num_eligible_bins)
        priorities[eligible_bins_mask] = random_priorities
        
    return priorities
```
