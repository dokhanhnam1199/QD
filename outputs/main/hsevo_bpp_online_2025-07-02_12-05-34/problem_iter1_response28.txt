```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # First priority: Can the item fit?
            priority = 1.0

            # Prioritize bins with less wasted space, but not excessively.
            waste = cap - item
            priority += np.exp(-waste)  # Smaller waste is better

            # Prioritize bins closer to being full to capacity if item fits well
            priority += item/cap
            priorities[i] = priority
    return priorities
```
