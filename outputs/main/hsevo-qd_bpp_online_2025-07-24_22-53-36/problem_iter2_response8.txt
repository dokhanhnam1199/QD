```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score for each bin by combining tight fit and remaining capacity strategies.
    """
    # Calculate priority as negative absolute difference between remaining capacity and item size
    priority = -np.abs(bins_remain_cap - item)
    
    # Set priority to -inf for bins that cannot hold the item
    priority[bins_remain_cap < item] = -np.inf
    
    # Normalize priority scores to be between 0 and 1
    max_priority = np.max(priority)
    if max_priority != -np.inf:
        priority = np.where(priority != -np.inf, (priority - np.min(priority)) / (max_priority - np.min(priority)), -np.inf)
    
    return priority
```
