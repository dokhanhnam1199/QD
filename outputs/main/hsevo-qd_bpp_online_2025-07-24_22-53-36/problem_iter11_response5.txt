```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin based on bin fullness and item fit.
    """
    # Check if bin has enough capacity
    has_enough_capacity = bins_remain_cap >= item
    
    # Calculate bin fullness score and remaining capacity score
    bin_fullness_score = np.where(has_enough_capacity, 1 - ((bins_remain_cap - item) / bins_remain_cap), -1)
    remaining_cap_score = np.where(has_enough_capacity, 1 / (1 + np.abs(bins_remain_cap - item)), 0)
    
    # Combine scores and normalize
    priority_scores = bin_fullness_score + remaining_cap_score
    priority_scores = (priority_scores - np.min(priority_scores)) / (np.max(priority_scores) - np.min(priority_scores) + 1e-6)
    
    return priority_scores
```
