```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin.
    A bin with a remaining capacity that is just enough to hold the item gets the highest priority.
    A bin that cannot hold the item gets a priority of negative infinity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority for each bin
    # If the bin cannot hold the item, set the priority to negative infinity
    priority = np.where(bins_remain_cap >= item, bins_remain_cap - item, -np.inf)
    
    # Normalize the priority to be between 0 and 1
    max_priority = np.max(priority)
    if max_priority == -np.inf:  # If all bins are too small
        return np.zeros_like(bins_remain_cap)
    else:
        return priority / max_priority
```
