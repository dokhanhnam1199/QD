```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority score for each bin based on remaining capacity and item size.
    Combines tight fit and normalization strategies for better performance.
    """
    # Calculate remaining capacity after adding item to each bin
    remaining_cap_after_add = bins_remain_cap - item
    
    # Give high priority to bins where item fits and penalize those where it doesn't
    priority = np.where(remaining_cap_after_add >= 0, 1 / (remaining_cap_after_add + 1e-6), -np.inf)
    
    return priority
```
