```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Give higher priority to bins that have just enough capacity for the item
    # and lower priority to bins that are almost empty or almost full
    priority = np.where(bins_remain_cap >= item, 
                         1 - (bins_remain_cap - item) / bins_remain_cap, 
                         -1.0)  # negative priority for bins that can't fit the item
    
    # Replace NaN values (which occur when bins_remain_cap is zero) with -1.0
    priority = np.nan_to_num(priority, nan=-1.0)
    
    return priority
```
