```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    The priority is calculated based on the remaining capacity of each bin. 
    The bin with the least remaining capacity that can still hold the item gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # For bins that can hold the item, the priority is inversely proportional to the remaining capacity
    # For bins that cannot hold the item, the priority is negative infinity
    priority = np.where(bins_remain_cap >= item, 1 / (bins_remain_cap + 1e-6), -np.inf)
    
    return priority
```
