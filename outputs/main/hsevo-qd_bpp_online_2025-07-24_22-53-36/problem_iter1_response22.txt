```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin. 
    Bins with remaining capacity closest to the item size are given higher priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # Bins with remaining capacity closest to the item size are given higher priority
    # We use the negative absolute difference to simulate "closest"
    priority_scores = -np.abs(bins_remain_cap - item)
    
    # To avoid putting items into bins that are too small, set the priority score to -inf for bins that cannot fit the item
    priority_scores[bins_remain_cap < item] = -np.inf
    
    return priority_scores
```
