```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin based on the remaining capacity and the item size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin based on how well the item fits into the bin
    # A higher score indicates a better fit
    priority = np.where(bins_remain_cap >= item, bins_remain_cap - item, -np.inf)
    
    # Normalize the priority score to ensure it's in a comparable range
    # Here, we use the negative of the remaining capacity after adding the item as the priority score
    # This encourages the algorithm to fill the bins as much as possible
    
    return priority
```
