```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering fit, wasted space and randomness."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit_mask = bins_remain_cap >= item

    if not np.any(fit_mask):
        return priorities  # No valid bins

    # Fit ratio: prioritize bins with closer fits.
    fit_ratio = item / bins_remain_cap[fit_mask]
    priorities[fit_mask] = 1 - np.abs(fit_ratio - 1)

    # Wasted space: penalize more wasted space
    wasted_space = bins_remain_cap[fit_mask] - item
    priorities[fit_mask] -= 0.1 * wasted_space

    # Add a small random component to break ties.
    priorities[fit_mask] += 0.01 * np.random.rand(np.sum(fit_mask))

    return priorities
```
