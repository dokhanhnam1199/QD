```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit ratio and wasted space minimization for priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit_mask = bins_remain_cap >= item
    
    if not np.any(fit_mask):
        return priorities
    
    # Fit ratio component: prioritize closer fits
    fit_ratio = item / bins_remain_cap[fit_mask]
    priorities[fit_mask] = 1 - np.abs(fit_ratio - 1)
    
    # Minimize wasted space
    wasted_space = bins_remain_cap[fit_mask] - item
    priorities[fit_mask] += 1.0 / (1e-6 + wasted_space)
    
    priorities[fit_mask] += np.random.rand(np.sum(fit_mask)) * 0.01 # Break ties
    
    return priorities
```
