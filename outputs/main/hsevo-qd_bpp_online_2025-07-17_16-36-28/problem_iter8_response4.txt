```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fitting, wasted space, spread, and randomness for priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap - item >= 0
    if not np.any(valid_bins):
        return priorities

    priorities[valid_bins] = 1.0 # Basic fit priority
    wasted_space = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] += 1.0 / (1e-6 + wasted_space) # Minimize wasted space
    priorities[valid_bins] += bins_remain_cap[valid_bins] / (np.sum(bins_remain_cap[valid_bins]) + 1e-6) # Spread items
    priorities[valid_bins] += 0.01 * np.random.rand(np.sum(valid_bins)) # Add small randomness

    return priorities
```
