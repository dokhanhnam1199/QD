```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit, waste, and fill level."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    remaining_cap_after_add = bins_remain_cap - item
    
    valid_bins = remaining_cap_after_add >= 0
    priorities[valid_bins] = 1

    wasted_space = remaining_cap_after_add[valid_bins]
    priorities[valid_bins] += 1.0 / (1e-6 + wasted_space)

    # Target a half-full state, scale bin remaining capacity
    half_full_target = np.mean(bins_remain_cap) / 2
    priorities[valid_bins] += np.exp(-np.abs(bins_remain_cap[valid_bins] - half_full_target))
    
    return priorities
```
