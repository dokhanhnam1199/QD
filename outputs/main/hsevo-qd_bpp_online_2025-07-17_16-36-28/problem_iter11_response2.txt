```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines fit check, wasted space minimization, and bin spreading for efficient packing.
    Prioritizes bins that can accommodate the item, minimize wasted space and encourage spreading items across bins.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap - item >= 0

    if not np.any(valid_bins):
        return priorities

    priorities[valid_bins] = 1.0  # Fits check
    wasted_space = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] += 1.0 / (1e-6 + wasted_space)  # Minimize wasted space

    scaled_bins = bins_remain_cap[valid_bins]**2
    priorities[valid_bins] += scaled_bins / (np.sum(scaled_bins) + 1e-6)  # Spread items

    return priorities
```
