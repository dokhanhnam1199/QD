```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    An improved priority function that combines multiple strategies for online bin packing.
    It prioritizes bins based on a combination of factors, including:
    - Whether the item fits in the bin
    - Minimizing wasted space
    - Balancing bin utilization (filling bins somewhat evenly)
    - A probabilistic element for exploration
    - Item size-aware bin selection

    Args:
        item (float): The size of the item to be packed.
        bins_remain_cap (np.ndarray): A numpy array containing the remaining capacity of each bin.

    Returns:
        np.ndarray: A numpy array of priority scores for each bin.
    """

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap - item >= 0

    if not np.any(valid_bins):
        return priorities

    # Fits check - crucial for feasibility
    priorities[valid_bins] += 1.0

    # Minimize wasted space - primary goal
    wasted_space = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] += 1.0 / (1e-6 + wasted_space)

    # Encourage filling bins somewhat evenly - helps avoid extreme fragmentation
    mean_cap = np.mean(bins_remain_cap)
    half_full_diff = np.abs(bins_remain_cap[valid_bins] - item - mean_cap / 2)
    priorities[valid_bins] += 1.0 / (1e-6 + half_full_diff)

    # Item size-aware selection: Favor bins closer to the item size
    size_diff = np.abs(bins_remain_cap[valid_bins] - item)
    priorities[valid_bins] += 1.0 / (1e-6 + size_diff)

    # Probabilistic element for exploration, scaled by item size.
    # Larger items have more exploration to find better fits.
    priorities[valid_bins] += np.random.rand(np.sum(valid_bins)) * 0.01 * item

    # Adaptive element: Encourage bins with a "medium" fill level
    # This might help prevent too-full or too-empty bins later
    medium_fill = (bins_remain_cap.max() + bins_remain_cap.min()) / 2
    medium_fill_diff = np.abs(bins_remain_cap[valid_bins] - item - medium_fill)
    priorities[valid_bins] += 1.0 / (1e-6 + medium_fill_diff)

    return priorities
```
