```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering fit, wasted space, and bin fullness."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit_mask = bins_remain_cap >= item

    if not np.any(fit_mask):
        return priorities

    # Fit ratio component, closer to 1 is better (item fills more of bin)
    fit_ratio = item / bins_remain_cap[fit_mask]
    priorities[fit_mask] = 1 - np.abs(fit_ratio - 1)

    # Reduce priority for largely empty bins after placement
    remaining_after_fit = bins_remain_cap[fit_mask] - item
    priorities[fit_mask] -= 0.1 * remaining_after_fit / (np.max(bins_remain_cap) + 1e-9)

    return priorities
```
