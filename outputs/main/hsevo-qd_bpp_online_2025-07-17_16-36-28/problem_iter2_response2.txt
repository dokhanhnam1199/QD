```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit ratio and energy landscape concepts for priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit_mask = bins_remain_cap >= item
    
    # Fit ratio component: prioritize closer fits, avoid near-full bins
    fit_ratio = item / bins_remain_cap[fit_mask]
    priorities[fit_mask] = (1 - np.abs(fit_ratio - 1)) - 0.01 * (bins_remain_cap[fit_mask] - item)
    
    # Energy landscape component: disincentivize largely empty bins
    priorities[fit_mask] /= (bins_remain_cap[fit_mask] + 1e-9) # Avoid division by zero
    
    # Set low priority for bins where item doesn't fit
    priorities[~fit_mask] = -np.inf
    
    return priorities
```
