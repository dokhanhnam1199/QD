```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Assign priority to bins based on fit, wasted space, and occupancy."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities

    priorities[valid_bins] = 1

    remaining_cap = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] += 1.0 / (1e-6 + remaining_cap)
    
    mean_cap = np.mean(bins_remain_cap)
    priorities[valid_bins] += 1.0 / (1e-6 + np.abs(remaining_cap - mean_cap / 2))

    scaled_cap = bins_remain_cap[valid_bins]**2
    priorities[valid_bins] += scaled_cap / np.sum(scaled_cap + 1e-6)
    
    priorities[valid_bins] += np.random.rand(np.sum(valid_bins)) * 0.01

    return priorities
```
