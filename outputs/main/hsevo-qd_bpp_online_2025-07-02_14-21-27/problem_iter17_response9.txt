```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using Newtonian potential and handles edge cases."""
    valid_bins = bins_remain_cap > 0
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    safe_bins_remain_cap = np.where(valid_bins, bins_remain_cap, np.inf)
    potential = safe_bins_remain_cap / np.abs(safe_bins_remain_cap - item)
    priorities = np.where(safe_bins_remain_cap >= item, potential, -np.inf)
    priorities = np.nan_to_num(priorities, neginf=-np.inf)
    priorities = np.where(~valid_bins, -np.inf, priorities)

    return priorities
```
