```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Adaptive heuristic for online bin packing, combining capacity utilization,
    item fit, and bin fill level considerations with a reinforcement learning
    inspired approach.
    """
    valid_bins = bins_remain_cap > 0
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    safe_bins_remain_cap = np.where(valid_bins, bins_remain_cap, np.inf)

    # Capacity utilization component: Encourages filling bins efficiently
    capacity_utilization = (bins_remain_cap - item) / (bins_remain_cap + 1e-9) # Avoid division by zero
    capacity_utilization = np.clip(capacity_utilization, -1.0, 1.0) # Clip values to ensure reasonable range

    # Item fit component: Prioritizes bins where the item fits well
    item_fit = (bins_remain_cap - item)
    item_fit_priority = np.where(bins_remain_cap >= item, np.exp(-np.abs(item_fit)/(item + 1e-9)), -np.inf) # Exponential function emphasizes close fits

    # Bin fill level component: Balances between filling existing bins and starting new ones
    bin_fill_level = 1 - (safe_bins_remain_cap / np.max(bins_remain_cap)) if np.max(bins_remain_cap) > 0 else np.zeros_like(bins_remain_cap)
    bin_fill_level = np.clip(bin_fill_level, 0.0, 1.0)

    # Adaptive weighting: Adjust weights based on item size relative to bin capacity
    item_ratio = np.clip(item / (safe_bins_remain_cap + 1e-9), 0.0, 1.0)
    weight_capacity = 0.3 + 0.2 * item_ratio # Adjust capacity utilization weight
    weight_fit = 0.5 - 0.2 * item_ratio      # Adjust item fit weight
    weight_fill = 0.2 + 0.2 * item_ratio     # Adjust bin fill level weight


    # Combine components using adaptive weights
    combined_priority = (weight_capacity * capacity_utilization +
                         weight_fit * item_fit_priority +
                         weight_fill * bin_fill_level)

    combined_priority = np.nan_to_num(combined_priority, neginf=-np.inf)
    priorities = np.where(~valid_bins, -np.inf, combined_priority)
    
    return priorities
```
