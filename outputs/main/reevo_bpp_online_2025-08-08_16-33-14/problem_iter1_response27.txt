```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.

    In Random Fit, we consider all bins that can accommodate the item.
    We then randomly select one of these bins. This heuristic prioritizes
    bins that can fit the item and gives them a positive priority.
    Bins that cannot fit the item receive a zero priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    # Identify bins that can accommodate the item
    can_fit_mask = bins_remain_cap >= item

    # Assign a positive priority to bins that can fit the item.
    # Since it's Random Fit, any bin that can fit gets an equal chance.
    # We can represent this by giving them a uniform positive value,
    # or in this case, simply a value of 1.0. The random selection
    # logic will then pick among these positive-priority bins.
    priorities[can_fit_mask] = 1.0

    # For a true random fit, the selection mechanism (outside this function)
    # would sample from the indices where priority > 0.
    # This function's role is to identify potential candidates.
    return priorities
```
