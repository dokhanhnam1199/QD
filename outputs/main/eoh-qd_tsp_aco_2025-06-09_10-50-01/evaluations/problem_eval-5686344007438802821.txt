import numpy as np

def heuristics_v2(distance_matrix):
    """{This algorithm constructs a heuristic matrix by prioritizing edges connecting nodes with high average proximity to all other nodes, favoring edges that bridge central locations within the graph.}"""
    num_nodes = distance_matrix.shape[0]
    node_proximity = np.sum(distance_matrix, axis=1)
    heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)

    for i in range(num_nodes):
        for j in range(num_nodes):
            if i != j:
                heuristics_matrix[i, j] = (node_proximity[i] + node_proximity[j]) / (2 * distance_matrix[i, j])

    return heuristics_matrix
