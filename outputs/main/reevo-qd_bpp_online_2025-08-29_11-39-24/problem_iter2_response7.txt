```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)

    # Prioritize exact fits
    exact_fit_bins = np.where(bins_remain_cap == item)[0]
    priorities[exact_fit_bins] = 1000.0

    # If no exact fit, prioritize bins with minimal waste
    remaining_bins = np.where(priorities == 0)[0]
    if len(remaining_bins) > 0:
        waste = bins_remain_cap[remaining_bins] - item
        valid_bins = remaining_bins[waste >= 0]

        if len(valid_bins) > 0:
            # Prioritize bins that are less full (higher remaining capacity)
            # and minimize waste.
            priorities[valid_bins] = (bins_remain_cap[valid_bins] / (item + 1e-6)) / (waste[waste >= 0] + 1e-6)

    return priorities
```
