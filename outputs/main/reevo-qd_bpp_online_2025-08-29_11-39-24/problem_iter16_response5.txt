```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Exact Fit First strategy.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Assign highest priority to bins that exactly fit the item
    exact_fit_bins = np.where(bins_remain_cap == item)[0]
    priorities[exact_fit_bins] = 1.0
    # If no exact fit, assign priority based on how close the bin capacity is to the item size,
    # favoring smaller bins with remaining capacity close to the item size.
    if np.sum(priorities) == 0:
        diff = np.abs(bins_remain_cap - item)
        priorities = 1.0 / (diff + 1e-6)  # Adding a small value to avoid division by zero
    return priorities
```
