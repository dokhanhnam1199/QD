```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    # Calculate the difference between the item size and the remaining capacity of each bin.
    diffs = bins_remain_cap - item
    
    # Consider only bins where the item can fit.
    valid_bins = diffs >= 0
    
    if np.any(valid_bins):
        # Calculate the ratio of remaining space after adding the item to the bin.
        ratios = diffs[valid_bins] / bins_remain_cap[valid_bins]
        
        # Assign priority based on the ratio. Higher ratio means better fit.
        priorities[valid_bins] = ratios
        
    return priorities
```
