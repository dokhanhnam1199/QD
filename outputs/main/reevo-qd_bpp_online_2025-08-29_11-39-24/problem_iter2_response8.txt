```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Best Fit Decreasing strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Calculate the difference between the bin capacity and the item size
    diff = bins_remain_cap - item
    # Assign a priority based on how close the remaining capacity is to the item size
    # Prefer bins where the item fits exactly or leaves a small remaining space.
    # Handle cases where the item doesn't fit in a bin (diff < 0) by assigning a very low priority.
    priorities = np.where(diff >= 0, -diff, -np.inf)
    return priorities
```
