```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Sigmoid Fit Score.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin
    fit_scores = item / bins_remain_cap

    # Apply the sigmoid function to the fit scores
    # Sigmoid function: f(x) = 1 / (1 + exp(-k * (x - x0)))
    # Parameters:
    # k: Steeperness of the curve
    # x0: Midpoint of the curve
    k = 3  # Adjust k to control the sigmoid steepness
    x0 = 0.4  # Adjust x0 to control where the sigmoid transitions

    # Avoid division by zero or inf by setting a minimum remaining capacity
    bins_remain_cap = np.maximum(bins_remain_cap, 1e-6)
    fit_scores = item / bins_remain_cap
    priorities = 1 / (1 + np.exp(-k * (fit_scores - x0)))

    # Normalize priorities to avoid extreme values. Helps prevent a single bin always being favored
    priorities = (priorities - np.min(priorities)) / (np.max(priorities) - np.min(priorities) + 1e-8)

    return priorities
```
