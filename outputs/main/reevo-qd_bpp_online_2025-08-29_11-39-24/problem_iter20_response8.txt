```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    diffs = bins_remain_cap - item
    valid_bins = diffs >= 0

    if np.any(valid_bins):
        ratios = diffs[valid_bins] / bins_remain_cap[valid_bins]
        priorities[valid_bins] = ratios

    # Penalize bins that are nearly full
    priorities = np.where(bins_remain_cap < item * 0.1, -1.0, priorities)

    return priorities
```
