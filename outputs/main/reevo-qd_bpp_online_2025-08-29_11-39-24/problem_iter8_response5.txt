```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)

    # Give highest priority to bins that have exact fit
    exact_fit_bins = (bins_remain_cap == item)
    priorities[exact_fit_bins] = 1.0

    # If no exact fit, prioritize bins with least remaining capacity that can still accommodate the item.
    possible_bins = bins_remain_cap >= item
    if np.any(possible_bins):
        min_remaining = np.min(bins_remain_cap[possible_bins])
        for i in range(len(bins_remain_cap)):
            if possible_bins[i]:
                if bins_remain_cap[i] == min_remaining:
                    priorities[i] = 0.5
                else:
                    priorities[i] = 0.1

    return priorities
```
