def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priorities based on a combination of remaining capacity after fitting the item and minimizing wasted space, favoring bins that can accommodate the item with minimal leftover space while also considering the overall fullness of the bins.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(1.0 / (cap - item + 0.001) + (1 - cap / sum(bins_remain_cap)))
    else:
      priority.append(-1)
  return priority
