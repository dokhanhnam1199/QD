def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority scores for each bin based on the remaining capacity and item size, favoring bins with enough space and penalizing those that would be overfilled or have too much wasted space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority.append(cap + 1/(waste+1))
    else:
      priority.append(-1)
  return priority
