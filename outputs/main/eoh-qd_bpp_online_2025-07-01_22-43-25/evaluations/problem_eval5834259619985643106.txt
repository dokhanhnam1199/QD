def priority_v2(item, bins_remain_cap):
    """{Assign a priority score to each bin based on the remaining capacity and item size, favoring bins that can accommodate the item with minimal wasted space and penalizing those that are too full or too empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority.append(1 / (cap - item + 0.0001))  # Higher priority for tighter fit
        else:
            priority.append(-1000)  # Very low priority if item doesn't fit
    return priority
