def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins with remaining capacity closest to the item size, but also considers the overall fullness of the bin.}"""
    priorities = []
    for capacity in bins_remain_cap:
        if capacity >= item:
            priority = 1.0 / abs(capacity - item) + (1.0 - (capacity / 100.0)) # Assuming bin size of 100
        else:
            priority = -1 
        priorities.append(priority)
    return priority
