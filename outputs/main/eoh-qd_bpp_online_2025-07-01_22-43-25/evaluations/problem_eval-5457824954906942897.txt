def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and wasted space if the item is placed in the bin, prioritizing bins that have enough space but also minimize wasted space.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority = (1 / (wasted_space + 0.0001)) + cap  # Avoid division by zero, prioritize less wasted space and more capacity
            priorities.append(priority)
        else:
            priorities.append(-1) # Assign a very low priority if item doesn't fit
    return priority
