```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines z-score fit/cap synergy with median stabilization and volatility damping 
    with variance-scaled tie-breaking for robust online bin packing dynamics.
    """
    if bins_remain_cap.size == 0:
        return np.array([], dtype=np.float64)
    
    orig_cap = np.max(bins_remain_cap)
    if orig_cap < 1e-9 or item < 1e-9:
        return np.where(
            bins_remain_cap >= item, 
            1.0 / (bins_remain_cap - item + 1e-9), 
            -np.inf
        )
    
    valid = bins_remain_cap >= item
    if not valid.any():
        return np.full_like(bins_remain_cap, -np.inf, dtype=np.float64)
    
    leftover = bins_remain_cap - item
    utilization = (orig_cap - bins_remain_cap) / orig_cap
    tightness = item / (bins_remain_cap + 1e-9)
    
    # Z-score normalization of fit (best-fit) and capacity (worst-fit) metrics
    elig_fit = 1.0 / (leftover[valid] + 1e-9)
    mean_fit, std_fit = elig_fit.mean(), elig_fit.std()
    z_fit = (1.0 / (leftover + 1e-9) - mean_fit) / (std_fit + 1e-9)
    
    elig_cap = bins_remain_cap[valid]
    mean_cap, std_cap = elig_cap.mean(), elig_cap.std()
    z_cap = (bins_remain_cap - mean_cap) / (std_cap + 1e-9)
    
    # Dynamic hybrid weighting with exponential utilization enhancer
    primary = (tightness * z_fit + (1.0 - tightness) * z_cap) * np.exp(utilization * tightness)
    
    # Entropy-guided median stabilization to avoid capacity fragmentation
    med_cap = np.median(bins_remain_cap)
    balance = -0.05 * np.abs(bins_remain_cap - med_cap) / (orig_cap + 1e-9)
    
    # Multi-scale tie-breaking with volatility damping and variance scaling
    vol_damping = 0.02 * np.exp(-leftover)
    valid_leftover = leftover[valid]
    std_leftover = valid_leftover.std() if len(valid_leftover) > 1 else 1e-6
    epsilon = 1e-4 / (std_leftover + 1e-9)
    grad_sensitivity = epsilon * (item / (bins_remain_cap + 1e-9))
    
    return np.where(
        valid,
        primary + balance + vol_damping + grad_sensitivity,
        -np.inf
    )
```
