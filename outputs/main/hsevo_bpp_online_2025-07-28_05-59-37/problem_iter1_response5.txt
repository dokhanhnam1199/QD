```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function based on Best Fit heuristic with tie-breaking."""
    # Bins that can fit the item have priority proportional to their tightness
    can_fit = bins_remain_cap >= item
    tightness = item / bins_remain_cap  # Higher = tighter fit
    # Bins with higher utilization (less remaining) are prioritized in tie-breaking
    utilization = -bins_remain_cap  # Negative to favor smaller remaining capacities
    priority = np.where(can_fit, tightness + utilization * 1e-6, -np.inf)
    return priority
```
