```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Best Fit and Worst Fit heuristics based on item size relative to bin capacity."""
    possible = bins_remain_cap >= item
    leftover = bins_remain_cap - item
    tight = item > (bins_remain_cap / 2)
    tight &= possible  # Only consider tightness for bins that can fit the item
    
    best_fit = -leftover  # Prioritize minimal leftover for tight fits
    worst_fit = leftover  # Prioritize largest leftover for non-tight fits
    
    priority = np.where(possible, np.where(tight, best_fit, worst_fit), -np.inf)
    return priority
```
