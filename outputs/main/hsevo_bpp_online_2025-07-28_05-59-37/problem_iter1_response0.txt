```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores for bins based on item size and remaining capacity.
    
    The priority is calculated as the ratio of the item size to the bin's remaining capacity,
    which encourages packing items into bins where they fit most tightly (Best Fit).
    Bins that cannot accommodate the item are assigned a very low priority.
    
    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores for each bin.
    """
    # Calculate the ratio of item to remaining capacity for valid bins
    priorities = np.where(
        bins_remain_cap >= item,
        item / (bins_remain_cap + 1e-9),  # Add epsilon to prevent division by zero
        -np.inf  # Assign -inf to invalid bins to exclude them from selection
    )
    return priorities
```
