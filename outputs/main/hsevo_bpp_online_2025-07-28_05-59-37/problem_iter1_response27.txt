```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on item-to-bin remaining capacity ratio for tight fits."""
    valid_mask = bins_remain_cap >= item
    # Calculate ratio of item size to bin's remaining capacity (higher = tighter fit)
    ratio = item / (bins_remain_cap + 1e-9)  # Add epsilon to avoid division by zero
    # Assign -inf to invalid bins to ensure they are not selected
    priorities = np.where(valid_mask, ratio, -np.inf)
    return priorities
```
