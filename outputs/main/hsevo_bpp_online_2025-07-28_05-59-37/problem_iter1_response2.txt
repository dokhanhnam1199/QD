```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores using a Worst Fit heuristic with a perfect-fit bias.
    
    Prioritizes bins with:
    1. Sufficient capacity to fit the item (ineligible bins get -inf)
    2. A secondary score based on how close the bin's remaining capacity is to the item size,
       favoring bins where placing the item would leave minimal leftover space.
    """
    # Mask bins that can't fit the item
    eligible = bins_remain_cap >= item
    
    # For eligible bins: 
    # - Primary score: 1.0 to ensure eligibility
    # - Secondary score: 1.0 / (leftover + 1e-9) to favor perfect fits
    leftover = bins_remain_cap - item
    scores = np.where(
        eligible,
        1.0 + 1.0 / (leftover + 1e-9),
        -np.inf
    )
    return scores
```
