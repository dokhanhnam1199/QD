```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Priority function combining Best Fit for large items and Worst Fit for small items."""
    LARGE_THRESHOLD = 0.5  # Assuming bin capacity is normalized to 1.0
    mask = bins_remain_cap >= item
    priority = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    
    if item > LARGE_THRESHOLD:
        # Best Fit: prioritize bins with least leftover space (higher = closer to zero)
        priority[mask] = item - bins_remain_cap[mask]
    else:
        # Worst Fit: prioritize bins with largest remaining capacity
        priority[mask] = bins_remain_cap[mask]
    
    return priority
```
