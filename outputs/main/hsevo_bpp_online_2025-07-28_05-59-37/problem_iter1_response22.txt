```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority scores based on Best Fit heuristic, favoring bins that minimize leftover space.
    
    Args:
        item: Size of the item to be packed.
        bins_remain_cap: Array of remaining capacities for each bin.
    
    Returns:
        Array of priority scores for each bin, where higher values indicate better fit.
    """
    can_fit = bins_remain_cap >= item
    # Prioritize bins with smallest remaining capacity after placement (Best Fit)
    # Use negative remaining capacity as priority (higher score = less negative = better fit)
    priorities = np.where(can_fit, -bins_remain_cap, -np.inf)
    return priorities
```
