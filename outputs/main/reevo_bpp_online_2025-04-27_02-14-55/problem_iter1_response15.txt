```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # Higher priority for bins where item fits
            priority = 100  # Base priority
            priority += (cap - item)  # Prefer bins with tighter fit, but still penalize too small space
            priority += (1/(cap + 0.00001)) # Prefer higher capacity
            priorities[i] = priority

        else:
             priorities[i] = -1000 # Extremely low priority

    return priorities
```
