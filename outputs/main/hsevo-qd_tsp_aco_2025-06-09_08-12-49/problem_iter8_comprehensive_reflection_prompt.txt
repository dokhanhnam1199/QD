{"system": "You are an expert in the domain of optimization heuristics. Your task is to provide useful advice based on analysis to design better heuristics.\n", "user": "Your task is to redefine 'Current self-reflection' paying attention to avoid all things in 'Ineffective self-reflection' in order to come up with ideas to design better heuristics.\n\n### Current self-reflection\nWhen designing heuristics, consider combining multiple relevant factors and tuning their weights. Normalization and sparsification can improve performance. Always include a small epsilon to prevent division by zero. Parameterize your code instead of hardcoding it.\nWhen designing heuristics, prioritize meaningful features and combine them thoughtfully. Consider physical analogies (like Newtonian mechanics) to create richer heuristics. Normalizing the heuristic values can improve stability. Critically, ensure thorough testing and evaluation to differentiate performance between heuristics. Avoid redundant code.\n\n### Ineffective self-reflection\nWhen designing heuristics, consider combining multiple relevant factors, normalizing outputs, handling edge cases like division by zero, and tuning parameters for optimal performance. Sparsification can also improve performance. Comprehensive docstrings are also important.\n\nResponse (<100 words) should have 4 bullet points: Keywords, Advice, Avoid, Explanation.\nI'm going to tip $999K for a better heuristics! Let's think step by step."}