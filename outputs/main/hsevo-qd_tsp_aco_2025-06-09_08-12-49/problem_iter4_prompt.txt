{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Combines Newtonian attraction with inverse distance for TSP edge prioritization.\n    \"\"\"\n\n    n = distance_matrix.shape[0]\n    heuristics = np.zeros_like(distance_matrix)\n    epsilon = 1e-9\n    safe_distance_matrix = distance_matrix + epsilon\n\n    # Newtonian attraction component\n    attraction = 1 / (safe_distance_matrix**2)\n    mass = np.sum(1 / safe_distance_matrix, axis=1)\n    M = np.outer(mass, mass)\n    potential_energy = safe_distance_matrix / np.mean(safe_distance_matrix)\n    newtonian = (attraction * M) / potential_energy\n\n    # Inverse distance component\n    inverse_distance = 1 / safe_distance_matrix\n\n    # Combine the two components\n    heuristics = 0.7 * newtonian + 0.3 * inverse_distance\n\n    # Normalize\n    min_heuristic = np.min(heuristics)\n    max_heuristic = np.max(heuristics)\n    heuristics = (heuristics - min_heuristic) / (max_heuristic - min_heuristic)\n\n    return heuristics\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}