```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin, implementing a Best Fit heuristic.

    The Best Fit heuristic aims to minimize the remaining space in a bin after placing an item.
    This typically leads to tighter packing and can reduce the total number of bins used.
    A bin with a smaller remaining capacity after placing the item will receive a higher priority score.
    Bins where the item does not fit receive a very low (negative infinity) priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        Higher score indicates higher priority.
    """
    # Initialize priorities for all bins to a very low number (-infinity).
    # This ensures that bins where the item cannot fit are never chosen.
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Create a boolean mask for bins where the item can actually fit.
    can_fit_mask = bins_remain_cap >= item

    # Only proceed if there is at least one bin where the item can fit.
    if np.any(can_fit_mask):
        # For the bins where the item fits, calculate the remaining space
        # after the item is placed.
        remaining_space_after_fit = bins_remain_cap[can_fit_mask] - item

        # Best Fit strategy aims to minimize this remaining space.
        # To convert this into a "higher is better" priority score, we negate
        # the remaining space. A smaller positive remaining space (e.g., 0.05)
        # will result in a larger (less negative) priority score (-0.05).
        # A larger positive remaining space (e.g., 0.5) will result in a
        # smaller (more negative) priority score (-0.5).
        # A perfect fit (remaining_space_after_fit = 0) will yield a priority of 0,
        # which is the highest possible priority for a fitting bin.
        priorities[can_fit_mask] = -remaining_space_after_fit

    return priorities
```
