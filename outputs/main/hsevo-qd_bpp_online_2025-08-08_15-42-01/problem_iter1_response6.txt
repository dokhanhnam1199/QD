```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    eligible_bins_mask = bins_remain_cap >= item
    eligible_bins_capacities = bins_remain_cap[eligible_bins_mask]
    
    if eligible_bins_capacities.size == 0:
        return np.zeros_like(bins_remain_cap)
        
    normalized_capacities = eligible_bins_capacities / np.max(eligible_bins_capacities)
    
    sigmoid_inputs = eligible_bins_capacities - item 
    
    priorities = 1 / (1 + np.exp(-sigmoid_inputs))
    
    final_priorities = np.zeros_like(bins_remain_cap)
    final_priorities[eligible_bins_mask] = priorities
    
    return final_priorities
```
