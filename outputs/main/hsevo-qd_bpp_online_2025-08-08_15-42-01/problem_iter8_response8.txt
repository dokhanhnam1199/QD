```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines sophisticated tight-fitting with a penalty for excessive waste,
    prioritizing bins that offer a near-perfect fit while penalizing large remaining capacities.
    """
    valid_bins_mask = bins_remain_cap >= item
    output_priorities = np.zeros_like(bins_remain_cap, dtype=float)

    if not np.any(valid_bins_mask):
        return output_priorities

    valid_bins_cap = bins_remain_cap[valid_bins_mask]
    
    # Prioritize bins that are nearly full (tight fit)
    # Use inverse of remaining capacity, with a bonus for perfect fits.
    # Add a small epsilon to prevent division by zero.
    tight_fit_scores = 1.0 / (valid_bins_cap - item + 1e-9)
    
    # Introduce a bonus for perfect fits
    perfect_fit_mask = (valid_bins_cap - item) < 1e-9
    tight_fit_scores[perfect_fit_mask] *= 100.0 # Strong bonus for perfect fits

    # Penalize bins that would leave a large amount of space after fitting the item
    # Large remaining capacity is considered "wasteful" and should be de-prioritized.
    # We use a negative score for larger remaining capacities, making them less desirable.
    waste_scores = -(valid_bins_cap - item) 

    # Combine scores: Emphasize tight fits, but also consider the amount of waste.
    # A bin with a very tight fit but substantial waste might be less desirable
    # than a slightly less tight fit with minimal waste.
    # We can linearly combine them. Weights can be tuned.
    # Here, we give more weight to tight fit scores.
    combined_scores = 2.0 * tight_fit_scores + 0.5 * waste_scores

    # Normalize scores using softmax to get probabilities/priorities
    # This ensures scores are in a comparable range and highlights relative preferences.
    exp_scores = np.exp(combined_scores - np.max(combined_scores)) # Subtract max for numerical stability
    priorities = exp_scores / np.sum(exp_scores)

    output_priorities[valid_bins_mask] = priorities

    return output_priorities
```
