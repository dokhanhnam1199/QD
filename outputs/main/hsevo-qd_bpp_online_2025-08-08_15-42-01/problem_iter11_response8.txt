```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins by favoring tight fits and penalizing large surpluses."""
    priorities = np.zeros_like(bins_remain_cap)
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            remaining_after_fit = bins_remain_cap[i] - item
            if remaining_after_fit == 0:
                priorities[i] = 1.0  # High priority for a perfect fit
            else:
                # Prioritize bins with smaller remaining capacity (tighter fit)
                # Add a small epsilon to avoid division by zero and ensure non-zero priority
                priorities[i] = 1.0 / (remaining_after_fit + 1e-9)
    return priorities
```
