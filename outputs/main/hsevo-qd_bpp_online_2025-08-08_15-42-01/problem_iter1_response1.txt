```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Implements the Best Fit strategy for the online Bin Packing Problem.
    Items are prioritized to be placed in bins where they leave the least
    remaining space, thus aiming to minimize wasted space.
    """
    # Calculate the remaining space after placing the item in each bin.
    # Only consider bins where the item can actually fit.
    possible_fits = bins_remain_cap >= item
    remaining_space = np.where(possible_fits, bins_remain_cap - item, np.inf)

    # The priority is inversely related to the remaining space.
    # A smaller remaining space means a higher priority.
    # We use a small epsilon to avoid division by zero if remaining_space is 0
    # and to ensure bins with 0 remaining space (perfect fit) get the highest priority.
    epsilon = 1e-9
    priorities = np.where(possible_fits, 1 / (remaining_space + epsilon), 0)

    # Ensure that bins where the item cannot fit have a priority of 0.
    priorities[~possible_fits] = 0

    return priorities
```
