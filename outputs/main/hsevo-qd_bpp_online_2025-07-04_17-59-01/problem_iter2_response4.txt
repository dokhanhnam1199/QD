```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines gap and ratio to prioritize bins for item placement.
    Favors bins with small gaps relative to their capacity.
    """
    # Avoid division by zero
    bins_remain_cap = np.where(bins_remain_cap == 0, 1e-9, bins_remain_cap)

    # Calculate gap and handle infeasible bins
    gap = bins_remain_cap - item
    gap = np.where(gap < 0, -1, gap)

    # Calculate ratios
    ratios = item / bins_remain_cap

    # Combine gap and ratio: prioritize small gaps relative to bin capacity
    priorities = np.where(gap >= 0, (1 - ratios) / (gap + 0.0001), -1e9)

    return priorities
```
