```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines Newton's gravity and ratio-based approaches."""

    # Avoid division by zero
    bins_remain_cap = np.where(bins_remain_cap == 0, 1e-9, bins_remain_cap)

    # Calculate gap
    gap = bins_remain_cap - item
    gap = np.where(gap < 0, -1, gap)

    # Gravitational attraction component
    gravity = np.where(gap >= 0, bins_remain_cap / (gap**2 + 0.0001), -1e9)

    # Ratio component
    ratios = item / bins_remain_cap
    log_ratios = np.log(ratios)
    ratio_priority = -log_ratios

    # Combined priority: weighted sum
    priorities = 0.7 * gravity + 0.3 * ratio_priority
    return priorities
```
