```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines gap and ratio considerations for bin priority."""
    bins_remain_cap = np.where(bins_remain_cap == 0, 1e-9, bins_remain_cap)
    gap = bins_remain_cap - item
    gap = np.where(gap < 0, -1, gap)

    # Combine "gravitational" attraction with ratio of item to capacity
    attraction = np.where(gap >= 0, bins_remain_cap / (gap**2 + 0.0001), -1e9)
    ratios = item / bins_remain_cap
    priorities = attraction - np.log(ratios)

    return priorities
```
