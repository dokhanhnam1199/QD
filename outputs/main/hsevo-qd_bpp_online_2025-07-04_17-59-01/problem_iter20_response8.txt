```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines gap, capacity, and fill level for bin priority.
    Prioritizes bins with smaller gaps and larger capacity.
    """
    epsilon = 1e-9
    feasible = bins_remain_cap >= item
    num_feasible = np.sum(feasible)

    if num_feasible == 0:
        return -bins_remain_cap

    gap = bins_remain_cap - item
    gap = np.where(feasible, gap, -1)
    
    priorities = np.where(gap >= 0, bins_remain_cap / (gap**2 + 0.0001), -1e9)
    
    max_cap = np.max(bins_remain_cap[feasible]) if num_feasible > 0 else np.max(bins_remain_cap)
    capacity_priority = bins_remain_cap / (max_cap + epsilon)
    capacity_priority = np.where(feasible, capacity_priority, -1e9)

    fill_level = 1.0 - (bins_remain_cap / (np.max(bins_remain_cap) + epsilon))
    fill_level_priority = -fill_level
    fill_level_priority = np.where(feasible, fill_level_priority, -1e9)
    
    combined_priority = (
        0.6 * priorities + 
        0.2 * capacity_priority +
        0.2 * fill_level_priority
    )

    return combined_priority
```
