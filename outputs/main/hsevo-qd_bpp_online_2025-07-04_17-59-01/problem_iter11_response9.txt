```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines ratio and remaining capacity for bin selection."""
    bins_remain_cap = np.where(bins_remain_cap == 0, 1e-9, bins_remain_cap)

    # Calculate the ratios
    ratios = item / bins_remain_cap
    normalized_ratios = ratios / np.max(ratios) if np.max(ratios) > 0 else np.zeros_like(ratios)

    # Calculate the remaining capacity priority
    normalized_cap = bins_remain_cap / np.max(bins_remain_cap) if np.max(bins_remain_cap) > 0 else np.zeros_like(bins_remain_cap)

    # Combine the two priorities
    priorities = 0.6 * normalized_ratios + 0.4 * normalized_cap

    return priorities
```
