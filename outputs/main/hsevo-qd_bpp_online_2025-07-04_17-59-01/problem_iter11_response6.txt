```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines ratio and gap with dynamic penalties for online bin packing."""

    bins_remain_cap = np.where(bins_remain_cap == 0, 1e-9, bins_remain_cap)
    gap = bins_remain_cap - item
    gap = np.where(gap < 0, -1, gap)

    ratios = np.where(bins_remain_cap > 0, item / bins_remain_cap, 0)
    normalized_ratios = ratios / np.max(ratios) if np.max(ratios) > 0 else np.zeros_like(ratios)

    priorities = normalized_ratios - np.abs(gap) / np.max(np.abs(gap)) if np.max(np.abs(gap)) > 0 else normalized_ratios

    return priorities
```
