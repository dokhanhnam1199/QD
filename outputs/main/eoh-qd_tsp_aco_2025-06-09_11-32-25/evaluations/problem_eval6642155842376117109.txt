import numpy as np

def heuristics_v2(distance_matrix):
    """{This algorithm estimates edge inclusion probabilities by iteratively sampling solutions using a nearest neighbor heuristic with stochastic perturbations and tracks edge frequencies across these samples.}"""
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)
    num_samples = 100

    for _ in range(num_samples):
        current_node = np.random.randint(n)
        unvisited_nodes = set(range(n))
        unvisited_nodes.remove(current_node)
        path = [current_node]

        while unvisited_nodes:
            distances = distance_matrix[current_node, :]
            
            # Perturb distances stochastically
            probabilities = np.exp(-distances / np.mean(distances))  # Softmax
            probabilities[current_node] = 0  # Avoid self-loop
            probabilities = probabilities / np.sum(probabilities)  # Normalize
           
            # Select next node with probability proportional to perturbed distances
            next_node = np.random.choice(n, p=probabilities)

            # Ensure that the selected node is in the set of unvisited nodes
            while next_node not in unvisited_nodes:
               
                probabilities = np.exp(-distances / np.mean(distances)) # Softmax
                probabilities[current_node] = 0
                probabilities = probabilities/ np.sum(probabilities)
                next_node = np.random.choice(n, p = probabilities)


            path.append(next_node)
            unvisited_nodes.remove(next_node)
            current_node = next_node

        path.append(path[0]) # Return to start
        
        #Update heuristics matrix with edge frequencies
        for i in range(n):
            node1 = path[i]
            node2 = path[i+1]
            heuristics_matrix[node1, node2] += 1
            heuristics_matrix[node2, node1] += 1
            
    heuristics_matrix = heuristics_matrix / num_samples #normalize to 0-1

    return heuristics_matrix
