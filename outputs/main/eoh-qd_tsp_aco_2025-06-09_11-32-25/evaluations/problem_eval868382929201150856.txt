import numpy as np

def heuristics_v2(distance_matrix):
    """
    {This algorithm iteratively refines edge probabilities based on the quality of tours constructed using those probabilities, favoring edges that lead to shorter tours.}
    """
    n = distance_matrix.shape[0]
    heuristics_matrix = np.ones_like(distance_matrix, dtype=float)  # Initialize with equal probabilities
    num_iterations = 10
    num_tours = 50

    for _ in range(num_iterations):
        tour_lengths = []
        tours = []

        for _ in range(num_tours):
            # Construct a tour using probabilities from heuristics_matrix
            current_node = np.random.randint(n)
            unvisited = set(range(n))
            unvisited.remove(current_node)
            tour = [current_node]

            while unvisited:
                probabilities = heuristics_matrix[current_node, list(unvisited)]
                probabilities /= np.sum(probabilities)  # Normalize probabilities
                next_node = np.random.choice(list(unvisited), p=probabilities)
                tour.append(next_node)
                unvisited.remove(next_node)
                current_node = next_node

            tour.append(tour[0])
            
            # Calculate tour length
            tour_length = 0
            for i in range(n):
                tour_length += distance_matrix[tour[i], tour[i+1]]
            
            tour_lengths.append(tour_length)
            tours.append(tour)

        # Update heuristics_matrix based on tour quality (lower is better)
        for i in range(num_tours):
            tour = tours[i]
            reward = np.exp(-tour_lengths[i] / np.mean(tour_lengths)) # Normalize reward, exp to exaggerate difference.

            for j in range(n):
                heuristics_matrix[tour[j], tour[j+1]] *= (1 + 0.1 * reward)
                heuristics_matrix[tour[j+1], tour[j]] *= (1 + 0.1 * reward)
                
        heuristics_matrix = np.clip(heuristics_matrix, 0.01, 100) #Prevent too small or large values.

    return heuristics_matrix
