import numpy as np

def heuristics_v2(distance_matrix):
    """{This algorithm constructs a heuristic matrix by iteratively merging clusters of nodes based on edge weights derived from inverse distances and cluster connectivity.}"""
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)
    
    # Initialize clusters: each node is a cluster
    clusters = [{i} for i in range(n)]
    
    # Calculate initial edge weights (inverse distance)
    edge_weights = 1.0 / (distance_matrix + np.eye(n))  # Add eye to avoid division by zero

    while len(clusters) > 1:
        # Find the edge with the maximum weight between two different clusters
        max_weight = -1
        best_edge = None
        
        for i in range(n):
            for j in range(i + 1, n):
                cluster_i = None
                cluster_j = None
                for cluster in clusters:
                    if i in cluster:
                        cluster_i = cluster
                    if j in cluster:
                        cluster_j = cluster
                
                if cluster_i != cluster_j and edge_weights[i, j] > max_weight:
                    max_weight = edge_weights[i, j]
                    best_edge = (i, j)

        # If no edge found, algorithm terminates. This could happen if distances are infinite.
        if best_edge is None:
            break
        
        # Merge the clusters containing the nodes of the best edge
        i, j = best_edge
        cluster_i = None
        cluster_j = None
        for cluster in clusters:
            if i in cluster:
                cluster_i = cluster
            if j in cluster:
                cluster_j = cluster
        
        if cluster_i is not None and cluster_j is not None:
            new_cluster = cluster_i.union(cluster_j)
            clusters.remove(cluster_i)
            clusters.remove(cluster_j)
            clusters.append(new_cluster)
            
            # Increase the heuristic value for all edges within the merged clusters
            for node1 in new_cluster:
                for node2 in new_cluster:
                    if node1 != node2:
                        heuristics_matrix[node1, node2] += 1
                        heuristics_matrix[node2, node1] += 1
    
    return heuristics_matrix
