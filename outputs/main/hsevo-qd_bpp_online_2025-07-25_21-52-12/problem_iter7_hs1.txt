import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray, 
    clip_min: float = 0.6469174347127091, 
    clip_max: float = 0.024725649100080967, 
    priority_weight: float = 0.6357660557916002) -> np.ndarray:
    """
    Combines remaining capacity and close fit prioritization with dynamic weighting and clipping.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    priority_fit = can_fit * (1 - (space_left / bins_remain_cap))
    close_fit = np.clip(bins_remain_cap - item, clip_min, clip_max)
    priority = priority_fit + priority_weight * close_fit
    return priority
