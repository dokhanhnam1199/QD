```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Balanced priority score combining available space and relative initial space, penalizing large empty spaces."""
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    space_penalty = 1 - (space_left / bins_remain_cap) ** 2  # Penalize large empty spaces more strongly
    relative_initial_space = bins_remain_cap / np.max(bins_remain_cap, initial=1.0)
    priority = can_fit * (space_penalty + relative_initial_space)
    return priority
```
