```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines remaining capacity and close fit prioritization with dynamic weighting and clipping.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    priority_fit = can_fit * (1 - (space_left / bins_remain_cap))
    close_fit = np.clip(bins_remain_cap - item, 0.8957832532723333, 0.44260458707061934)
    priority_weight = 0.32026293473465717
    priority = priority_fit + priority_weight * close_fit
    return priority
```
