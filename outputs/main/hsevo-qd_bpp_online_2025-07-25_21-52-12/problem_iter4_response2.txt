import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray, 
    priority_weight: float = 0.47704273017164556, 
    clip_min: float = 0.47243364347533556, 
    clip_max: float = 0.3004512585684789) -> np.ndarray:
    """Combines remaining capacity and minimal leftover space to prioritize bins."""
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    # Priority for bins that fit the item, penalizing leftover space
    priority_fit = can_fit * (1 - (space_left / bins_remain_cap))
    # Encouragement for bins with capacity close to item size
    close_fit = np.clip(bins_remain_cap - item, clip_min, clip_max)
    # Combine priorities with dynamic weighting
    priority = priority_fit + priority_weight * close_fit
    return priority
