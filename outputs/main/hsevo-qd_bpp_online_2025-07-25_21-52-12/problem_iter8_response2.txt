```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines dynamic penalties for leftover space and rewards for close fit with non-linear scaling."""
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    priority_fit = can_fit * np.exp(-space_left / bins_remain_cap)  # Non-linear penalty for leftover space
    close_fit = can_fit * np.clip(1 - (space_left / item), 0, 1)  # Reward for close fit
    priority = priority_fit + 0.5 * close_fit  # Balanced combination
    return priority
```
