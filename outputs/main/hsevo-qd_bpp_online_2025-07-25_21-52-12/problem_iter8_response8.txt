```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines remaining capacity, penalizes leftover space dynamically, and rewards close fits adaptively.
    """
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    priority_fit = can_fit * (1 - (space_left / bins_remain_cap))
    close_fit = np.clip(bins_remain_cap - item, 0.9, 0.5)  # Slightly different clipping for better close fit reward
    priority_weight = 0.35  # Adjusted weight for close fit
    priority = priority_fit + priority_weight * close_fit
    return priority
```
