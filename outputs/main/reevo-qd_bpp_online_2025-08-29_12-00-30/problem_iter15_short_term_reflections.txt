Prioritize near-full bins, minimize fragmentation, and balance exploration with exploitation—avoiding purely greedy approaches.




Prioritize simplicity & smoothness; avoid hard thresholds (like exact fit). Sigmoid functions offer adaptable, gradient-based scoring.
Prioritize near-full bins, balance exploration/exploitation, and avoid zero-distance issues. Consider item density.




Combine fit, fullness, exploration, and item-aware bonuses; randomness helps escape local optima.
Prioritize simplicity & direct fit; avoid complex scoring—less is often more effective.




Prioritize exact fits, target fullness (around 70%), and balance exploration with exploitation.




Focus on fit, smooth scoring (sigmoid!), and avoid excessive randomness—simplicity often wins.
Prioritize exact fits; leverage remaining capacity inversely; avoid uniform randomness. Explore weighted combinations!
Prioritize tighter fits & balanced fullness; reduce exploration, tune weights, avoid near-zero divisions.
Prioritize exact fits, then minimize waste; simpler often beats complex, avoid unnecessary scaling.
