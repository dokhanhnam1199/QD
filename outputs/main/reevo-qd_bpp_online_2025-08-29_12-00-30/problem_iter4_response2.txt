```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    fitness = bins_remain_cap - item
    valid_bins = fitness >= 0

    if np.sum(valid_bins) > 0:
        # Assign random priorities within valid bins, scaled by how well the item fits
        priorities[valid_bins] = fitness[valid_bins] + np.random.rand(np.sum(valid_bins)) * 0.1
    return priorities
```
