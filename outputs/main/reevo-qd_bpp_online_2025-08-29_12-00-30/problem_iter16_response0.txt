```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Exact fit has highest priority
    exact_fit_indices = np.where(bins_remain_cap == item)[0]
    priorities[exact_fit_indices] = 1000.0
    # Next best fit has lower priority
    best_fit_indices = np.where(bins_remain_cap >= item)[0]
    if len(best_fit_indices) > 0:
        priorities[best_fit_indices] = 1.0 / (bins_remain_cap[best_fit_indices] - item + 1e-6)
    return priorities
```
