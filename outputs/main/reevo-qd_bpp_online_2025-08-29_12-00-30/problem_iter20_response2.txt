```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Calculate the ratio of item size to remaining capacity for each bin
    ratios = item / (bins_remain_cap + 1e-6)  # Avoid division by zero

    # Prioritize bins where the item fits and the ratio is high (bin is almost full)
    valid_bins = bins_remain_cap >= item
    priorities[valid_bins] = 1.0 / ratios[valid_bins]

    return priorities
```
