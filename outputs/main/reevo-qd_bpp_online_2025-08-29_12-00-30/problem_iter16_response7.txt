```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Calculate the ratio of item size to remaining bin capacity
    ratios = item / (bins_remain_cap + 1e-6)  # Add a small value to avoid division by zero

    # Prioritize bins where the ratio is high (item fills a large portion of the bin)
    priorities = ratios

    return priorities
```
