```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    remaining_space = bins_remain_cap - item

    # Give higher priority to bins where the remaining space is small,
    # but penalize if the item is much larger than the remaining space.
    # Avoid division by zero.
    valid_bins = remaining_space >= 0
    if np.any(valid_bins):
        priorities[valid_bins] = (bins_remain_cap[valid_bins] / (item + 1e-6)) * (1.0 / (remaining_space[valid_bins] + 1e-6))
    return priorities
```
