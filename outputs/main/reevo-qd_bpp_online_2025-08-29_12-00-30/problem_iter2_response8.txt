```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a combination of exact fit and scaled fit score.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Prioritize exact fits
    exact_fit = bins_remain_cap == item
    priorities[exact_fit] = 1000.0

    # Prioritize bins where the item fits with minimal remaining capacity
    fits = bins_remain_cap >= item
    if np.any(fits):
        remaining_after_fit = bins_remain_cap[fits] - item
        # Use a scaled fit score based on remaining capacity
        priorities[fits] = 1.0 / (remaining_after_fit + 1e-6)  # Avoid division by zero

    return priorities
```
