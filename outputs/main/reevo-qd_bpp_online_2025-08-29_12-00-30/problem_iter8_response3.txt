```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    bins_remain_cap = np.array(bins_remain_cap)
    priorities = np.zeros_like(bins_remain_cap)

    # Prioritize exact fits with very high priority
    exact_fit = bins_remain_cap == item
    priorities[exact_fit] = 1000.0

    # For bins where the item fits, calculate a sigmoid-based fit score
    fits = bins_remain_cap >= item
    fits = np.logical_and(fits, ~exact_fit)  # Exclude exact fits already prioritized

    if np.any(fits):
        fit_scores = item / bins_remain_cap[fits]
        # Use a scale factor to sharpen the sigmoid
        priorities[fits] = 1.0 / (1 + np.exp(-1.5 * (fit_scores - 0.5)))

    return priorities
```
