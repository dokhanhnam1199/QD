def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on their remaining capacity relative to the item size, favoring bins that can accommodate the item with minimal wasted space, and penalizing bins that are too full or too empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority.append(1 / (1 + waste)) # Lower waste is better
    else:
      priority.append(-1)
  return priority
