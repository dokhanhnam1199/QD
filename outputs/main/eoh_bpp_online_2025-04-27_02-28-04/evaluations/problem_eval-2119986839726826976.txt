def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates bin priorities based on a ratio of remaining capacity to item size, favoring bins where the item fills a significant portion of the remaining space but also leaving some capacity for future items.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = float(item) / cap
      priority.append(fill_ratio - abs(fill_ratio - 0.7)) # Favor ratios around 0.7.
    else:
      priority.append(-1)
  return priority
