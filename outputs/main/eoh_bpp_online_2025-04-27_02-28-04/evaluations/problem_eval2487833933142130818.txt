def priority_v2(item, bins_remain_cap):
  """{This algorithm sorts bins by remaining capacity, assigning higher priority to bins with remaining capacity closest to the item size, considering a penalty for exceeding capacity and a bonus for perfect fit.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = 100 - abs(cap - item) # Higher score for bins closer in size to item
      if cap > item:
          priority_score -= (cap - item) * 0.1 #Penalty for being bigger
      else:
          priority_score += 10 # Bonus for perfect fit
    else:
      priority_score = -1000  # Item doesn't fit

    priority.append(priority_score)
  return priority
