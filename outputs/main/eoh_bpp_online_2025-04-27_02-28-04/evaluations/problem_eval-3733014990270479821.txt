def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, with a bonus for bins where the item fills a significant portion of the remaining space, and a penalty for exceeding capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = item / cap
      priority_score = fill_ratio + (1 - (cap - item) / cap)  # Reward close fits, scale 0-2
    else:
      priority_score = -1  # Item doesn't fit

    priority.append(priority_score)
  return priority
