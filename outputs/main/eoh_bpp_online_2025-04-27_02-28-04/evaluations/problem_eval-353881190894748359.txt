def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on how closely the item's size matches the bin's remaining capacity, favoring bins where the item fills a significant portion without exceeding capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            priority_score = fill_ratio
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
