def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the remaining capacity, penalizing bins that would leave a small remaining space after packing the item, thus promoting better space utilization.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_space = cap - item
      if remaining_space <= item * 0.1: #if remaining capacity is too small compared to the item size.
        priority_score = 0  # Penalize bins that would leave very small space
      else:
        priority_score = cap #prioritize larger capacity
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
