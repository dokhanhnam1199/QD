def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on how well the remaining capacity aligns with the item size, rewarding bins that can accommodate the item without excessive remaining space and penalizing those that cannot or would leave too much space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_space_ratio = (cap - item) / item
      priority.append(1 / (1 + remaining_space_ratio)) # Prefer bins with less remaining space.
    else:
      priority.append(-1)
  return priority
