def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on the remaining capacity after packing the item into it, penalizing bins that become too full or too empty, aiming to keep bins at a medium fill level.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining = cap - item
      # Penalize bins that become too full (remaining close to 0) or too empty (remaining close to the original capacity)
      priority_score = 1 / (abs(remaining - (cap / 2)) + 0.001) # Favors bins where remaining cap is around half of original
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
