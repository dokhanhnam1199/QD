def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority to bins based on the ratio of the item size to the bin's remaining capacity, favoring bins where the item fills a significant portion of the remaining space without overflowing.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      ratio = item / cap
      priority.append(ratio)  # Higher priority for bins the item fills more of.
    else:
      priority.append(-1)
  return priority
