def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of remaining capacity and a bonus if the item perfectly fills the bin, otherwise penalizing it according to how much it overflows or how much space is wasted.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap == item:
            priority.append(float('inf')) # Perfect fit, highest priority
        elif cap > item:
            priority.append(cap - (cap - item)**2) # Penalize wasted space, less penalty if closer to perfect fit.
        else:
            priority.append(cap - (item - cap)**2 - 100) # Severe penalty for overflow.
    return priority
