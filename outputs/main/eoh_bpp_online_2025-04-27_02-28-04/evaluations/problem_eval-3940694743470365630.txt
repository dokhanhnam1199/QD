def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on the percentage of bin capacity that would be utilized by the item, favoring bins that would be filled to a moderate extent.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      utilization_ratio = item / 100 if (item/ 100) <= 1 else 1
      priority_score = utilization_ratio # Favors bins with higher percentage utilization
    else:
      priority_score = -1 # Assign a very low priority if the item doesn't fit
    priority.append(priority_score)
  return priority
