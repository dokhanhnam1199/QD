def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority based on the "level" of each bin relative to the item size, creating a tiered preference for bins closest to the item's size without being smaller.}"""
  priorities = []
  for remain_cap in bins_remain_cap:
    if remain_cap >= item:
      level = abs(remain_cap - item)
      priority = 1.0 / (level + 0.00001)  # Higher priority for bins closer to item size
    else:
      priority = -1 

    priorities.append(priority)
  return priority
