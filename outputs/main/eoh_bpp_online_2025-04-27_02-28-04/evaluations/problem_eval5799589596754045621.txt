def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a weighted sum of remaining capacity ratio and item fit, favoring bins that closely accommodate the item while considering overall bin fill level.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      capacity_ratio = item / cap
      fit_score = 1 - (cap - item) / cap
      priority_score = 0.7 * capacity_ratio + 0.3 * fit_score
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
