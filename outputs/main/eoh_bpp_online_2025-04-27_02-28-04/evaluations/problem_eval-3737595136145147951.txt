def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and wasted space, prioritizing bins that can accommodate the item well without excessive waste.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority_score = cap - wasted_space * 0.5 # Modified from First Fit Decreasing to consider wasted space.
      priority.append(priority_score)
    else:
      priority.append(-1)
  return priority
