def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by considering the ratio of item size to remaining capacity, rewarding bins where the item fills a significant portion of the remaining space without overfilling.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = float(item) / cap
      priority_score = fill_ratio
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
