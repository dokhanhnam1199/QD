def priority_v2(item, bins_remain_cap):
    """{Assign a priority score to each bin based on remaining capacity and item size, favoring bins with remaining capacity close to the item size, and penalizing bins that are too full or too empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority.append(cap - item) # Smaller differences get higher priority
        else:
            priority.append(-1000000) # Large negative number, so such bins aren't chosen
    return priority
