def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how close the item size is to half of the bin's remaining capacity, encouraging balanced fill levels and avoiding overly full or empty bins.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      diff_from_half = abs(cap / 2 - item)
      priority_score = 1 / (diff_from_half + 0.001) # Avoid division by zero
    else:
      priority_score = -1 
    priority.append(priority_score)
  return priority
