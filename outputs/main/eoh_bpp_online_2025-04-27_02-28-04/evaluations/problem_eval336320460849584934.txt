def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates bin priorities based on the 'First Fit Decreasing' principle, simulating a pre-sorted item list for each bin to estimate the best possible packing density.}"""
  priorities = []
  bin_capacity = 1.0 # Assuming bin capacity is 1

  for remain_cap in bins_remain_cap:
    if remain_cap >= item:
      # Simulate placing the item and estimating remaining space
      temp_items = [item]
      remaining_space = remain_cap - item

      # Estimate how many more items of average size could fit
      estimated_items = int(remaining_space / (item / 2 if item > 0 else 0.25)) #Avoid division by zero
      
      # A simple estimation factor based on filled capacity
      priority = (remain_cap - remaining_space)
    else:
      priority = -1  # Item doesn't fit

    priorities.append(priority)
  return priority
