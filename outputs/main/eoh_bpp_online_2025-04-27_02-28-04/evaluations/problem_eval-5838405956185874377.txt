def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the remaining bin capacity, favoring bins with capacity slightly larger than the item, and penalizing those that are much larger or smaller.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = (item / cap) - ((cap - item) / cap)**2
      priority.append(priority_score)
    else:
      priority.append(-1)
  return priority
