def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority based on a combination of remaining capacity and wasted space if the item is placed in the bin, favoring bins with sufficient capacity and minimal waste.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append(cap + 1.0/(waste + 0.0001)) #Adding remaining capacity to waste to create the priority score
        else:
            priority.append(-1)  # Assign -1 if the item doesn't fit
    return priority
