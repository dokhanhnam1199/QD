def priority_v2(item, bins_remain_cap):
  """{This algorithm combines the remaining capacity and wasted space with a penalty for highly filled bins, favoring bins with sufficient space while discouraging near-full occupancy.}"""
  priorities = []
  for remain_cap in bins_remain_cap:
    if remain_cap >= item:
      wasted_space = remain_cap - item
      fill_ratio = item / remain_cap
      priority = remain_cap + (1.0 / (wasted_space + 0.00001)) - 10 * (fill_ratio**4)
    else:
      priority = -1
    priorities.append(priority)
  return priority
