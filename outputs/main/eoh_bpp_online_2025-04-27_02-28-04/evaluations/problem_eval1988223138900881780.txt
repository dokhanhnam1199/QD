def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on how closely the item's size matches the golden ratio proportion of the remaining capacity, rewarding matches and penalizing mismatches.}"""
    priority = []
    golden_ratio = 1.618
    for cap in bins_remain_cap:
        if cap >= item:
            ideal_item_size = cap / golden_ratio
            difference = abs(item - ideal_item_size)
            priority_score = 1 / (difference + 0.0001) # Avoid division by zero and reward closer matches
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
