def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority to bins based on how well the item fills the bin, rewarding near-full bins and penalizing excessive or insufficient filling.}"""
  priority = []
  bin_capacity = 100 #Assume bin capacity is 100
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = item / bin_capacity
      space_wasted_ratio = (cap - item) / bin_capacity
      priority_score = fill_ratio * (1 - space_wasted_ratio)  # Reward filling, penalize wasted space
    else:
      priority_score = -1  # Item doesn't fit
    priority.append(priority_score)
  return priority
