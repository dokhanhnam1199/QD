def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and wasted space if the item is placed in the bin, favoring bins that can accommodate the item with minimal wasted space while also considering the overall fullness of the bin.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority = (cap / sum(bins_remain_cap) ) + (1 / (wasted_space + 0.0001)) # Adding a small constant to avoid division by zero
        else:
            priority = -1  # Assign a very low priority if the item doesn't fit
        priorities.append(priority)
    return priority
