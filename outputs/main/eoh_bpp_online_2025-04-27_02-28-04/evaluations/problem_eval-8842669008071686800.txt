def priority_v2(item, bins_remain_cap):
  """
  {This algorithm calculates priority scores for each bin based on a combination of remaining capacity, fill percentage after packing the item, and a bonus for bins already partially filled, favoring bins that result in higher fill percentages and avoid bins that are too empty or too full after packing.}
  """
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_percentage = (1 - (cap - item) / 100)
      bonus = 0
      if cap < 100:
          bonus = 0.1
      
      priority.append(fill_percentage + bonus)
    else:
      priority.append(-1) 
  return priority
