def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by calculating the relative waste if the item were placed in each bin, penalizing bins with either very high or very low utilization after placement.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      utilization = (100 - new_cap)/100
      waste_ratio = abs(utilization - 0.8)
      priority_score = 1 / (1 + waste_ratio**2)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
