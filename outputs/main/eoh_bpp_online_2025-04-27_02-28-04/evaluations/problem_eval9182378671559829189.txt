def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority to each bin based on a combination of remaining capacity and the wasted space if the item is placed in the bin, favoring bins that can accommodate the item with minimal wasted space.}"""
  priorities = []
  for remain_cap in bins_remain_cap:
    if remain_cap >= item:
      wasted_space = remain_cap - item
      priority = remain_cap + (1.0 / (wasted_space + 0.00001)) # Avoid division by zero
    else:
      priority = -1  # Assign a very low priority if the item doesn't fit
    priorities.append(priority)
  return priority
