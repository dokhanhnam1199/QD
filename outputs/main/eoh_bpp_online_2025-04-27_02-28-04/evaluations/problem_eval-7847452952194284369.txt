def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority based primarily on minimizing wasted space, with a secondary consideration for sufficient capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append(1.0/(waste + 0.0001) + (cap/1000.0)) # Prioritize minimum waste, add capacity as a tie-breaker
        else:
            priority.append(-1)  # Assign -1 if the item doesn't fit
    return priority
