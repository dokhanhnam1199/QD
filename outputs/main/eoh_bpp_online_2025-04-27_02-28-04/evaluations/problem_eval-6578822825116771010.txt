def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the square of the remaining capacity minus a penalty proportional to the difference between the item size and an ideal fill percentage of the bin.}"""
  priority = []
  ideal_fill = 0.8  # Aim for 80% fill
  for cap in bins_remain_cap:
    if cap >= item:
      diff = abs(item - ideal_fill * cap)
      priority.append(cap**2 - diff)
    else:
      priority.append(-1)
  return priority
