def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, adjusted by a scaling factor to favor bins that are neither too full nor too empty.}"""
  priorities = []
  for remain_cap in bins_remain_cap:
    if remain_cap >= item:
      priority = (float(item) / remain_cap) * (1 - (float(item) / 100))# Scale down priority by a constant value if the item takes over 1% of bin capacity.
    else:
      priority = -1
    priorities.append(priority)
  return priority
