def priority_v3(item, bins_remain_cap):
    """{This algorithm assigns priority based on the ratio of item size to remaining capacity, penalized by the absolute wasted space if the item is placed, and heavily penalized if the item doesn't fit.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append((item / cap) - (waste * 0.01)) # Ratio of item size to capacity, reduced by waste
        else:
            priority.append(-1000)  # Heavily penalize bins that don't fit
    return priority
