def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of remaining capacity utilized by the item, favoring bins that achieve high utilization without exceeding capacity.}"""
  priorities = []
  for remain_cap in bins_remain_cap:
    if remain_cap >= item:
      utilization_ratio = float(item) / remain_cap
      priority = utilization_ratio
    else:
      priority = -1  # Assign a very low priority if the item doesn't fit
    priorities.append(priority)
  return priority
