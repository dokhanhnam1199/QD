def priority_v2(item, bins_remain_cap):
    """{Assign a priority score to each bin based on the ratio of item size to remaining capacity, favoring bins where the item fills a large portion of the remaining space but also penalizing bins that are too full.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            penalty = 0
            if cap < item * 1.1: # Penalize bins that are almost completely full.
                penalty = (item * 1.1 - cap) * 10

            priority.append(fill_ratio - penalty)
        else:
            priority.append(-1)  # Cannot fit
    return priority
