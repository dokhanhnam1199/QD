def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by considering the remaining capacity, penalizing bins that would become nearly full or nearly empty after placing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_capacity = cap - item
      # Penalize bins that will be close to full or close to empty
      penalty = abs(remaining_capacity - (100-remaining_capacity) )/ 100 if (remaining_capacity <= (100-remaining_capacity) ) else abs(100-remaining_capacity - (remaining_capacity) )/100

      priority_score = (cap - item) / 100 - penalty
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
