def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority scores for each bin based on the ratio of item size to remaining capacity, penalized by the remaining capacity to favor bins that are a closer fit without excessive remaining space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = (item / cap) - (cap / 1000)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
