def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority to each bin based on the ratio of the item size to the remaining capacity of the bin, penalized by the square of the wasted space if the item is placed in the bin, favoring bins with a closer match between item size and remaining capacity while discouraging large wasted space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority_score = (item / cap) - (wasted_space**2 / 1000)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
