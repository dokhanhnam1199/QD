def priority_v3(item, bins_remain_cap):
    """
    {This algorithm calculates the priority of each bin by considering the remaining capacity and applies a more aggressive penalty for wasted space, favoring bins with minimal leftover capacity.}
    """
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority_score = cap - (wasted_space * 0.8)  # Higher penalty for wasted space
            priority.append(priority_score)
        else:
            priority.append(-1)

    return priority
