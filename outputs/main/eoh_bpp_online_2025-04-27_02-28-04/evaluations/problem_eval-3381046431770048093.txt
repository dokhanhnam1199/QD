def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by considering the remaining capacity and a penalty based on the absolute difference between the item size and a bin size threshold, effectively encouraging larger items to be packed into bins with sufficient space and penalizing bins that are too small.}"""
  priority = []
  bin_size_threshold = 2
  for cap in bins_remain_cap:
    if cap >= item:
      diff = abs(item - bin_size_threshold) # Calculate the difference between item size and bin size threshold
      priority_score = cap - diff # Adjust the priority score based on the difference
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
