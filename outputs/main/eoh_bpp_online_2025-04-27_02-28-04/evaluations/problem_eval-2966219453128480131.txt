def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the wasted space if the item is placed in that bin, penalizing bins with large wasted space and only considering bins that can accommodate the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority_score = -wasted_space  # Lower wasted space is better
    else:
      priority_score = -float('inf')  # Cannot fit, very low priority
    priority.append(priority_score)
  return priority
