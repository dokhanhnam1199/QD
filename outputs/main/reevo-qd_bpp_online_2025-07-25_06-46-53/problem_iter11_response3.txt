```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize near-full bins and minimize waste.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    capacity_diff = np.abs(bins_remain_cap - item)
    
    # Calculate the ratio of remaining capacity to bin capacity
    remaining_ratio = bins_remain_cap / (bins_remain_cap + item)
    
    # Invert the differences to give higher priority to bins with smaller differences
    priority_scores = 1 / (capacity_diff + 1e-8)  # add a small value to avoid division by zero
    
    # Give higher priority to near-full bins
    near_full_priority = 1 - remaining_ratio
    
    # Balance remaining capacity and weighted priorities
    priority_scores *= (near_full_priority + 0.5 * (bins_remain_cap / (bins_remain_cap + item)))
    
    return priority_scores
```
