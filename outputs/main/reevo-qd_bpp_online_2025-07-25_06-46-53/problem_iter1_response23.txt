```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to encourage the packing of items into bins 
    where the item size is close to the remaining capacity, thereby minimizing 
    waste and reducing the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity of each bin
    remaining_cap = np.copy(bins_remain_cap)

    # Calculate the absolute difference between item size and remaining capacity
    diff = np.abs(remaining_cap - item)

    # Use the inverse of the difference as the priority score, so that bins 
    # with smaller differences (i.e., closer to fitting the item perfectly) 
    # have higher priority scores
    priority = 1 / (diff + 1e-8)  # Add a small constant to avoid division by zero

    return priority
```
