```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize near-full bins, simplify weights, and balance capacity.
    It combines multiple factors with weighted priorities to minimize waste and optimize bin usage.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    capacity_diff = np.abs(bins_remain_cap - item)
    
    # Simplify the weights and balance capacity
    capacity_balance = bins_remain_cap / (bins_remain_cap.max() + 1e-8)
    
    # Calculate the priority scores, combining the different considerations with weighted priorities
    # prioritize near-full bins, minimize waste, and balance capacity
    priority_scores = 0.5 * (1 / (capacity_diff + 1e-8)) + 0.3 * capacity_balance + 0.2 * (1 - item / (bins_remain_cap + 1e-8))
    
    return priority_scores
```
