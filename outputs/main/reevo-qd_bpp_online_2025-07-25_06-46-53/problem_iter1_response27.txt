```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have enough capacity to hold the item
    and give higher priority to bins that are closest to being full after adding the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the item can fit into each bin
    can_fit = bins_remain_cap >= item
    
    # Initialize priority scores to zero
    priority = np.zeros_like(bins_remain_cap)
    
    # For bins that can fit the item, calculate the priority score
    priority[can_fit] = (bins_remain_cap[can_fit] - item) / (bins_remain_cap[can_fit])
    
    # Bins that cannot fit the item will have a priority score of -1 (low priority)
    priority[~can_fit] = -1
    
    # Bins that are full after adding the item will have slightly higher priority
    full_after_adding = (bins_remain_cap - item) == 0
    priority[full_after_adding] = 1
    
    return priority
```
