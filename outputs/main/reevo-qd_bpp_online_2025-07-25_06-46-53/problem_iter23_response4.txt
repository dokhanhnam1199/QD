```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize near-full bins, simplify weights, and balance capacity.
    It considers the remaining capacity of each bin and the size difference between the item and the bin capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the ratio of the remaining capacity of each bin to the item size
    capacity_ratio = bins_remain_cap / (item + 1e-8)  # add a small value to avoid division by zero
    
    # Calculate the size difference between the item and the remaining capacity of each bin
    size_diff = np.abs(bins_remain_cap - item)
    
    # Calculate the priority scores, emphasizing near-full bins and minimal waste
    priority_scores = capacity_ratio / (size_diff + 1e-8)  # add a small value to avoid division by zero
    
    # Give higher priority to near-full bins
    near_full_score = 1.0 - (size_diff / (bins_remain_cap + 1e-8))  # add a small value to avoid division by zero
    priority_scores *= near_full_score
    
    return priority_scores
```
