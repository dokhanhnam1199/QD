```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins where the item size is close to the remaining capacity,
    thereby minimizing waste and reducing the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between item size and remaining capacity
    diff = np.abs(bins_remain_cap - item)

    # Use the inverse of the difference as the priority score, with a small constant to avoid division by zero
    priority = 1 / (diff + 1e-8)

    # To further encourage packing into bins that are more empty, multiply the priority by the remaining capacity
    priority *= bins_remain_cap

    return priority
```
