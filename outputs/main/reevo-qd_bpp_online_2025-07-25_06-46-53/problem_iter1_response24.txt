```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have just enough capacity to 
    hold the item. It avoids overfilling bins and minimizes waste.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity of each bin after adding the item
    remaining_cap = bins_remain_cap - item
    
    # Calculate the absolute difference between the remaining capacity and zero
    # This favors bins that have just enough capacity to hold the item
    diff = np.abs(remaining_cap)
    
    # Calculate the priority score as the inverse of the difference
    # This ensures that bins with the smallest difference (i.e., just enough capacity) 
    # have the highest priority
    priority = 1 / np.where(diff == 0, np.inf, diff)
    
    # Assign a lower priority to bins that cannot hold the item
    priority = np.where(remaining_cap >= 0, priority, -1)
    
    return priority
```
