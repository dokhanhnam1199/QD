```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes near-full bins and simplifies weights to minimize waste.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity ratio for each bin
    capacity_ratio = bins_remain_cap / (bins_remain_cap + item)
    
    # Calculate the size difference between the item and the remaining capacity of each bin
    size_diff = np.abs(bins_remain_cap - item)
    
    # Calculate the priority score based on the capacity ratio and size difference
    priority_scores = capacity_ratio / (size_diff + 1e-8)  # add a small value to avoid division by zero
    
    # Give higher priority to near-full bins
    priority_scores *= (1 - capacity_ratio)
    
    return priority_scores
```
