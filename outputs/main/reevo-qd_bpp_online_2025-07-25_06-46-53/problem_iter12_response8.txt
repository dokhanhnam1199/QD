```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to minimize waste and prioritize bins 
    that are almost full, thereby reducing the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the waste that would be generated if the item is added to each bin
    waste = np.maximum(0, bins_remain_cap - item)
    
    # Calculate the priority score as the inverse of the waste, with a higher priority for near-full bins
    priority = np.where(bins_remain_cap >= item, 1 / (waste + 1e-6), 0)
    
    # Prioritize bins with the smallest waste and near-full bins
    priority *= np.where(bins_remain_cap > 0, 1 / (bins_remain_cap + item + 1e-6), 1e-6)
    
    return priority
```
