```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes near-full bins and minimizes waste by 
    preferring bins with remaining capacities closest to the item size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    capacity_diff = np.abs(bins_remain_cap - item)
    
    # Calculate the priority score as a combination of near-full bin bonus and remaining capacity
    priority_scores = bins_remain_cap / (capacity_diff + 1e-8)  # add a small value to avoid division by zero
    
    return priority_scores
```
