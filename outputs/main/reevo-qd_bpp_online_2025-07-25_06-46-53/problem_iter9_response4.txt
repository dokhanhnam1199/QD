```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize near-full bins, minimize waste, and simplify weights for better online Bin Packing heuristics performance.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_add = bins_remain_cap - item
    
    # Prioritize near-full bins by giving higher priority to bins with remaining capacity closest to 0
    near_full_priority = 1 / (np.abs(remaining_cap_after_add) + 1e-8)  # add a small value to avoid division by zero
    
    # Minimize waste by giving higher priority to bins with less remaining capacity
    min_waste_priority = 1 - (bins_remain_cap / (bins_remain_cap + item))
    
    # Simplify weights by using a linear combination of the two priorities
    priority_scores = 0.5 * near_full_priority + 0.5 * min_waste_priority
    
    return priority_scores
```
