```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to encourage the algorithm to place the item in a bin 
    where the remaining capacity is closest to the item size. If multiple bins have the same 
    closest remaining capacity, the function will prefer the bin with the least remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the item size and each bin's remaining capacity
    diff = np.abs(bins_remain_cap - item)
    
    # Calculate the inverse of the differences to get the priority scores
    priority = 1 / (diff + 1e-6)  # Add a small value to avoid division by zero
    
    # Where the differences are equal, the bin with the least remaining capacity should have higher priority
    secondary_priority = -bins_remain_cap
    
    # Combine the two priorities
    return priority + 0.01 * secondary_priority
```
