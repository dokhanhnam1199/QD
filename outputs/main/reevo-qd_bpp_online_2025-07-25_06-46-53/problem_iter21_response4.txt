```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize near-full bins, simplify weights, 
    and focus on key factors like remaining capacity and size differences to minimize 
    waste and optimize online Bin Packing performance.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    capacity_diff = np.abs(bins_remain_cap - item)
    
    # Prioritize near-full bins by giving higher priority to bins with smaller remaining capacity
    near_full_priority = 1 / (bins_remain_cap + 1e-8)  # add a small value to avoid division by zero
    
    # Simplify weights by using a linear combination of the two priorities
    priority_scores = 0.7 * near_full_priority + 0.3 / (capacity_diff + 1e-8)
    
    return priority_scores
```
