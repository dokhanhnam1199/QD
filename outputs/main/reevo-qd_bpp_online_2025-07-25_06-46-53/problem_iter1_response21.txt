```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to encourage the packing of items into bins 
    where the item size is close to the remaining capacity, thereby minimizing 
    waste and reducing the number of bins needed.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the waste that would be generated if the item is added to each bin
    waste = np.maximum(bins_remain_cap - item, 0)
    
    # Calculate the ratio of the item size to the remaining capacity in each bin
    ratio = item / (bins_remain_cap + 1e-9)  # Add a small value to avoid division by zero
    
    # Calculate the priority score for each bin based on the waste and ratio
    priority = 1 / (waste + 0.01) * (1 - np.abs(1 - ratio))
    
    return priority
```
