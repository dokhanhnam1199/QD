```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins that have the least amount of remaining capacity and 
    can still fit the item. If a bin cannot fit the item, its priority is set to negative infinity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity for each bin that can still fit the item
    # If a bin cannot fit the item, set its capacity to infinity
    remaining_cap_with_item = np.where(bins_remain_cap >= item, bins_remain_cap - item, np.inf)
    
    # Assign a high priority to bins with the least amount of remaining capacity
    priority = -remaining_cap_with_item
    
    # Set priority to negative infinity if the item cannot fit in a bin
    # This step is not necessary because where() already sets the value to infinity,
    # which will be converted to negative infinity when negating
    # priority[bins_remain_cap < item] = -np.inf
    
    return priority
```
