```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority for each bin using a robust Best-Fit heuristic.
    Prioritizes bins that offer the tightest fit for the item, while
    assigning a very low score to bins that cannot accommodate it.
    """
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float) # Deprioritize non-fitting bins
    can_fit_mask = bins_remain_cap >= item
    remaining_capacity_after_fit = bins_remain_cap[can_fit_mask] - item
    # Tighter fits (smaller remaining capacity) get higher scores (less negative)
    priorities[can_fit_mask] = -remaining_capacity_after_fit 
    return priorities
```
