```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, bin_capacity: float) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.
        bin_capacity: The capacity of each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item
    remaining_after_addition = bins_remain_cap - item
    
    # Assign priority based on whether the bin can accommodate the item
    # and its remaining capacity after addition, with a deterministic tie-breaker
    priorities = np.where(remaining_after_addition >= 0, 
                          -(remaining_after_addition / bin_capacity), 
                          -np.inf)
    
    return priorities
```
