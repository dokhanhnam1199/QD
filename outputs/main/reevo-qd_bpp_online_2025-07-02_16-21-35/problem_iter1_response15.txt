```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # First-Fit-Decreasing heuristic
    # Prioritize bins that can fit the item. Larger remaining capacity is preferred.
    # If the item doesn't fit, assign a very low priority.
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            priorities[i] = cap - item # Smaller waste is higher priority
        else:
            priorities[i] = -np.inf # Do not pick a bin that cannot fit

    return priorities
```
