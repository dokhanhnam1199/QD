```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:

    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Feasibility check: eliminate bins that can't fit the item
    feasible_bins = bins_remain_cap >= item
    priorities[~feasible_bins] = -np.inf  # Set priority to negative infinity if not feasible
    priorities[bins_remain_cap == 0] = -np.inf # Never pick a full bin

    # Minimize waste (Best Fit): prioritize bins with the least remaining space after placement
    waste = bins_remain_cap - item
    waste[~feasible_bins] = np.inf  # Ignore infeasible bins for waste calculation
    priorities[feasible_bins] += (1 / (waste[feasible_bins] + 0.0001)) # high waste, low priority.

    # Maximize capacity utilization
    capacity_utilization = item / bins_remain_cap
    capacity_utilization[~feasible_bins] = 0 # ignore infeasible bins
    priorities[feasible_bins] += capacity_utilization[feasible_bins] # high utilization, high priority

    # Avoid fragmentation / Perfect fills: add a bonus for filling bins completely
    perfect_fit = np.isclose(waste, 0)
    priorities[perfect_fit] += 5  # Substantial bonus for perfect fit

    # Dynamic adjustment based on remaining capacity: adjust priorities based on how full the bins are
    available_bins = bins_remain_cap[bins_remain_cap > 0]
    if available_bins.size > 0:  # Check if there are any non-empty bins
        average_capacity = np.mean(available_bins)
        capacity_ratio = bins_remain_cap / average_capacity
        priorities += capacity_ratio * 0.5 # Increase weight based on average capacity
    else:
        priorities[feasible_bins] += 0.1 # if all bins are full, give a small bonus to the feasible ones so they can still be selected if any bins get freed up later

    return priorities
```
