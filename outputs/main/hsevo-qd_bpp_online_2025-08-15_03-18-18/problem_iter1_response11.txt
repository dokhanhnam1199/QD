```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    
    bin_capacities = 1.0  # Assuming a standard bin capacity of 1.0, can be generalized.
    
    potential_fits = bins_remain_cap - item
    
    valid_bins_mask = potential_fits >= 0
    
    priorities = np.zeros_like(bins_remain_cap)
    
    if np.any(valid_bins_mask):
        
        priorities[valid_bins_mask] = 1.0 / (potential_fits[valid_bins_mask] + 1e-9) # Add epsilon to avoid division by zero

    return priorities
```
