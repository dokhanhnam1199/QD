```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins_mask = bins_remain_cap >= item
    suitable_bins_capacities = bins_remain_cap[suitable_bins_mask]
    
    if suitable_bins_capacities.size > 0:
        
        remaining_space = suitable_bins_capacities - item
        
        
        priorities[suitable_bins_mask] = 1.0 / (remaining_space + 1e-6)  
        
        
        best_fit_index = np.argmin(remaining_space)
        priorities[suitable_bins_mask][best_fit_index] *= 2.0  
        
    return priorities
```
