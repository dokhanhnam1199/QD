```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    valid_bins_mask = bins_remain_cap >= item
    valid_bins_cap = bins_remain_cap[valid_bins_mask]
    if valid_bins_cap.size == 0:
        return np.zeros_like(bins_remain_cap)
    
    scores = np.zeros_like(bins_remain_cap)
    
    fit_scores = valid_bins_cap - item
    
    exp_scores = np.exp(fit_scores)
    
    normalized_scores = exp_scores / np.sum(exp_scores)
    
    scores[valid_bins_mask] = normalized_scores
    
    return scores
```
