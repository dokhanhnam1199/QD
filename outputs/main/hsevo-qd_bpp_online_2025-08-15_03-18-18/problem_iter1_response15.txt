```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            
            remaining_cap = bins_remain_cap[i]
            
            
            if remaining_cap == item:
                priorities[i] = 1.0  # Perfect fit, highest priority
            else:
                
                priorities[i] = 1.0 / (remaining_cap - item + 1e-9) # Inverse proximity, higher score for bins that are closer to fitting the item without being perfect
                
    return priorities
```
