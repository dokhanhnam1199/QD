```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most remaining capacity
    andались most closely matches the size of the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Compute the remaining capacity of each bin
    remaining_cap = bins_remain_cap
    
    # Compute the similarity between the item size and the remaining capacity of each bin
    similarity = np.abs(item - remaining_cap) ** -1
    
    # Favor bins that have more remaining capacity
    priority = similarity * remaining_cap
    
    # Avoid overflow by making sure no bin has a 'nan' priority score
    priority[np.isinf(priority)] = 0.0
    
    return priority
```
