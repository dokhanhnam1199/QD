```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have enough capacity to hold the item
    and give higher priority to bins with less remaining capacity, as this can help to minimize
    the number of bins used.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priority scores with zeros
    priority = np.zeros_like(bins_remain_cap)

    # Iterate over each bin
    for i in range(len(bins_remain_cap)):
        # If the bin has enough capacity to hold the item
        if bins_remain_cap[i] >= item:
            # Calculate the priority score based on the remaining capacity
            # Give higher priority to bins with less remaining capacity
            priority[i] = 1 / (bins_remain_cap[i] + 1e-9)
        else:
            # Give zero priority to bins that cannot hold the item
            priority[i] = 0

    return priority
```
