```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most remaining capacity
    andğına that can fit the item with the least amount of leftover space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate how much space will be left over in each bin if the item is added
    leftover_space = bins_remain_cap - item
    
    # Penalize bins that are too small to fit the item
    valid_bins = np.where(leftover_space >= 0, leftover_space, -np.inf)
    
    # Favor bins that have the most remaining capacity but also minimize leftover space
    priority = 1 / (1 + np.square(valid_bins))
    
    # Apply an exponential term to prioritize bins that are closer to fitting the item exactly
    priority *= np.exp(-valid_bins / np.clip(valid_bins.max(), a_min=1e-8, a_max=None))
    
    return priority
```
