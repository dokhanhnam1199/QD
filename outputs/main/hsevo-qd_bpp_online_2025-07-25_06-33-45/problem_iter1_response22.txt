```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most remaining capacity,
    while at the same time trying to fit items into bins where they would 
    minimize the remaining capacity, thus reducing waste.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the waste after adding the item to each bin
    waste_after_adding_item = np.maximum(bins_remain_cap - item, 0)
    
    # Calculate the ratio of the waste to the total capacity of the bin
    # to prioritize bins with less waste
    waste_ratio = waste_after_adding_item / bins_remain_cap
    
    # Calculate the priority score as a ratio of the remaining capacity 
    # after adding the item to the total capacity of the bin, which prioritizes 
    # bins where the item fits better
    priority = 1 / (1 + waste_ratio)
    
    return priority
```
