```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have enough capacity to hold the item
    and give higher priority to bins that have just enough capacity, thus minimizing waste.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Create a mask to identify bins that can hold the item
    can_hold_item = bins_remain_cap >= item
    
    # Calculate the remaining capacity after adding the item for each bin
    remaining_cap_after_adding_item = np.where(can_hold_item, bins_remain_cap - item, np.inf)
    
    # Calculate the priority as the inverse of the remaining capacity after adding the item
    # This will prioritize bins that have just enough capacity to hold the item
    priority = np.where(can_hold_item, 1 / (1 + remaining_cap_after_adding_item), 0)
    
    return priority
```
