```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function favors bins that have the most available capacity,
    while being mindful of the item's size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Compute the 'goodness of fit' for each bin
    # A bin with a remaining capacity close to the item's size gets higher priority
    goodness_of_fit = 1 / (1 + np.abs((bins_remain_cap - item) / bins_remain_cap))

    # Scale the priority based on the available capacity in each bin
    priority = goodness_of_fit * (bins_remain_cap / (bins_remain_cap + item))

    return priority
```
