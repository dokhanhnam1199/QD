```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on a trade-off between the ratio of the remaining capacity and the item size,
    and the absolute difference between the remaining capacity and the item size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # calculate the ratio of the remaining capacity and the item size
    ratio = bins_remain_cap / item
    
    # calculate the absolute difference between the remaining capacity and the item size
    diff = np.abs(bins_remain_cap - item)
    
    # calculate the priority score as a weighted sum of the ratio and the inverse of the difference
    priority_score = 0.7 * (1 / (diff + 1e-9)) + 0.3 * (1 / (np.abs(ratio - 1) + 1e-9))
    
    return priority_score
```
