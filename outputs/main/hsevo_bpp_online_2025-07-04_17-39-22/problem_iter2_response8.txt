```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score, used bin bonus, and normalizes waste."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Disallow overfill
    priorities[bins_remain_cap < item] = -np.inf

    # Fit score
    fit_score = np.exp(-np.abs(bins_remain_cap - item) / item)

    # Used bin bonus
    is_used_bonus = (bins_remain_cap < 1).astype(float)

    priorities = fit_score + is_used_bonus

    # Normalize waste
    fit_mask = bins_remain_cap >= item
    if np.any(fit_mask):
        priorities[fit_mask] = priorities[fit_mask] / bins_remain_cap[fit_mask]

    return priorities
```
