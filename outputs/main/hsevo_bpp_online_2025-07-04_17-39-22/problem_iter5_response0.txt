```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit, used bin bonus, normalized waste, and noise."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities - 1e9

    # Fit score: exp distance
    fit_score = np.exp(-np.abs(bins_remain_cap - item) / item)
    priorities[valid_bins] = fit_score[valid_bins]

    # Used bin bonus
    is_used_bonus = (bins_remain_cap < 1).astype(float)
    priorities += is_used_bonus

    # Normalize waste
    waste = bins_remain_cap[valid_bins] - item
    waste_normalized = waste / bins_remain_cap[valid_bins]
    priorities[valid_bins] -= waste_normalized # Subtract normalized waste

    #Add noise
    noise = np.random.normal(0, 1e-6, len(priorities))
    priorities += noise
    
    return priorities
```
