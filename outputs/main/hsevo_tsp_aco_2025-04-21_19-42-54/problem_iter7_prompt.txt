{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:\n    \"\"\"Adaptive heuristics combining distance, desirability, sparsification.\"\"\"\n    n = distance_matrix.shape[0]\n    heuristics = np.zeros_like(distance_matrix)\n    epsilon = 1e-9\n\n    # Node Desirability: Inverse sum of distances\n    node_desirability = np.sum(1.0 / (distance_matrix + epsilon), axis=1)\n    node_desirability /= np.max(node_desirability)\n\n    # Edge Attraction: Inverse squared distance\n    edge_attraction = 1.0 / (distance_matrix**2 + epsilon)\n    np.fill_diagonal(edge_attraction, 0)\n    edge_attraction /= np.max(edge_attraction)\n\n    # Combine desirability and attraction\n    heuristics = edge_attraction * (node_desirability[:, None] + node_desirability[None, :])\n\n    # Sparsification: Keep top edges\n    threshold = np.percentile(heuristics[heuristics > 0], 40)\n    heuristics[heuristics < threshold] = 0\n\n    # Normalize\n    heuristics = (heuristics - np.min(heuristics)) / (np.max(heuristics) - np.min(heuristics) + epsilon)\n\n    return heuristics\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}