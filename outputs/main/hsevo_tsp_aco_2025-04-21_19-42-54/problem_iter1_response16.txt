```python
import numpy as np

def heuristics_v2(distance_matrix: np.ndarray) -> np.ndarray:
    """
    Heuristics for the Traveling Salesman Problem (TSP) based on stochastic solution sampling,
    inspired by black hole principles.

    This version combines inverse distance with a stochastic element, weighted by
    the distance to the farthest node.  The stochasticity allows for escaping local
    optima, mimicking Hawking radiation.  The weighting emphasizes potentially longer,
    but globally more efficient, "quantum tunneling" paths.

    Args:
        distance_matrix (np.ndarray): A square matrix where distance_matrix[i, j]
                                     represents the distance between city i and city j.

    Returns:
        np.ndarray: A matrix of the same shape as distance_matrix, containing heuristic values.
                    Higher values indicate more promising edges.
    """
    n = distance_matrix.shape[0]
    max_distance = np.max(distance_matrix[np.isfinite(distance_matrix)])  # Avoid infs when computing stochasticity

    heuristic_matrix = np.zeros_like(distance_matrix, dtype=float)
    for i in range(n):
        for j in range(n):
            if i != j:
                # Inverse distance (shorter distances are preferred)
                inverse_distance = 1 / distance_matrix[i, j] if distance_matrix[i,j] !=0 else np.inf # prevent division by zero. If 0 then inf will automatically prevent algorithm to visit this route

                # Stochastic element (Hawking radiation): favor exploration based on "black hole event horizon"
                stochasticity = np.random.rand() * (distance_matrix[i,j] / max_distance) # Normalize by the "event horizon" (max distance)

                # Combine inverse distance and stochasticity. Weights promote potential quantum tunneling
                heuristic_matrix[i, j] = inverse_distance + stochasticity

            else:
                heuristic_matrix[i, j] = 0  # No self-loops

    return heuristic_matrix
```
