```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Random Fit priority for online Bin Packing.

    Each bin that can accommodate ``item`` receives a random score drawn
    from a uniform distribution on [0, 1). Bins that cannot fit the item are
    assigned ``-np.inf`` so they will never be selected as the highest priority.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        Remaining capacities of all current bins.

    Returns
    -------
    np.ndarray
        Array of same shape as ``bins_remain_cap`` with a priority score for
        each bin. The bin with the largest value will be chosen.
    """
    # Identify bins that can host the item.
    viable = bins_remain_cap >= item

    # Initialize all priorities to -inf (i.e., infeasible bins).
    priorities = np.full_like(bins_remain_cap, fill_value=-np.inf, dtype=float)

    # Assign a random priority to each feasible bin.
    # Using np.random.random ensures a fresh random draw each call.
    priorities[viable] = np.random.random(size=viable.sum())

    return priorities
```
