```python
import numpy as np

def priority_v2(
    item: float,
    bins_remain_cap: np.ndarray,
    *,
    epsilon: float = 1e-6,
    exact_fit_bonus: float = 1e9,
) -> np.ndarray:
    """
    Deterministic priority function for the online Bin Packing Problem.

    The heuristic prefers bins that will be left with the smallest remaining
    capacity after the item is placed. Bins that become (almost) perfectly full
    receive a very large bonus to strongly encourage exact fits. Infeasible
    bins are assigned ``-np.inf`` so they are never selected.

    Parameters
    ----------
    item : float
        Size of the incoming item (0 < item ≤ bin capacity).
    bins_remain_cap : np.ndarray
        1‑D array of the remaining capacities of each currently open bin.
    epsilon : float, optional
        Tolerance for treating a leftover as an exact fit (default 1e-6).
    exact_fit_bonus : float, optional
        Large positive boost for bins that achieve an exact fit
        (default 1e9).

    Returns
    -------
    np.ndarray
        Priority scores (higher is better) with the same shape as
        ``bins_remain_cap``. Infeasible bins receive ``-np.inf``.
    """
    # Ensure a NumPy array of floats.
    caps = np.asarray(bins_remain_cap, dtype=float)

    # Edge case: no bins.
    if caps.size == 0:
        return np.array([], dtype=float)

    # Remaining capacity after hypothetically placing the item.
    leftover = caps - item

    # Feasibility mask: True where the item fits.
    feasible = leftover >= 0

    # Initialise all priorities with a heavy penalty for infeasibility.
    priorities = np.full_like(caps, -np.inf, dtype=float)

    # Base priority: the smaller the leftover, the larger the priority.
    # Using the negative leftover converts a minimisation objective into a
    # maximisation one.
    priorities[feasible] = -leftover[feasible]

    # Reward bins that become (almost) perfectly full.
    exact_fit = feasible & (leftover <= epsilon)
    priorities[exact_fit] = exact_fit_bonus

    return priorities
```
