```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns a priority score for each bin based on the Random Fit strategy.

    In Random Fit we select uniformly at random among all bins that can accommodate
    the new item. This function assigns each eligible bin a random score in [0,1)
    and assigns a very low score to all ineligible bins, ensuring they are never
    chosen.  The stochastic priority values guarantee a random choice when the
    selection routine picks the maximum score.

    Args:
        item: Size of the item to be added to a bin.
        bins_remain_cap: Array containing the remaining capacity of each bin.

    Returns:
        numpy.ndarray of floats with the same shape as `bins_remain_cap`.  All
        entries corresponding to bins that can hold the item receive a random
        priority in [0, 1); entries for bins that cannot hold the item receive
        `-inf`.
    """
    # Start with a default very-low priority
    priorities = np.full(bins_remain_cap.shape, -np.inf, dtype=float)

    # Mask of bins that have enough capacity for the item
    fit_mask = bins_remain_cap >= item

    # Assign a random priority between 0 and 1 to each eligible bin
    if np.any(fit_mask):
        priorities[fit_mask] = np.random.rand(np.count_nonzero(fit_mask))

    return priorities
```
