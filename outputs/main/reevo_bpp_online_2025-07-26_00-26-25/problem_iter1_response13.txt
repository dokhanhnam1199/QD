```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This implementation considers both the remaining capacity and the number of
    bins used according to the First-Fit-Decreasing (FFD) strategy adapted to online.
    The priority is higher if the item fits in the bin and the remaining capacity is close to zero.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priority scores to zero
    priority_scores = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    
    # Check which bins can fit the item
    possible_bins = bins_remain_cap >= item
    
    # Calculate priority for each possible bin
    priority_scores[possible_bins] = 1 / (bins_remain_cap[possible_bins] - item + 1e-5)  # Adding a small value to avoid division by zero
    
    return priority_scores
```
