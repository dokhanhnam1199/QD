```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This implementation prioritizes bins that have the least remaining capacity that can still fit the item.
    It helps to maintain bins as full as possible which could theoretically lead to fewer bins being used.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity that can still fit the item
    viable_caps = bins_remain_cap - item
    # Set negative scores for bins which can't fit the item
    scores = np.where(viable_caps >= 0, viable_caps, -np.inf)
    # Invert the scores so that bins that can fit the item and have less remaining space get higher priority
    return np.max(viable_caps) - scores
```
