```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    The priority is calculated based on the remaining capacity of each bin. 
    Bins with remaining capacity closest to the item size are given higher priority.
    
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Check if the item can fit in the bin
    valid_bins = remaining_cap_after_addition >= 0
    
    # Calculate the priority score for valid bins
    # Bins with remaining capacity closest to 0 are given higher priority
    priority_scores = np.where(valid_bins, -np.abs(remaining_cap_after_addition), -np.inf)
    
    return priority_scores
```
