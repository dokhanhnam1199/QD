```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    The priority is calculated based on the remaining capacity of each bin and the size of the item.
    Bins with remaining capacity close to the item size will have higher priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # The score is high when the remaining capacity is close to the item size
    # and low when the remaining capacity is much larger or smaller than the item size
    priority_scores = np.where(bins_remain_cap >= item, 
                               1 - np.abs(bins_remain_cap - item) / (bins_remain_cap + item), 
                               0)
    
    return priority_scores
```
