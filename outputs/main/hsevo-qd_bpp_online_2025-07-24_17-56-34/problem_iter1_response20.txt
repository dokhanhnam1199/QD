```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    The priority is calculated based on the remaining capacity of each bin. 
    The bin with the least remaining capacity that can still fit the item gets the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the item can fit in the bin
    can_fit = bins_remain_cap >= item
    
    # Calculate the priority score for each bin
    # The bin with the least remaining capacity that can still fit the item gets the highest priority
    priority = np.where(can_fit, 1 / (bins_remain_cap + 1e-6), 0)
    
    # Normalize the priority scores to be between 0 and 1
    max_priority = np.max(priority)
    if max_priority > 0:
        priority = priority / max_priority
    
    return priority
```
