import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, noise_upper_bound: float = 0.00048778572494773354) -> np.ndarray:
    """
    Priority score based on how well the item fits into the bin and a small random noise to break ties.
    """
    # Calculate priority based on remaining capacity after adding the item
    priority = np.where(bins_remain_cap >= item, - (bins_remain_cap - item), -np.inf)
    # Add a small random noise to break ties
    priority += np.random.uniform(0, noise_upper_bound, size=len(bins_remain_cap))
    return priority
