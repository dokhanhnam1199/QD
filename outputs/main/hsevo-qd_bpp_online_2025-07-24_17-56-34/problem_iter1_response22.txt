```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_capacity_after_addition = bins_remain_cap - item
    
    # Mask for bins that have enough capacity to hold the item
    valid_bins_mask = remaining_capacity_after_addition >= 0
    
    # Priority score is the negative of the remaining capacity after addition for valid bins
    # and a very low value for bins that cannot hold the item
    priority_scores = np.where(valid_bins_mask, -remaining_capacity_after_addition, -1e10)
    
    return priority_scores
```
