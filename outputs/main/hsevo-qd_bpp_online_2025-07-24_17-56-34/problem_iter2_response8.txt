```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score for each bin based on remaining capacity and item size.
    Prioritizes bins where the item fits well, with a small random noise for tie-breaking.
    """
    # Check if the item can fit in each bin
    valid_bins = bins_remain_cap >= item
    
    # Calculate priority based on how well the item fits into the bin
    priority = np.where(valid_bins, -np.abs(bins_remain_cap - item), -np.inf)
    
    # Add a small random noise to break ties
    noise = np.random.uniform(0, 1e-6, size=len(bins_remain_cap))
    priority += noise
    
    return priority
```
