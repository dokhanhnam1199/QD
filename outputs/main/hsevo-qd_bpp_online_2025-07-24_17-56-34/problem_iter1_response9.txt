```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This function implements the First-Fit decreasing heuristic with a twist.
    It prioritizes bins that have just enough capacity to fit the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # The score is higher if the bin has enough capacity and is not too large
    priority_scores = np.where(bins_remain_cap >= item, 
                               1 / (1 + np.abs(bins_remain_cap - item)), 
                               0)
    
    # Normalize the scores to ensure they are between 0 and 1
    max_score = np.max(priority_scores)
    if max_score > 0:
        priority_scores /= max_score
    
    return priority_scores
```
