```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    The priority is calculated based on how well the item fits into the remaining capacity of each bin.
    A higher priority is given to bins that have just enough capacity to hold the item.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Bins that cannot hold the item should have a priority of negative infinity
    priority = np.where(remaining_cap_after_addition >= 0, -remaining_cap_after_addition, -np.inf)
    
    # Normalize the priority scores to be between 0 and 1
    max_priority = np.max(priority)
    if max_priority != -np.inf:  # Check if there are bins that can hold the item
        priority = np.where(priority != -np.inf, np.exp(priority - max_priority), priority)
    else:
        priority = np.zeros_like(bins_remain_cap)
    
    return priority
```
