```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    The priority is higher for bins that have enough capacity for the item and 
    have smaller remaining capacity, indicating a tighter fit.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # For bins that can fit the item, priority is inversely proportional to the remaining capacity
    # For bins that cannot fit the item, priority is negative infinity (represented by a very low number)
    priority = np.where(bins_remain_cap >= item, 1 / (bins_remain_cap + 1e-6), -1e6)
    
    return priority
```
