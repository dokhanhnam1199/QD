```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the item can fit into the bin
    valid_bins = (bins_remain_cap >= item).astype(float)
    
    # Calculate the remaining capacity after adding the item
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Prioritize bins with the least remaining capacity after addition, 
    # which indicates the best fit
    priority = np.where(valid_bins == 1, -remaining_cap_after_addition, -np.inf)
    
    return priority
```
