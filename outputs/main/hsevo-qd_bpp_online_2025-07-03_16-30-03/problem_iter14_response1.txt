```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines remaining space, feasibility, and item/bin ratio."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        priorities = -bins_remain_cap
        return priorities

    remaining_space = bins_remain_cap - item
    
    # Prioritize feasible bins inversely proportional to remaining space
    priorities[feasible_bins] = 1 / (remaining_space[feasible_bins] + 1e-9)
    
    # Consider ratio of item to bin size for feasible bins
    ratios = item / bins_remain_cap
    priorities[feasible_bins] += -np.log(ratios[feasible_bins]) * 0.1
    
    return priorities
```
