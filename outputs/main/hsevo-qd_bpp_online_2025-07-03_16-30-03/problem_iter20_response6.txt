```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Assigns priority to bins based on feasibility, remaining space, and fullness."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        priorities = -bins_remain_cap
        return priorities
    remaining_space = bins_remain_cap - item
    priorities[feasible_bins] += 1.0 / (remaining_space[feasible_bins] + 1e-9)
    almost_full = np.logical_and(feasible_bins, remaining_space < 0.15)
    priorities[almost_full] += 8.0
    moderately_full = np.logical_and(feasible_bins, remaining_space < 0.3)
    priorities[moderately_full] += 1.5
    priorities[feasible_bins] -= (bins_remain_cap[feasible_bins] > 0.7) * 0.3
    return priorities
```
