```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Heuristic: The larger the remaining capacity, the higher the priority,
    # but prioritize bins that will have more balanced capacity after the item is added.
    priority_scores = bins_remain_cap - item
    # Encourage balance by subtracting a small value for deviation from the average remaining capacity
    avg_remain_cap = np.mean(bins_remain_cap)
    balance_factor = 0.1 * (bins_remain_cap - avg_remain_cap)
    priority_scores -= balance_factor
    return priority_scores
```
