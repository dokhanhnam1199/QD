```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough capacity to pack the item,
    minimizing waste of space. If no such bin exists, it prioritizes bins with the least remaining capacity,
    encouraging efficient use of space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the capacity difference between each bin and the item size
    capacity_diff = bins_remain_cap - item
    
    # Initialize priority scores with the capacity difference
    priority_scores = capacity_diff
    
    # For bins with enough capacity, increase their priority scores based on their remaining capacity
    priority_scores[capacity_diff >= 0] += (np.max(bins_remain_cap) - bins_remain_cap)[capacity_diff >= 0]
    
    # Ensure that bins with exactly enough capacity have higher priority scores
    priority_scores[capacity_diff == 0] += np.max(bins_remain_cap)
    
    return priority_scores
```
