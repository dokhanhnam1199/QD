```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough capacity to pack the item,
    minimizing waste of space. If no such bin exists, it prioritizes bins with the least remaining capacity,
    encouraging efficient use of space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the minimum remaining capacity required to pack the item
    min_required_cap = item
    
    # Identify bins that have just enough capacity to pack the item
    exact_fit_bins = bins_remain_cap >= min_required_cap
    
    # Prioritize bins with the least remaining capacity if no exact fit is found
    priority = np.where(exact_fit_bins, 1 / (bins_remain_cap - item + 1), 1 / bins_remain_cap)
    
    # If there are exact fit bins, boost their priority to 1 and scale others down
    if np.sum(exact_fit_bins) > 0:
        priority = np.where(exact_fit_bins, 1, priority / (1 + np.sum(priority)))
        priority = np.where(exact_fit_bins, 1, priority)
    
    return priority
```
