```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on the ratio of the remaining capacity and the item size.
    If a bin has a higher ratio, it is more likely to be selected.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the ratio of remaining capacity to item size for each bin
    ratio = bins_remain_cap / item
    
    # To avoid division by zero when the item size is zero, replace zero item sizes with a small value
    ratio = np.where(ratio == np.inf, 0, ratio)
    
    # Get the priority score for each bin based on the ratio
    priority_score = -np.abs(ratio - 1)
    
    return priority_score
```
