```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function combines the fit score and utilization score to prioritize bins.
    The fit score measures how well the item fits into each bin, and the utilization score measures how full each bin is.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate a score based on how well the item fits into each bin
    fit_score = np.abs(bins_remain_cap - item) / item
    
    # Calculate a score based on the remaining capacity of each bin
    # A lower remaining capacity is preferred as it means the bin is more full
    utilization_score = 1 - (bins_remain_cap / (bins_remain_cap + item))
    
    # Calculate the final priority score as the combination of fit_score and utilization_score
    priority_score = utilization_score - fit_score
    
    # Ensure that bins with insufficient remaining capacity have a low priority
    priority_score[bins_remain_cap < item] = -np.inf
    
    return priority_score
```
