```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on minimizing waste of space and efficient use of space.
    It favors bins where the item size is closest to the remaining capacity, and then considers the remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the item size and the remaining capacity of each bin
    diff = np.abs(bins_remain_cap - item)
    
    # Set the priority score to negative infinity for bins that cannot hold the item
    valid_bins = bins_remain_cap >= item
    priority = np.where(valid_bins, 
                         1 / (diff + 1) + bins_remain_cap / (np.max(bins_remain_cap) + 1), 
                         -np.inf)
    
    return priority
```
