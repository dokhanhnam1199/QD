```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have just enough capacity to 
    hold the item, minimizing wasted space. If no such bin exists, it favors bins with 
    the least remaining capacity, which can help to distribute items evenly.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if there are bins that can exactly fit the item
    exact_fit_bins = np.where(bins_remain_cap >= item)[0]
    
    if len(exact_fit_bins) > 0:
        # Assign high priority to exact fit bins
        priority = np.where(bins_remain_cap >= item, 1.0 - (bins_remain_cap - item) / bins_remain_cap, 0.0)
    else:
        # If no exact fit, prioritize bins with the least remaining capacity
        priority = 1.0 - bins_remain_cap
    
    return priority
```
