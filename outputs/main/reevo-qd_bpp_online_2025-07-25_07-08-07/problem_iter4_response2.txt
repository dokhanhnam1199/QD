```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins that have just enough capacity to pack the item, 
    minimizing waste of space. If no such bin exists, it prioritizes bins with the least remaining capacity, 
    encouraging efficient use of space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Identify bins that can hold the item
    valid_bins = bins_remain_cap >= item
    
    # Calculate the priority scores
    # Exact fit bins get a high priority score
    # Other bins get a priority score based on their remaining capacity (lower remaining capacity gets higher priority)
    priority = np.where(valid_bins, 
                        np.where(np.isclose(bins_remain_cap, item),  # exact fit
                                 np.inf, 
                                 1 / (bins_remain_cap - item + 1)),  # minimize remaining capacity
                        -np.inf)
    
    return priority
```
