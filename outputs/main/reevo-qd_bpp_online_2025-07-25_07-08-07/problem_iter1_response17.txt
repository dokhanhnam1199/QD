```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough capacity to pack the item,
    minimizing waste of space. If no such bin exists, it prioritizes bins with the least remaining capacity,
    trying to fill them up as much as possible.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Find bins that have just enough capacity to pack the item
    exact_brim_bins = bins_remain_cap == item
    
    # Find bins that have enough capacity to pack the item but are not exactly full
    less_than_brim_bins = (bins_remain_cap > item) & (~exact_brim_bins)
    
    # Assign high priority to bins that are exactly full, since they don't waste space
    priorities = np.where(exact_brim_bins, 2, 0)
    
    # Assign medium priority to bins that are not exactly full but still have enough capacity
    priorities = np.where(less_than_brim_bins, priorities + 1, priorities)
    
    # Break ties by assigning lower priority to bins with more remaining capacity
    priorities -= bins_remain_cap / bins_remain_cap.sum()
    
    return priorities
```
