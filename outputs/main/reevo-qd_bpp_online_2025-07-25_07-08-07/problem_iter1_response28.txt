```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to encourage the packing of items into bins 
    where the item size is as close as possible to the remaining capacity. It also 
    takes into account the desire to keep the number of bins used as low as possible.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate a score based on how well the item fits into each bin
    fits_score = np.abs(bins_remain_cap - item)
    
    # Calculate a score based on the remaining capacity of each bin
    # A lower remaining capacity is preferred as it means the bin is more full
    capacity_score = -bins_remain_cap
    
    # Calculate the final priority score as the combination of fits_score and capacity_score
    priority_score = capacity_score - 2 * (fits_score / item)
    
    # Ensure that bins with negative remaining capacity have a high penalty
    priority_score[bins_remain_cap < item] = -np.inf
    
    return priority_score
```
