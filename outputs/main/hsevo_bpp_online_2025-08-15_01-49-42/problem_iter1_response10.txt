```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Implements a priority function based on the First Fit strategy for the online Bin Packing Problem.
    This heuristic prioritizes bins that can accommodate the item and have the least remaining capacity
    after fitting the item (i.e., bins that will be "most full" after packing).
    It returns a priority score for each bin.

    Args:
        item: The size of the item to be packed.
        bins_remain_cap: A NumPy array representing the remaining capacity of each bin.

    Returns:
        A NumPy array of the same size as bins_remain_cap, where each element is the priority score
        for the corresponding bin. Bins that cannot fit the item are given a priority of 0.
        Among the bins that can fit the item, a higher priority is given to bins that will have
        less remaining capacity after the item is placed.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    for i, capacity in enumerate(bins_remain_cap):
        if capacity >= item:
            
            remaining_after_fit = capacity - item
            
            
            priorities[i] = 1.0 / (remaining_after_fit + 1e-9)  
            
    return priorities
```
