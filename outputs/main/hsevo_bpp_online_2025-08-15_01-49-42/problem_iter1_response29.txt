```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    valid_bins_mask = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    if np.any(valid_bins_mask):
        valid_bins_remain_cap = bins_remain_cap[valid_bins_mask]
        
        
        score_diff = valid_bins_remain_cap - item
        
        
        exp_scores = np.exp(score_diff)
        
        
        priorities[valid_bins_mask] = exp_scores
        
        
        normalized_priorities = priorities / np.sum(priorities)
        return normalized_priorities
    else:
        return priorities

```
