```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    available_bins_mask = bins_remain_cap >= item
    available_bins_caps = bins_remain_cap[available_bins_mask]
    if available_bins_caps.size > 0:
        priorities[available_bins_mask] = 1.0 / (available_bins_caps - item + 1e-9)
    return priorities
```
