{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Prioritizes bins using a hybrid approach: favoring exact fits and then\n    best fits by inverting the remaining capacity, while ensuring stability.\n    \"\"\"\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n    \n    # Identify bins that can fit the item\n    can_fit_mask = bins_remain_cap >= item\n    \n    # Calculate remaining capacity after placing the item for fitting bins\n    remaining_after_fit = bins_remain_cap[can_fit_mask] - item\n    \n    # Calculate priority: higher for bins that will be more full (less remaining capacity)\n    # Adding 1.0 to the denominator to avoid division by zero and to ensure\n    # that bins with zero remaining capacity get a high but finite priority.\n    # This is a stable inversion that prioritizes bins that result in less slack.\n    priorities[can_fit_mask] = 1.0 / (remaining_after_fit + 1.0)\n    \n    # Bins that cannot fit the item receive zero priority, meaning they are not considered.\n    \n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}