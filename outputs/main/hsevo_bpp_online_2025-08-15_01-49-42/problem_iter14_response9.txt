```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Hybrid heuristic: Exact fit, then best fit with normalized slack penalty.
    Prioritizes exact fits, then minimal remaining capacity, penalizing large relative slack.
    """
    priorities = np.full_like(bins_remain_cap, -1.0, dtype=float)
    epsilon = 1e-9
    
    can_fit_mask = bins_remain_cap >= item
    
    if not np.any(can_fit_mask):
        return priorities

    eligible_bins_indices = np.where(can_fit_mask)[0]
    
    # High score for exact fits
    exact_fit_score = 1e9
    
    # Score for non-exact fits: prioritize minimal remaining capacity (Best Fit)
    # Use negative remaining capacity so higher value means less remaining space.
    remaining_after_fit = bins_remain_cap[eligible_bins_indices] - item
    best_fit_scores = -remaining_after_fit

    # Penalty for large slack relative to item size.
    # Encourage more balanced packing.
    slack_penalty_factor = 0.1 
    relative_slack = remaining_after_fit / (item + epsilon)
    penalty = slack_penalty_factor * relative_slack

    # Combine Best Fit score with penalty.
    # Best Fit is primary (higher value for smaller remaining capacity),
    # penalty reduces score for bins with high relative slack.
    combined_scores = best_fit_scores - penalty

    # Assign priorities
    # Exact fits get the highest score
    exact_fit_indices_mask = (remaining_after_fit < epsilon)
    priorities[eligible_bins_indices[exact_fit_indices_mask]] = exact_fit_score
    
    # Non-exact fits get the combined score. Ensure they are lower than exact fits.
    non_exact_fit_indices_mask = ~exact_fit_indices_mask
    
    # Ensure scores are always less than the exact fit score.
    # Even the highest combined score should be less than exact_fit_score.
    # The scaling of best_fit_scores is inherently negative, making them lower than exact_fit_score.
    # The penalty further reduces these scores.
    priorities[eligible_bins_indices[non_exact_fit_indices_mask]] = combined_scores[non_exact_fit_indices_mask]

    return priorities
```
