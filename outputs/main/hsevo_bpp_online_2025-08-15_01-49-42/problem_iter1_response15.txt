```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    available_bins_mask = bins_remain_cap >= item
    valid_bins_capacities = bins_remain_cap[available_bins_mask]
    if valid_bins_capacities.size > 0:
        inverse_distances = 1.0 / (valid_bins_capacities - item + 1e-9)
        priorities[available_bins_mask] = inverse_distances
    return priorities
```
