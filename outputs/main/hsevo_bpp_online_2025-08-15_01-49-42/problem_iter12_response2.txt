```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:

    priorities = np.full_like(bins_remain_cap, -1.0)
    
    can_fit_mask = bins_remain_cap >= item
    
    if np.any(can_fit_mask):
        bins_that_fit_remain_cap = bins_remain_cap[can_fit_mask]
        
        # Calculate remaining capacities after placing the item
        remaining_capacities_if_fit = bins_that_fit_remain_cap - item
        
        # Primary objective: prioritize exact fits (remaining capacity is 0)
        # Assign a very high priority to exact fits.
        exact_fit_mask = (bins_that_fit_remain_cap == item)
        
        # Secondary objective: For bins that are not exact fits, prioritize those
        # that leave the *smallest positive* remaining capacity.
        # This is equivalent to minimizing `remaining_capacities_if_fit` among non-exact fits.
        # To give higher priority to smaller remainders, we can use a transformation.
        # A common technique is to use `1 / (remainder + epsilon)` or a large value minus the remainder.
        # Let's use a score inversely proportional to the remainder, but ensure exact fits get top priority.
        
        # Calculate scores for non-exact fits
        non_exact_fit_mask = ~exact_fit_mask
        
        if np.any(non_exact_fit_mask):
            # We want smaller remaining capacity to have a higher score.
            # Using `-(remaining_capacity)` means smaller positive values get higher scores.
            # For example, 0.1 > -0.5.
            priorities[can_fit_mask][non_exact_fit_mask] = -remaining_capacities_if_fit[non_exact_fit_mask]
        
        # Assign the highest priority to exact fits
        if np.any(exact_fit_mask):
            # Set a value significantly higher than any possible score from non-exact fits.
            # Since non-exact fits are negative or zero (if remainder is 0),
            # a large positive number works.
            priorities[can_fit_mask][exact_fit_mask] = 1e6 
            
    return priorities
```
