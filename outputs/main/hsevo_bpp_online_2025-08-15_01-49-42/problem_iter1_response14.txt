```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Exact Fit First.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    for i, remaining_cap in enumerate(bins_remain_cap):
        if remaining_cap >= item:
            exact_fit_diff = remaining_cap - item
            priorities[i] = -exact_fit_diff  # Prioritize bins with minimal remaining space after fitting
    
    # Among bins that can fit the item, we want to prioritize the one
    # that leaves the least amount of remaining space (exact fit).
    # Negative value for priority implies that smaller remaining capacity is better.
    # If multiple bins offer the exact same smallest remaining capacity,
    # the one that appears first in the array will be chosen due to the loop's nature.
    
    return priorities
```
