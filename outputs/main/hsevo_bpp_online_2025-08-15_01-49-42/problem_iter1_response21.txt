```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins_mask = bins_remain_cap >= item
    suitable_bins = bins_remain_cap[suitable_bins_mask]
    if suitable_bins.size > 0:
        differences = suitable_bins - item
        min_diff = np.min(differences)
        priorities[suitable_bins_mask] = 1.0 / (differences - min_diff + 1e-9)
    return priorities
```
