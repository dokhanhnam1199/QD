```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Sigmoid Fit Score strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    feasible_bins_mask = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap)

    if not np.any(feasible_bins_mask):
        return priorities

    feasible_bins_remain_cap = bins_remain_cap[feasible_bins_mask]
    
    diffs = feasible_bins_remain_cap - item
    
    scaled_diffs = diffs / np.max(feasible_bins_remain_cap) if np.max(feasible_bins_remain_cap) > 0 else np.zeros_like(diffs)
    
    sigmoid_scores = 1 / (1 + np.exp(-5 * (scaled_diffs - 0.5)))
    
    priorities[feasible_bins_mask] = sigmoid_scores
    
    return priorities
```
