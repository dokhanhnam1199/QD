```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    This implementation prioritizes bins using a Best Fit strategy:
    bins that will have the smallest remaining capacity after the item is placed
    are given higher priority. A perfect fit receives the highest possible score.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        Bins where the item cannot fit will have a priority of 0.
        Bins where the item fits will have a score inversely proportional
        to the remaining capacity after placement, ensuring that smaller
        remaining capacities yield higher scores.
    """
    # Initialize all priorities to 0. Bins where the item cannot fit will retain this score,
    # ensuring they are not chosen unless no bin can accommodate the item.
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Identify which bins currently have enough capacity to hold the item
    can_fit = bins_remain_cap >= item

    # For only those bins where the item can fit, calculate the "waste" capacity
    # that would remain if the item were placed in them.
    remaining_after_placement = bins_remain_cap[can_fit] - item

    # A small constant to prevent division by zero in case of a perfect fit (remaining_after_placement == 0).
    # This also gives perfect fits (0 waste) an extremely high priority score, which is desirable.
    epsilon = 1e-6 
    
    # Calculate the priority scores for the bins that can fit the item.
    # The score is inversely proportional to the waste (remaining capacity + epsilon).
    # This means less waste leads to a higher priority score.
    scores_for_fitting_bins = 1.0 / (remaining_after_placement + epsilon)
    
    # Assign these calculated scores back to the corresponding bins in the priorities array
    priorities[can_fit] = scores_for_fitting_bins

    return priorities
```
