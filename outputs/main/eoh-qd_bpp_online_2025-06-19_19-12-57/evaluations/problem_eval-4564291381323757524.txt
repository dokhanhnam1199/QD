def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and wasted space if the item is placed in the bin, prioritizing bins that can accommodate the item with minimal wasted space, and penalizing bins that would result in significant wasted space or cannot accommodate the item.}"""
  priorities = []
  for capacity in bins_remain_cap:
    if capacity < item:
      priorities.append(-1000) 
    else:
      wasted_space = capacity - item
      if wasted_space == 0:
          priorities.append(100)
      else:
          priorities.append(50 - wasted_space/capacity *50)
  return priority
