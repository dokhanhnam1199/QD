def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a combination of remaining capacity and the waste that would be incurred if the item were placed in that bin, penalizing bins that would result in significant wasted space.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority = (cap / (item + 0.000001)) - (waste * 0.1) # Adjusted to avoid division by zero and prioritize good fits with little waste
      priorities.append(priority)
    else:
      priorities.append(-1) # Assign low priority to bins that can't fit the item
  return priority
