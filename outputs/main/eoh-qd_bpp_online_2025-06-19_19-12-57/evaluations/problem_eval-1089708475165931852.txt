def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins with remaining capacity closest to the item size while penalizing bins that would become too empty after packing the item, and additionally penalizes bins already too empty.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = (cap - item)**-0.5 - (1 - (item / cap))**2 - (1/cap)**0.5 if cap > 0 else -99999  
    else:
      priority = -99999
    priorities.append(priority)
  return priority
