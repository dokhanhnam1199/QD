def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and the absolute difference between remaining capacity after placing the item and a target capacity (50% of bin capacity), favoring bins that are closer to half-full after placement.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      target_cap = sum(bins_remain_cap)/len(bins_remain_cap)
      #Calculate the priority based on remaining capacity and closeness to the mean.
      priority =  (1/(abs(new_cap - target_cap)+0.000001)) * item # Ensure positivity and avoid division by zero
    else:
      priority = -1000000 #large negative value to discourage
    priorities.append(priority)
  return priority
