def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and the waste generated if the item is placed in the bin.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority = cap * (1 - (waste / sum(bins_remain_cap))) # Factor in total available capacity across bins.  Larger bins and less waste are preferred, relative to total free space.
      priorities.append(priority)
    else:
      priorities.append(-1)  # Assign very low priority if item doesn't fit
  return priority
