def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority score to each bin based on how well the item fits, favoring bins where the item fills a significant portion of the remaining capacity without exceeding it, and adds a bonus if the bin is relatively empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if item <= cap:
      fill_ratio = item / cap
      empty_bin_bonus = 0.0
      if cap > 0.75: #bonus if more than 75% remain
        empty_bin_bonus = (cap - 0.75) * 0.5 #scale amount of bonus
      score = fill_ratio + empty_bin_bonus
    else:
      score = -1.0  # Negative score if the item doesn't fit
    priority.append(score)
  return priority
