```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, tight_fit_weight: float = 0.7,
                fill_ratio_weight: float = 0.3, random_priority_scale: float = 0.001) -> np.ndarray:
    """Prioritizes bins based on tight-fit and fill ratio, with exploration."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    infeasible = item > bins_remain_cap
    priorities[infeasible] = -np.inf

    feasible = ~infeasible
    if np.any(feasible):
        remaining_capacity = bins_remain_cap[feasible]
        tight_fit = 1.0 / (remaining_capacity - item + 0.0001)
        fill_ratio = (remaining_capacity - item) / (remaining_capacity + 0.0001)
        priorities[feasible] = tight_fit_weight * tight_fit + fill_ratio_weight * fill_ratio + np.random.rand(np.sum(feasible)) * random_priority_scale

    return priorities
```
