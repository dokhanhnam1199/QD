```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Hybrid heuristic: tight-fit (reciprocal), fill ratio, exploration."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    infeasible = item > bins_remain_cap
    priorities[infeasible] = -np.inf
    feasible = ~infeasible
    if np.any(feasible):
        remaining_capacity = bins_remain_cap[feasible]
        fill_ratio = (bins_remain_cap[feasible] - item) / remaining_capacity
        priorities[feasible] = (1.0 / (remaining_capacity - item + 0.001)) + fill_ratio * 0.1
    else:
        priorities = bins_remain_cap + np.random.rand(len(bins_remain_cap)) * 0.0001
    return priorities
```
