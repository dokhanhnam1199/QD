```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill ratio and exponential decay of remaining capacity.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float) - np.inf
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    fill_ratios = item / bins_remain_cap
    priorities[valid_bins] = fill_ratios[valid_bins] * np.exp(-bins_remain_cap[valid_bins])
    # Bonus for bins that are nearly full
    waste = bins_remain_cap - item
    nearly_full = (waste > 0) & (waste < 0.1 * bins_remain_cap)
    priorities[nearly_full] += 0.5

    return priorities
```
