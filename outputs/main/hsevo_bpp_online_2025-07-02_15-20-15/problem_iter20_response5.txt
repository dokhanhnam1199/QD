```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes tight fits and fill ratio, penalizes infeasible bins."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    infeasible = item > bins_remain_cap
    priorities[infeasible] = -np.inf

    feasible = ~infeasible
    if np.any(feasible):
        fit_priority = 1.0 / (bins_remain_cap[feasible] - item + 0.0001)
        fill_ratio = (item) / (bins_remain_cap[feasible] + 0.0001)
        priorities[feasible] = 0.7 * fit_priority + 0.3 * fill_ratio
    else:
        priorities = bins_remain_cap + np.random.rand(len(bins_remain_cap]) * 0.0001

    return priorities
```
