```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins by fill ratio and exponential decay on remaining capacity."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    # Infeasible bins get -inf priority.
    priorities[bins_remain_cap < item] = -np.inf

    # Calculate remaining capacity after placing the item.
    remaining_capacity = bins_remain_cap - item
    remaining_capacity[bins_remain_cap < item] = np.inf

    # Calculate fill ratio after placing item.
    fill_ratio = 1 - (remaining_capacity / np.max(bins_remain_cap))

    # Exponential decay on remaining capacity.
    priorities += fill_ratio * np.exp(-remaining_capacity)
    
    #Small bonus for bins that will be almost full after placement.
    almost_full = remaining_capacity < 0.1
    priorities[almost_full & (bins_remain_cap >= item)] += 0.05

    return priorities
```
