```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Enhanced heuristic: Combines tighter fit, fill ratio, and bin utilization
    with exploration. Addresses edge cases and normalizes priorities.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Mark infeasible bins with a very low priority but not -inf to allow for some exploration
    infeasible = item > bins_remain_cap
    priorities[infeasible] = -1e9 + np.random.rand(np.sum(infeasible)) * 0.0001  # slight randomization for exploration

    feasible = ~infeasible
    if np.any(feasible):
        remaining_capacity = bins_remain_cap[feasible]

        # Tighter Fit: Reciprocal of remaining space after placing the item
        fit_priority = 1.0 / (remaining_capacity - item + 0.001)

        # Fill Ratio: How much of the bin will be filled by the item
        fill_ratio = item / bins_remain_cap[feasible]

        # Bin Utilization: Encourage filling bins that are already somewhat full.
        utilization = 1 - remaining_capacity / np.max(bins_remain_cap) # normalized remaining cap

        # Combine the factors with weights.  Experiment with these weights.
        combined_priority = (
            0.6 * fit_priority +  # Tighter fit is important
            0.3 * fill_ratio +  # Fill ratio encourages using available space
            0.1 * utilization # Utilization encourages filling up almost empty bins
        )
        priorities[feasible] = combined_priority

        # Normalize the priorities to be between 0 and 1
        min_priority = np.min(priorities[feasible])
        max_priority = np.max(priorities[feasible])

        if max_priority > min_priority:
            priorities[feasible] = (priorities[feasible] - min_priority) / (max_priority - min_priority)

    else:
        # If no bin is feasible, prioritize bins based on remaining capacity with small random component for exploration.
        priorities = bins_remain_cap + np.random.rand(len(bins_remain_cap)) * 0.0001

    return priorities
```
