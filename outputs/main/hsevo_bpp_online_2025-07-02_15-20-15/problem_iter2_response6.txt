```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste, fill ratio, and penalizes nearly full bins."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float) - np.inf
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap - item
    priorities[valid_bins] = -waste[valid_bins]
    fill_ratios = item / bins_remain_cap
    priorities[valid_bins] += 5 * fill_ratios[valid_bins]
    nearly_full = (waste > 0) & (waste < 0.1 * bins_remain_cap)
    priorities[nearly_full] -= 10
    same_size = np.isclose(bins_remain_cap, item)
    priorities[same_size] += 20
    priorities[valid_bins] += 0.01 * bins_remain_cap[valid_bins]

    return priorities
```
