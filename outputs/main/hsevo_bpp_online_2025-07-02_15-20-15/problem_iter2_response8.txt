```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio and remaining capacity for priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities - np.inf

    waste = bins_remain_cap - item
    priorities[valid_bins] = -waste[valid_bins]

    fill_ratios = item / bins_remain_cap
    priorities[valid_bins] += 5 * fill_ratios[valid_bins]

    nearly_full = (waste > 0) & (waste < 0.1 * bins_remain_cap)
    priorities[nearly_full] -= 10

    normalized_capacity = bins_remain_cap / np.max(bins_remain_cap) if np.max(bins_remain_cap) > 0 else np.zeros_like(bins_remain_cap)
    priorities += 0.1*normalized_capacity
    return priorities
```
