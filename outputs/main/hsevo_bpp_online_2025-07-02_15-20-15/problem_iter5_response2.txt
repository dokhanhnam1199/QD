```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill ratio and remaining capacity (exponential decay)."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    infeasible = item > bins_remain_cap
    priorities[infeasible] = -np.inf
    feasible = item <= bins_remain_cap

    if np.any(feasible):
        remaining_capacity_after_placement = bins_remain_cap[feasible] - item
        fill_ratio = item / bins_remain_cap[feasible]
        priorities[feasible] = fill_ratio * np.exp(-remaining_capacity_after_placement / np.max(bins_remain_cap)) if np.max(bins_remain_cap) > 0 else fill_ratio

        close_to_full = (remaining_capacity_after_placement > 0) & (remaining_capacity_after_placement <= 0.1 * np.max(bins_remain_cap))
        priorities[feasible][close_to_full] += 0.5
    return priorities
```
