{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Prioritizes bins based on fill ratio, remaining capacity, and nearly full bonus.\"\"\"\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n    infeasible = item > bins_remain_cap\n    priorities[infeasible] = -np.inf\n    feasible = item <= bins_remain_cap\n\n    if np.any(feasible):\n        fill_ratio = item / bins_remain_cap[feasible]\n        remaining_capacity = bins_remain_cap[feasible] - item\n        max_cap = np.max(bins_remain_cap) if np.max(bins_remain_cap) > 0 else 1\n        normalized_remaining = remaining_capacity / max_cap\n        priorities[feasible] = fill_ratio * np.exp(-5 * normalized_remaining)\n\n        waste = bins_remain_cap[feasible] - item\n        nearly_full = (waste > 0) & (waste < 0.1 * bins_remain_cap[feasible])\n        priorities[feasible][nearly_full] += 0.2 \n    else:\n        priorities = -np.arange(len(bins_remain_cap))\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}