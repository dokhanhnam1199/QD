```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    distances = np.abs(bins_remain_cap - item)
    distances = np.where(distances == 0, 1e-6, distances)
    proximity_fit = 1.0 / distances

    fullness = bins_remain_cap / np.max(bins_remain_cap)
    fullness_boost = 1 + 0.7 * fullness  # Adjusted weighting factor

    priorities = proximity_fit * fullness_boost

    return priorities
```
