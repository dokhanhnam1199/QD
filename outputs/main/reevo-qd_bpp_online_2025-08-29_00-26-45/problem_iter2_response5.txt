```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    eligible_bins = bins_remain_cap >= item
    if not np.any(eligible_bins):
        return priorities

    # Calculate wasted space if item is placed in each eligible bin
    wasted_space = bins_remain_cap[eligible_bins] - item

    # Prioritize bins with the least wasted space.  Add a small constant to avoid division by zero
    priorities[eligible_bins] = 1.0 / (wasted_space + 1e-6)

    return priorities
```
