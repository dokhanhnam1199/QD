```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Sigmoid Fit Score.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin using a sigmoid function.
    # The sigmoid function maps the ratio of item size to remaining capacity
    # to a value between 0 and 1, where a higher value indicates a better fit.

    # Avoid division by zero
    bins_remain_cap = np.where(bins_remain_cap == 0, 1e-6, bins_remain_cap)
    fit_scores = 1 / (1 + np.exp(-5 * (bins_remain_cap - item)))

    # Scale the fit scores to prioritize bins with a better fit.
    priorities = fit_scores

    return priorities
```
