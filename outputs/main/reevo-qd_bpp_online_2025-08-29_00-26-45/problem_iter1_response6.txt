```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Sigmoid Fit Score.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin
    fit_scores = item / bins_remain_cap
    fit_scores[bins_remain_cap < item] = np.inf  # Assign infinity to bins that are too small

    # Apply the sigmoid function to the fit scores
    # The sigmoid function transforms the fit score into a priority score between 0 and 1.
    # Bins with a lower fit score (better fit) will have a higher priority score.
    priorities = 1 / (1 + np.exp(fit_scores))  # Sigmoid function
    
    return priorities
```
