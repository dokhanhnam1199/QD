```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.1, decay_rate: float = 0.99) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
        epsilon: Probability of exploration.
        decay_rate: Rate at which epsilon decays.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)

    # Calculate fit score for each bin using a sigmoid function
    fit_scores = 1 / (1 + np.exp(- (bins_remain_cap - item) / item)) if np.any(bins_remain_cap > item) else np.zeros(n_bins)

    # Calculate greedy priority (best fit)
    for i in range(n_bins):
        if bins_remain_cap[i] >= item:
            priorities[i] = fit_scores[i] # Use sigmoid fit score

    # Exploration with probability epsilon
    if np.random.rand() < epsilon:
        priorities = np.random.rand(n_bins)

    # Decay epsilon
    epsilon *= decay_rate

    return priorities
```
