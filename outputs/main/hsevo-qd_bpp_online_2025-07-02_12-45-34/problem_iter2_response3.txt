```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste and overflow, combines best aspects of v0 and v1."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    waste = bins_remain_cap - item
    fit_mask = waste >= 0

    # Prioritize fitting bins, minimizing waste
    priorities[fit_mask] = 1 / (waste[fit_mask] + 0.000001)

    # For overflowing bins, prioritize those closest to fitting using log scale
    overflow_mask = ~fit_mask
    ratios = item / bins_remain_cap[overflow_mask]
    priorities[overflow_mask] = -np.log(ratios)

    return priorities
```
