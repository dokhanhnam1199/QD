```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste and overflow, combines best from v0 and v1."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    waste = bins_remain_cap - item
    fit_mask = waste >= 0
    overflow_mask = ~fit_mask

    # Prioritize fitting bins, minimizing waste (similar to v0)
    if np.any(fit_mask):
        priorities[fit_mask] = 1 / (waste[fit_mask] + 0.000001)
    
    # Prioritize bins that are close to fitting (inspired by v1 ratio idea)
    if np.any(overflow_mask):
        ratios = item / bins_remain_cap[overflow_mask]
        priorities[overflow_mask] = -ratios # Prioritize smaller ratios

    return priorities
```
