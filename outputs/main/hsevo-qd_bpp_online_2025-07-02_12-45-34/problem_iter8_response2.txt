```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities considering waste, overflow, and fill ratio."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    waste = bins_remain_cap - item
    fit_mask = waste >= 0
    
    # Prioritize bins with minimal waste, scaling with fill ratio.
    fill_ratio = (bins_remain_cap - waste) / bins_remain_cap
    priorities[fit_mask] = fill_ratio[fit_mask] / (waste[fit_mask] + 1e-6)

    # Penalize overflow, but less for near fits.
    overflow_mask = ~fit_mask
    overflow = item - bins_remain_cap[overflow_mask]
    priorities[overflow_mask] = -overflow / (np.max(bins_remain_cap) + 1e-6)

    return priorities
```
