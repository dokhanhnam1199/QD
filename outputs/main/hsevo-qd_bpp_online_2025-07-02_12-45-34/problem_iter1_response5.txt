```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Employing a 'best fit' with a preference for fuller bins and penalizing almost-full or over-full bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Very large negative priority for bins that can't fit the item
    priorities[bins_remain_cap < item] = -np.inf

    # Higher priority for bins with more remaining capacity up to a point, then penalize almost-full bins.
    # Aim for a 'best fit', but avoid filling bins almost completely to allow future items.

    # Option 1: Favor bins where the item fills them more than halfway
    #ratios = item / bins_remain_cap
    #priorities[bins_remain_cap >= item] = ratios[bins_remain_cap >= item]

    # Option 2: Base it purely on how much capacity remains after placement. Smaller remaining = better fit (initially)
    remaining_after_placement = bins_remain_cap - item
    valid_indices = remaining_after_placement >= 0
    priorities[valid_indices] = -np.abs(remaining_after_placement[valid_indices])  #Negative absolute value => smaller rem = higher priority

    #Option 3: a bit of both, prefer "full" bins by percentage
    #remaining_after_placement = bins_remain_cap - item
    #valid_indices = remaining_after_placement >= 0
    #percentage_filled = item / bins_remain_cap
    #priorities[valid_indices] = percentage_filled[valid_indices]

    # Penalize bins that would be too full with the item (i.e., almost full already)
    almost_full_threshold = 0.1 #Bins with < 10% remaining, will be considered almost full
    almost_full_indices = (bins_remain_cap > item) & (remaining_after_placement < almost_full_threshold)
    priorities[almost_full_indices] -= 100  # large penalty

    return priorities
```
