```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste, overflow, and fill ratio, adapting to item size."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    waste = bins_remain_cap - item
    fit_mask = waste >= 0
    overflow_mask = ~fit_mask

    # Minimize waste for fitting items
    priorities[fit_mask] = 1 / (waste[fit_mask] + 0.000001)

    # Minimize overflow for non-fitting items
    priorities[overflow_mask] = - (item - bins_remain_cap[overflow_mask]) / (np.max(bins_remain_cap) + 0.000001)

    # Adjust priority based on fill ratio of each bin
    fill_ratio = (1 - bins_remain_cap / np.max(bins_remain_cap))
    priorities += 0.1 * fill_ratio  # Add a bonus for bins that are already relatively full

    return priorities
```
