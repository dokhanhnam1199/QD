```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste and overflow, combined with capacity ratio."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    waste = bins_remain_cap - item
    fit_mask = waste >= 0
    overflow_mask = ~fit_mask

    # Fit priority: Minimize waste, consider capacity ratio
    priorities[fit_mask] = (1 / (waste[fit_mask] + 0.000001)) + (item / bins_remain_cap[fit_mask])

    # Overflow priority: Minimize overflow, penalize larger overflow stronger
    priorities[overflow_mask] = - (item - bins_remain_cap[overflow_mask])**2 / (np.max(bins_remain_cap) + 0.000001)
    return priorities
```
