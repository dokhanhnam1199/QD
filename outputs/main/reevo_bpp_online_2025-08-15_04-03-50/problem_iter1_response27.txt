```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.

    In Random Fit, we consider all bins that can accommodate the item.
    Then, we assign a random priority to these eligible bins.
    The higher the priority, the more likely it is to be chosen.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Identify bins that can accommodate the item
    eligible_bins_mask = bins_remain_cap >= item

    # Initialize priorities to zero
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Assign random priorities to eligible bins
    # We use a large number (e.g., 1000) to ensure that eligible bins have
    # non-zero and distinct priorities in most practical scenarios.
    num_eligible_bins = np.sum(eligible_bins_mask)
    if num_eligible_bins > 0:
        random_priorities = np.random.rand(num_eligible_bins) * 1000
        priorities[eligible_bins_mask] = random_priorities

    return priorities
```
