```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using the Almost Full Fit strategy.

    The strategy prioritizes bins that will have the smallest remaining capacity
    after the item is packed, provided the item fits. This aims to utilize bins
    more completely, leaving larger, more flexible capacities in other bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        Higher scores indicate higher priority.
    """
    # Initialize priorities to a very low value (-infinity) for bins that cannot accommodate the item.
    priorities = np.full_like(bins_remain_cap, -np.inf)

    # Identify bins where the item can fit.
    can_fit_mask = bins_remain_cap >= item

    # For bins that can fit the item, calculate the remaining capacity *after* packing.
    # We want to prioritize bins where this remaining capacity is minimized.
    # A common way to map minimization to maximization of a score is to use the negative.
    # So, for a bin `j` where `bins_remain_cap[j] >= item`, the priority score is
    # `- (bins_remain_cap[j] - item)`.
    # This means a smaller positive `bins_remain_cap[j] - item` will result in a
    # less negative (i.e., higher) priority score.
    # For example, if remaining capacities are [5, 3, 8] and item is 2:
    # - Bin 0: fits, remaining cap = 5-2=3. Priority = -3.
    # - Bin 1: fits, remaining cap = 3-2=1. Priority = -1.
    # - Bin 2: fits, remaining cap = 8-2=6. Priority = -6.
    # The highest priority is -1, corresponding to the bin with the smallest remaining capacity after packing.

    if np.any(can_fit_mask):
        remaining_after_fit = bins_remain_cap[can_fit_mask] - item
        # Assign the negative of the remaining capacity as the priority score.
        priorities[can_fit_mask] = -remaining_after_fit

    return priorities
```
