```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if item <= cap:
            # Primary priority: Can the item fit? Higher remaining capacity is better.
            priorities[i] = cap - item  # Favor bins with smallest waste
            if cap - item < 0.1: # Small threshold to prioritize near fits
                priorities[i] += 1 # slight bonus
        else:
            # Impossible to fit in the bin
            priorities[i] = -np.inf  # Strongly discourage

    return priorities
```
