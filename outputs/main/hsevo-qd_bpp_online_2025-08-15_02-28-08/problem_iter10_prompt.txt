{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Prioritizes bins with exact or near-exact fits using a ratio-based score.\n\n    This heuristic favors bins where the remaining capacity is as close as possible to\n    the item size, assigning higher scores to tighter fits.\n    \"\"\"\n    epsilon = 1e-9\n    \n    # Initialize priorities to zero for all bins\n    priorities = np.zeros_like(bins_remain_cap)\n    \n    # Identify bins where the item can fit\n    can_fit_mask = bins_remain_cap >= item\n    \n    # Calculate the difference between remaining capacity and item size for fitting bins\n    diff = bins_remain_cap[can_fit_mask] - item\n    \n    # Calculate scores for bins where the item fits.\n    # The score is `bins_remain_cap / (diff + epsilon)`.\n    # This ratio emphasizes bins where `diff` is small (tight fits).\n    # For an exact fit (diff=0), the score becomes `bins_remain_cap / epsilon`, which is very high.\n    # For larger differences, the ratio tends to be smaller.\n    priorities[can_fit_mask] = bins_remain_cap[can_fit_mask] / (diff + epsilon)\n    \n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}