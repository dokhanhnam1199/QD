```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Almost Full Fit strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between bin capacity and item size
    differences = bins_remain_cap - item

    # Prioritize bins that can fit the item
    # For bins that can fit, the priority is inversely related to the remaining capacity
    # to encourage using bins that are almost full.
    # We use a large negative number for bins that cannot fit the item.
    priorities = np.where(differences >= 0, 1 / (differences + 1e-9), -np.inf)

    return priorities
```
