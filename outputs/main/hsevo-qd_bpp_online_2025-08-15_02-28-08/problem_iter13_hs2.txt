import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 2.8649462909950624e-06) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Almost Full Fit strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
        epsilon: A small constant to avoid division by zero.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    available_bins_mask = bins_remain_cap >= item
    
    if np.any(available_bins_mask):
        available_bins_remain_cap = bins_remain_cap[available_bins_mask]
        
        sorted_indices = np.argsort(available_bins_remain_cap)
        
        priorities[available_bins_mask] = 1.0 / (available_bins_remain_cap - item + epsilon)
        
        priorities[available_bins_mask] = np.argsort(np.argsort(priorities[available_bins_mask]))
    
    return priorities
