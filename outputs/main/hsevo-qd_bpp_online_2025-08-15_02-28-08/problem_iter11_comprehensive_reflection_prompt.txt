{"system": "You are an expert in the domain of optimization heuristics. Your task is to provide useful advice based on analysis to design better heuristics.\n", "user": "Your task is to redefine 'Current self-reflection' paying attention to avoid all things in 'Ineffective self-reflection' in order to come up with ideas to design better heuristics.\n\n### Current self-reflection\nPrioritize exact fits with the highest score. For non-exact fits, use inverse of normalized excess capacity, scaling to differentiate ranks while keeping them below exact fit scores. Robust normalization is key for handling diverse capacity ranges.\n*   **Prioritize Exact Fits:** Implement distinct, high priority levels for bins that offer an exact fit.\n*   **Best Fit Robustness:** When using \"best fit\" (minimal excess capacity), normalize differences relative to the minimum difference to avoid bias from large capacities.\n*   **Vectorization:** Prefer vectorized NumPy operations over explicit loops for efficiency and readability.\n*   **Clarity:** Simpler, interpretable scoring functions tend to be more reliable and easier to tune. Avoid overly complex transformations unless clearly justified by performance gains.\n\n### Ineffective self-reflection\nPrioritize exact fits and tight fits to minimize fragmentation. Simple inverse relationships with remaining space often perform well. Complex non-linear functions (like sigmoid) require careful tuning and may not generalize. Avoid unusual array manipulations like nested `argsort` without clear justification. Ensure clear intent in docstrings and implementation.\n\nPrioritize direct, interpretable scoring functions that capture the heuristic's intent (e.g., closeness to fit). Hybrid strategies combining exact fits with well-scaled \"close fit\" scores can be robust. Avoid overly complex normalization if simpler methods achieve similar goals. Vectorized operations are crucial for performance.\n\nResponse (<100 words) should have 4 bullet points: Keywords, Advice, Avoid, Explanation.\nI'm going to tip $999K for a better heuristics! Let's think step by step."}