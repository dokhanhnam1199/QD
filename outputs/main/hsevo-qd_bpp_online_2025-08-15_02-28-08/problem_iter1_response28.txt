```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins = bins_remain_cap >= item
    if np.any(suitable_bins):
        priorities[suitable_bins] = 1.0 / (bins_remain_cap[suitable_bins] - item + 1e-6)
        
        max_priority = np.max(priorities)
        priorities = np.where(priorities == max_priority, max_priority * 1.1, priorities)
        
        min_remaining_cap_index = np.argmin(bins_remain_cap[suitable_bins])
        priorities[suitable_bins[suitable_bins]][min_remaining_cap_index] *= 1.2

    return priorities
```
