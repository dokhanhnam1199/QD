```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item
    remaining_after_add = bins_remain_cap - item
    
    # Bins that can't fit the item will have negative remaining capacity
    # Assign a very low priority to such bins
    priorities = np.where(remaining_after_add >= 0, -remaining_after_add, -np.inf)
    
    # Normalize the priorities to be between 0 and 1
    max_priority = np.max(priorities)
    if max_priority != -np.inf:  # Check if at least one bin can fit the item
        priorities = priorities - max_priority
    
    return priorities
```
