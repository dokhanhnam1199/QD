```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities based on fit, fill ratio, and waste."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit = item <= bins_remain_cap
    waste = bins_remain_cap - item
    
    priorities[~fit] = -np.inf  # Infeasible bins get lowest priority

    # Reward bins with high fill ratio and low waste
    fill_ratio = item / bins_remain_cap[fit]
    priorities[fit] = fill_ratio + np.exp(-waste[waste >= 0] * 5) # Adjusted waste exponent
    
    # Further prioritize bins which leave minimal waste to prevent fragmentation
    priorities[fit] += np.exp(-np.abs(waste[waste >= 0] - np.mean(item)) * 2)

    return priorities
```
