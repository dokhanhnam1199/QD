```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill rate and wasted space, penalizing infeasible bins."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit = item <= bins_remain_cap
    waste = bins_remain_cap - item
    
    priorities[~fit] = -np.inf  # Infeasible bins get lowest priority

    # Prioritize near-perfect fits and avoid creating small fragments.
    fill_ratio = item / bins_remain_cap
    priorities[fit] = fill_ratio[fit] + np.exp(-waste[waste >= 0] * 5) # Adjusted penalty

    return priorities
```
