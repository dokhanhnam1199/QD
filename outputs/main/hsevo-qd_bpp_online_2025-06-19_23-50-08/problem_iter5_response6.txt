```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering fill rate, waste, and target remaining capacity."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit = item <= bins_remain_cap
    waste = bins_remain_cap - item

    priorities[~fit] = -np.inf  # Impossible to fit

    # Fill ratio + waste penalty
    priorities[fit] = (item / bins_remain_cap[fit]) + np.exp(-waste[waste >= 0] * 5)

    # Bonus for bins with remaining capacity close to target (avg of item size).
    avg_item_size = np.mean(item)
    remaining_after_fit = bins_remain_cap[fit] - item
    target_diff = np.abs(remaining_after_fit - avg_item_size)
    priorities[fit] += np.exp(-target_diff * 2)
    return priorities
```
