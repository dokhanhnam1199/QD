{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Prioritizes bins considering fill rate, waste, and infeasibility.\"\"\"\n\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n\n    fit = item <= bins_remain_cap\n    waste = bins_remain_cap - item\n\n    priorities[~fit] = -np.inf  # Impossible to fit\n\n    # Fill ratio + waste penalty, adjusted penalty strength for finer control.\n    priorities[fit] = (item / bins_remain_cap[fit]) + np.exp(-waste[waste >= 0] * 5)\n\n    # Refinement: slight bonus for bins that will have remaining capacity close to the average item size.\n    avg_item_size = np.mean(item)  # Average item for online setting\n    remaining_after_fit = bins_remain_cap[fit] - item\n    priorities[fit] += np.exp(-np.abs(remaining_after_fit - avg_item_size) * 2) # Add bonus\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}