```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill rate, waste, and infeasibility."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit = item <= bins_remain_cap
    waste = bins_remain_cap - item
    
    priorities[~fit] = -np.inf  # Infeasible bins get very low priority

    # Combine fill rate and waste penalty:
    fill_rate_component = item / bins_remain_cap[fit]
    waste_penalty_component = np.exp(-waste[waste >= 0] * 5)  # Adjusted waste impact

    priorities[fit] = fill_rate_component + waste_penalty_component
    return priorities
```
