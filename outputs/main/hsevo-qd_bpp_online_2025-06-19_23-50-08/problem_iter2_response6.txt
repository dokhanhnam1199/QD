```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill rate, waste, and fit."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fit = item <= bins_remain_cap
    waste = bins_remain_cap - item

    priorities[~fit] = -np.inf  # Impossible to fit

    #Combines fill ratio with a waste penalty, adjusted exponent
    priorities[fit] = (item / bins_remain_cap[fit]) + np.exp(-waste[waste >= 0] * 5)

    # Adds a bonus for bins that are filled very close to full
    almost_full = (waste >= 0) & (waste <= 0.1)  # Tunable threshold
    priorities[fit][almost_full[fit]] += 1  # Bonus

    return priorities
```
