```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering fill rate, waste, and infeasibility."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    fit = item <= bins_remain_cap
    waste = bins_remain_cap - item

    priorities[~fit] = -np.inf  # Impossible to fit

    # Fill ratio + waste penalty.
    priorities[fit] = (item / bins_remain_cap[fit]) + np.exp(-waste[waste >= 0])

    # slight bonus for less remaining capacity
    priorities[fit] += (1 - (bins_remain_cap[fit] - item) / np.max(bins_remain_cap))

    return priorities
```
