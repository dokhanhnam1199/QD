```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities, combining wasted space and capacity ratio."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            wasted_space = cap - item
            priorities[i] = 1.0 / (1.0 + wasted_space) #Minimizes wasted space

            # Incorporate capacity ratio to prioritize tighter fits
            capacity_ratio = item / cap
            priorities[i] += capacity_ratio * 0.2 # Tuneable weight for ratio
        else:
            priorities[i] = -1e9  # Very low priority if item doesn't fit.

    # Add a small random factor to break ties
    priorities += np.random.rand(len(bins_remain_cap)) * 0.01
    return priorities
```
