```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines wasted space minimization and capacity ratio."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            wasted_space = cap - item
            priorities[i] = 1.0 / (1.0 + wasted_space)
        else:
            priorities[i] = -1e9

    ratios = item / bins_remain_cap
    log_ratios = np.log(ratios)
    priorities += -0.1 * log_ratios  # Scale and combine

    priorities += np.random.rand(len(bins_remain_cap)) * 0.01
    return priorities
```
