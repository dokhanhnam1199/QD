```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines wasted space minimization and a penalty for not fitting."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    max_cap = np.max(bins_remain_cap)

    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            wasted_space = cap - item
            priorities[i] = 1.0 / (1.0 + wasted_space/max_cap) # Normalize wasted space
        else:
            priorities[i] = -1e6  # High penalty for not fitting

    return priorities
```
