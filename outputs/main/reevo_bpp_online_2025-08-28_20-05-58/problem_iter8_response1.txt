```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item

    if np.sum(valid_bins) == 0:
        return priorities

    distances = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = distances  # Prioritize bins that leave less space

    exact_fit_indices = np.where(bins_remain_cap == item)[0]
    if len(exact_fit_indices) > 0:
        priorities[exact_fit_indices] = 1e9  # Highest priority for exact fit

    return priorities
```
