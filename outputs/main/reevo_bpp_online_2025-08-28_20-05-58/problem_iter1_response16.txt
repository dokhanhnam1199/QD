```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Sigmoid Fit Score.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin using a sigmoid function.
    # Fit score is high when the item fits well into the remaining capacity.
    # The sigmoid function ensures that the score is between 0 and 1.
    # We use a scaling factor of 10 to adjust the sigmoid curve.
    fit_scores = 1 / (1 + np.exp(-10 * (bins_remain_cap - item)))

    # Prioritize bins with higher fit scores.
    priorities = fit_scores

    return priorities
```
