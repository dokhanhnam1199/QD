```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the item size and the remaining capacity of each bin
    diffs = bins_remain_cap - item

    # Assign a priority of 0 to bins that cannot accommodate the item
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = diffs >= 0
    priorities[feasible_bins] = diffs[feasible_bins]

    # Normalize priorities to create a probability distribution
    probabilities = np.exp(priorities)
    probabilities /= np.sum(probabilities)
    
    return probabilities
```
