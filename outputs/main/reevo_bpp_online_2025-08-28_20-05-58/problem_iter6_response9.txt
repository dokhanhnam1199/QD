```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return np.zeros_like(bins_remain_cap)

    distances = np.abs(bins_remain_cap[valid_bins] - item)
    priorities = np.exp(-distances / item)  # Normalize distance by item size
    probabilities = priorities / np.sum(priorities)

    result = np.zeros_like(bins_remain_cap)
    result[valid_bins] = probabilities
    return result
```
