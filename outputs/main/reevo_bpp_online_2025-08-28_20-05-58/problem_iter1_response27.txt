```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    # Create a boolean array indicating which bins can fit the item
    can_fit = bins_remain_cap >= item

    # If no bins can fit the item, return zero priorities.
    if not np.any(can_fit):
        return priorities

    # Assign priority 1 to bins that can fit the item.
    priorities[can_fit] = 1

    #Randomly shuffle the priorities within those that can fit. This is the "random" aspect of Random Fit
    np.random.shuffle(priorities[can_fit])

    return priorities
```
