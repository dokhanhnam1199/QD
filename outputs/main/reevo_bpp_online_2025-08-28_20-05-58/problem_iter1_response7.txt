```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    # Find bins that can fit the item
    feasible_bins = bins_remain_cap >= item

    # If no bins can fit the item, return 0 priorities
    if not np.any(feasible_bins):
        return priorities
    
    # Assign priority based on a random subset of feasible bins.
    num_feasible = np.sum(feasible_bins)
    
    # Select a random number of feasible bins (between 1 and all feasible bins)
    num_to_consider = np.random.randint(1, num_feasible + 1)

    # Randomly choose indices of feasible bins to assign priority to
    random_indices = np.random.choice(np.where(feasible_bins)[0], size=num_to_consider, replace=False)

    # Assign priority 1 to selected bins
    priorities[random_indices] = 1
    
    return priorities
```
