```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Best Fit (Negative Remainder) for Online Bin Packing.
    Prioritizes bins that, after accommodating the item, would have the smallest
    remaining capacity. Infeasible bins receive lowest priority.
    """
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Identify bins that can physically accommodate the item.
    can_fit_mask = bins_remain_cap >= item

    # For eligible bins, calculate the remaining capacity after item placement.
    # The priority is the negative of this remaining capacity; smaller remaining
    # capacity (closer to zero or perfect fit) results in a higher (less negative) priority.
    remaining_space_after_fit = bins_remain_cap[can_fit_mask] - item
    priorities[can_fit_mask] = -remaining_space_after_fit

    return priorities
```
