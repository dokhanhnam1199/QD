```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities considering near-fit and fragmentation."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins = bins_remain_cap >= item
    
    if not np.any(valid_bins):
        return priorities
    
    near_fit_threshold = 0.9
    near_fit_bonus = 10.0
    fragmentation_penalty = -5.0

    
    capacity_ratios = item / bins_remain_cap[valid_bins]
    near_fit = (capacity_ratios > near_fit_threshold) & (capacity_ratios <= 1.0)
    priorities[valid_bins] += near_fit * near_fit_bonus
    
    remaining_after_fit = bins_remain_cap[valid_bins] - item
    small_fragment = remaining_after_fit < 0.1
    priorities[valid_bins] += small_fragment * fragmentation_penalty
    
    return priorities
```
