def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the closeness of the remaining capacity to a target fill level, penalizing deviations.}"""
  priority = []
  target_fill = 0.75 # Define a target fill level for the bins.
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_after_fill = cap - item
      # Calculate deviation from target fill (absolute difference)
      deviation = abs(remaining_after_fill - (1 - target_fill) * cap)
      # Prioritize bins that result in capacity closest to the target_fill, lower deviation is better.
      priority.append(-deviation)
    else:
      priority.append(-100000)  # extremely low priority if item does not fit
      
  return priority
