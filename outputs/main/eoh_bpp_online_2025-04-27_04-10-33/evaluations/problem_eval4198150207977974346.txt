def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by considering both the fill ratio and the absolute waste, favoring bins that are neither too full nor leave excessive empty space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            waste = cap - item
            priority.append(fill_ratio - 0.1 * waste) # weighted priority based on fill ratio and waste
        else:
            priority.append(-1000)  # Item doesn't fit

    return priority
