def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how closely the item size matches the remaining capacity of each bin, with a bonus for bins that can accommodate the item perfectly and a penalty for bins that are nearly full after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining = cap - item
      if remaining == 0:
        priority.append(1000) # perfect fit bonus
      else:
        penalty = 0
        if remaining < 0.1: # if bin is almost full penalize a little
          penalty = -500
        priority.append(1.0 / (remaining + 0.00001) + penalty) # prioritize bins where remaining capacity is close to the item size
    else:
      priority.append(-100000)  # extremely low priority if item does not fit
      
  return priority
