def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates priority based on a bin's closeness to half-full after packing the item, penalizing bins that are too full or would become nearly empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            new_cap = cap - item
            distance_from_half = abs(new_cap - 50)  # Assuming bin capacity is 100
            priority.append(100.0 / (distance_from_half + 0.001)) # Inverse of distance from half-full
        else:
            priority.append(-1)  # Item doesn't fit

    return priority
