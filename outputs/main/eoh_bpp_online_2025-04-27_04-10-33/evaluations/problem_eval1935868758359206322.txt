def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the remaining capacity, favoring bins with larger remaining capacity if the item fits, and penalizing bins that cannot accommodate the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(cap)  # Higher remaining capacity means higher priority
    else:
      priority.append(-float('inf'))
  return priority
