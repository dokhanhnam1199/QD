def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin for an item based on a combination of remaining capacity and fill percentage, favoring bins that are neither too full nor too empty.}"""
    priorities = []
    bin_capacity = 1 # Assuming bin capacity is 1
    for cap in bins_remain_cap:
        if cap >= item:
            fill_percentage = (bin_capacity - cap + item) / bin_capacity
            priority = (item/cap) * (1 - abs(fill_percentage-0.5)) #Prioritize more filled and less empty bins
        else:
            priority = -1
        priorities.append(priority)
    return priority
