def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of bin utilization after placing the item, favoring bins where the utilization is closest to a target utilization percentage.}"""
  priority = []
  target_utilization = 0.75  # Target utilization percentage after placing the item
  bin_capacity = 1.0  # Assuming bins have a capacity of 1
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      utilization = (bin_capacity - new_cap) / bin_capacity
      priority.append(-abs(utilization - target_utilization))  # Minimize the difference from the target
    else:
      priority.append(-float('inf'))
  return priority
