def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and item size, favoring bins with remaining capacity slightly larger than the item size while penalizing bins with too little space or waste a lot of space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append(100.0 / (1 + (cap - item)**2) - 50 * (waste > 0.75 * item))
        else:
            priority.append(-1)

    return priority
