def priority_v2(item, bins_remain_cap):
  """{This algorithm selects the bin that minimizes the wasted space relative to the item size, penalizing bins that would become less than a quarter full.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining = cap - item
      waste_ratio = remaining / item if item > 0 else 0 # Avoid division by zero for zero-sized items
      if remaining < 0.25:
          priority_score = -1000  # Heavily penalize bins that would become less than a quarter full.
      else:
          priority_score = -waste_ratio
      priority.append(priority_score)
    else:
      priority.append(-float('inf'))
  return priority
