def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and item size relative to the bin capacity, awarding higher priority to bins where the item fills a significant portion of the remaining capacity without overfilling.}"""
    priorities = []
    bin_capacity = 1
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / bin_capacity
            remaining_ratio = cap / bin_capacity
            priority = fill_ratio/(remaining_ratio + 0.00001)
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
