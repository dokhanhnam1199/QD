def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority scores based on how close the item's size is to the Fibonacci sequence and uses the corresponding Fibonacci number, scaled by remaining capacity, as the priority.}"""
  fibonacci = [1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144]
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      closest_fib = min(fibonacci, key=lambda x: abs(x - item))
      priority.append(closest_fib * cap)
    else:
      priority.append(-1)
  return priority
