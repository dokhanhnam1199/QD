def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin for an item based on a weighted score combining remaining capacity, item size relative to bin capacity, and a penalty for exceeding a waste threshold.}"""
    priorities = []
    bin_capacity = 1 # Assuming bin capacity is 1

    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            item_ratio = item / bin_capacity  # Ratio of item size to bin capacity

            # Score based on remaining capacity, item ratio, and waste penalty
            priority = (cap + item_ratio) * (1 - (waste > 0.3)) # Penalize waste exceeding threshold
        else:
            priority = -1

        priorities.append(priority)
    return priority
