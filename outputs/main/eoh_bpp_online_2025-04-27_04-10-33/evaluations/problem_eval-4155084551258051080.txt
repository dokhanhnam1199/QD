def priority_v3(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a weighted combination of remaining capacity closeness to the item size and a penalty for exceeding a waste threshold.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            if waste == 0:
                priority.append(1000)
            elif waste <= item * 0.2: # Waste threshold is set to 20% of item size
                priority.append(500 / (waste + 0.001)) # Higher priority if waste is small
            else:
                priority.append(1.0 / (waste + 0.001)) # Lower priority if waste is larger
        else:
            priority.append(-1)

    return priority
