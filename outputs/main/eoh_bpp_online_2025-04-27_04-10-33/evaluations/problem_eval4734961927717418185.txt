def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how well the item size matches the remaining capacity, giving higher priority to bins with smaller remaining capacities that can still accommodate the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      utilization = item / cap
      priority.append(1 / cap) # Prioritize smaller remaining capacity
    else:
      priority.append(-float('inf'))
  return priority
