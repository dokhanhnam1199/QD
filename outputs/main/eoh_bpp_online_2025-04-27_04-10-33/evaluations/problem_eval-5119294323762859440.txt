def priority_v2(item, bins_remain_cap):
  """
  {This algorithm prioritizes bins based on a combination of remaining capacity, item size, and a penalty for bins that are too full or too empty.}
  """
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(cap - item) # prioritize bins with smaller remaining space after item is placed
    else:
      priority.append(-100000)  # extremely low priority if item does not fit
      
  return priority
