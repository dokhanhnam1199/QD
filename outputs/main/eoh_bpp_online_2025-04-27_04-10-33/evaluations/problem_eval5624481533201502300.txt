def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and the waste after packing the item, favoring bins with capacity close to the item size and penalizing those with too little or too much remaining space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append(100.0 / (abs(cap - 1.5 * item) + 0.001)) # Prioritize bins close to item size
        else:
            priority.append(-1)  # Item doesn't fit

    return priority
