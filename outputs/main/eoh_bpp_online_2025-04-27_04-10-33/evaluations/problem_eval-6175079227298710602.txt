def priority_v3(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and the waste after packing the item, favoring bins that can accommodate the item with minimal waste relative to the bin's original capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append((cap - waste)/(cap+0.001))  # Ratio of used capacity to initial capacity
        else:
            priority.append(-1)  # Item doesn't fit

    return priority
