def priority_v2(item, bins_remain_cap):
  """{Assign a priority score to each bin based on the remaining capacity and item size, favoring bins with capacity closest to the item size and avoiding bins that are too full or too empty.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = (1.0 / (abs(cap - item) + 0.0001))  # Avoid division by zero
      if cap > item * 2:
        priority *= 0.5  # Penalize bins that are too large
    else:
      priority = -1  # Impossible to fit
    priorities.append(priority)
  return priority
