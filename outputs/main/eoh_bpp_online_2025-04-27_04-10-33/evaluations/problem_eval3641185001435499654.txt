def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based primarily on maximizing the remaining capacity after placing the item, with slight adjustments for near-full/empty bins and a bonus for moderately filled bins.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      if new_cap < 0.1:
        priority.append(-50)
      elif new_cap > 0.9:
        priority.append(-50)
      elif 0.3 <= new_cap <= 0.7:
        priority.append(new_cap + 50) # Moderate fill bonus
      else:
        priority.append(new_cap)
    else:
      priority.append(-float('inf'))
  return priority
