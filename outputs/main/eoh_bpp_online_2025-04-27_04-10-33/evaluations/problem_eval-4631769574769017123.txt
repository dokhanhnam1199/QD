def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how closely the item size matches the remaining capacity, with a bonus for bins that are at least half-full after packing.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining = cap - item
      priority_score = -abs(remaining - item) # Prioritize bins where the remaining space is close to item size.
      if remaining >= 0.5:
        priority_score += 10  # Bonus for being at least half-full
      priority.append(priority_score)
    else:
      priority.append(-100000)  # Extremely low priority if item does not fit
  return priority
