def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority based on how close the item size is to a fraction of the remaining bin capacity, favoring bins where the item fills a significant portion without overfilling.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      ratio = float(item) / cap
      if 0.2 <= ratio <= 0.8:
        priority.append(ratio)
      else:
        priority.append(-abs(ratio - 0.5))
    else:
      priority.append(-float('inf'))
  return priority
