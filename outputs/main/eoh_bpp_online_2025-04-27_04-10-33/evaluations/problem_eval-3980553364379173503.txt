def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates priority scores for bins based on the waste generated after placing the item in the bin, penalizing bins that cannot accommodate the item and rewarding bins with lower waste and perfectly fit bins.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      if waste == 0:
        priority.append(1000)  # High priority for perfect fit
      else:
        priority.append(1 / (waste + 0.001))  # Lower waste, higher priority
    else:
      priority.append(-1000)  # Very low priority for invalid bins
  return priority
