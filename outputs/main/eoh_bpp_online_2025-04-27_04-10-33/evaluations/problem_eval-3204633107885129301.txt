def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of the bin filled by the item, penalizing bins that would become too full.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining = cap - item
      fill_percentage = item / cap
      priority_score = fill_percentage  # Prioritize bins with higher fill percentage.
      if remaining < 0.2:
        priority_score -= 5  # Penalize bins that would become too full
      priority.append(priority_score)
    else:
      priority.append(-100000)  # Extremely low priority if item does not fit
  return priority
