def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin for an item by considering the wasted space if the item is placed in the bin, penalizing bins with excessive remaining capacity after placement and rewarding bins that are relatively full.}"""
    priorities = []
    bin_capacity = 1 # Assuming bin capacity is 1
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            fill_percentage = (bin_capacity - cap + item) / bin_capacity
            priority = fill_percentage / (1 + wasted_space) # Reward full bins, penalize wasted space
        else:
            priority = -1
        priorities.append(priority)
    return priority
