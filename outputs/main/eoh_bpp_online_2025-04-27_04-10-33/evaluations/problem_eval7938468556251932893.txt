def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a cost function that considers the wasted space if the item is placed in the bin, normalized by the bin's original capacity.}"""
  priority = []
  bin_capacity = 100 #Assume bin capacity is 100
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority_score = 1 - (wasted_space / bin_capacity)  # Normalize wasted space
      priority.append(priority_score)
    else:
      priority.append(-1) # Item doesn't fit
  return priority
