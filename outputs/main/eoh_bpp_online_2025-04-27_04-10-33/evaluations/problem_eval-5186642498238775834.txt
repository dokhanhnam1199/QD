def priority_v3(item, bins_remain_cap):
    """{This algorithm assigns priority based on how well the item fills the bin, rewarding bins that are nearly filled and penalizing those with significant wasted space, with an added bonus for bins that can accommodate the item exactly.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            fill_ratio = item / cap
            if waste == 0:
                priority.append(1000)
            else:
                priority.append(fill_ratio * 100)
        else:
            priority.append(-1)

    return priority
