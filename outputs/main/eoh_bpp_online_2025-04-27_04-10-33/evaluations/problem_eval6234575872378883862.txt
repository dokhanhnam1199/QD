def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin by considering the ratio of item size to remaining capacity, penalizing bins with either insufficient capacity or excessive waste after packing.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            if waste == 0:
                priority.append(1000)  # Perfect fit
            else:
                ratio = float(item) / cap
                priority.append(ratio * (1 - (float(waste) / cap))) #ratio of item to capacity multiplied by waste penalty.
        else:
            priority.append(-1)  # Item doesn't fit

    return priority
