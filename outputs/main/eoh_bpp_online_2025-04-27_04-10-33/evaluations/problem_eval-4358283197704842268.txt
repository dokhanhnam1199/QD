def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by favoring those with remaining capacity closest to half the bin size after placing the item, while still avoiding near-empty and near-full bins.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      if new_cap == 0:
        priority.append(1000)
      elif new_cap < 0.1:
        priority.append(-100)
      elif new_cap > 0.9:
        priority.append(-100)
      else:
        priority.append(-abs(new_cap - 0.5)) #Prioritize bins closer to half-full
    else:
      priority.append(-float('inf'))
  return priority
