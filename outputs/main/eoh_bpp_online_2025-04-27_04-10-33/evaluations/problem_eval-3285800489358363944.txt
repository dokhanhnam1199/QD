def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority to each bin based on how much space would be left after adding the item, favoring bins that leave a small but non-negative remaining capacity, with additional bonus for nearly full bins.}"""
  priority = []
  for cap in bins_remain_cap:
    rem_cap = cap - item
    if rem_cap < 0:
      priority.append(-1) 
    else:
      priority_score = 1 / (rem_cap + 0.0001)  
      if rem_cap <= 0.1:
        priority_score += 10  
      priority.append(priority_score)
  return priority
