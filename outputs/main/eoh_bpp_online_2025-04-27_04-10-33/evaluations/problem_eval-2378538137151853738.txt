def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin for an item by considering the wasted space if the item is placed in the bin, penalizing bins with excessive wasted space and bins that cannot accommodate the item.}"""
    priorities = []
    bin_capacity = 1  # Assuming bin capacity is 1
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            #Prioritize bins with less wasted space, but penalize excessive waste.
            priority = 1 - (wasted_space + wasted_space**2)
            if priority < 0:
                priority = 0 #No negative priority
        else:
            priority = -1  # Cannot fit
        priorities.append(priority)
    return priority
