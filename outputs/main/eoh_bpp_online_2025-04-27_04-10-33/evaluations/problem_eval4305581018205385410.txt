def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a combination of space utilization, a penalty for small remaining space, and a bonus for filling the bin beyond a certain threshold.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      utilization = item / (cap + item) # Space utilization with the new item added to calculate the percentage
      if new_cap <= 0.2:
          penalty = -50 # Penalty for small remaining space
      else:
          penalty = 0
      if (cap - new_cap) >= 0.75:  # Check the amount item occupies with respect to the bin
        bonus = 10 # Bonus if the bin is filled beyond a certain threshold
      else:
        bonus = 0
      priority_score = utilization * 100 + penalty + bonus
      priority.append(priority_score)
    else:
      priority.append(-float('inf'))
  return priority
