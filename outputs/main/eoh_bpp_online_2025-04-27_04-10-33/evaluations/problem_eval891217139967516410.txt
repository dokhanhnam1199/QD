def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins that can fit the item, rewarding fuller bins while also considering the item's size relative to the bin's capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining = cap - item
      capacity_ratio = item / cap  # Ratio of item size to bin capacity
      priority_score = capacity_ratio # Reward fuller bins that still fit
      if remaining < 0.1:
          priority_score += 2 # Additional reward for almost full bins
      elif remaining > 0.5:
          priority_score -= 1 # Penalize bins with a lot of remaining space
      priority.append(priority_score)
    else:
      priority.append(-1000)
  return priority
