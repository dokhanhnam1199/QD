def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by considering the ratio of item size to remaining capacity, with a bonus for bins that are neither too full nor too empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      ratio = item / cap # Calculate the ratio of item size to remaining capacity
      
      #Add a bonus if the remaining capacity after adding the item is within a reasonable range (e.g., 10%-90% full)
      remaining_after = cap - item
      if remaining_after >= 0.1 and remaining_after <= 0.9:
          bonus = 10  # add a bonus to the priority
      else:
          bonus = 0
      
      priority.append(ratio + bonus) 
    else:
      priority.append(-100000)  # extremely low priority if item does not fit

  return priority
