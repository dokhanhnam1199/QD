def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority to each bin based on a combination of remaining capacity and how well the item fits, favoring bins with enough space and a tighter fit.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority.append((cap - item) / (cap + item))  # Gap normalized by total capacity related to the bin and item size.
        else:
            priority.append(-1) # Assign negative priority to bins that are too small
    return priority
