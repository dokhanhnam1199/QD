def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by considering the ratio of the item size to the bin's remaining capacity, favoring bins where the item fills a significant portion of the bin without causing excessive fragmentation.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            fill_ratio = float(item) / cap
            if waste == 0:
                priority.append(1000)
            elif fill_ratio > 0.8:
                 priority.append(fill_ratio * 500)
            else:
                priority.append(fill_ratio * 100)
        else:
            priority.append(-1)

    return priority
