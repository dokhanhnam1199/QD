def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, adjusted by a factor that encourages filling bins as much as possible.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      ratio = float(item) / cap
      priority_score = ratio - (1 - ratio)**2 #Prioritize bins where the item fills a significant portion of the remaining capacity, but discourage leaving very small spaces.
      priority.append(priority_score)
    else:
      priority.append(-100000)
  return priority
