def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates the priority of each bin for an item based on a weighted combination of remaining capacity ratio and wasted space ratio, favoring bins with lower wasted space and sufficient remaining capacity.}"""
    priorities = []
    bin_capacity = 1 # Assuming bin capacity is 1
    for cap in bins_remain_cap:
        if cap >= item:
            capacity_ratio = item / cap
            wasted_space_ratio = cap / bin_capacity
            priority = capacity_ratio * (1 - wasted_space_ratio)
        else:
            priority = -1
        priorities.append(priority)
    return priority
