def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the absolute difference between the item size and a target percentage of the remaining capacity, favoring bins where the item size closely matches the target capacity utilization.}"""
  priority = []
  target_utilization = 0.75  # Aim for 75% utilization
  for cap in bins_remain_cap:
    if cap >= item:
      utilization = item / cap
      difference = abs(utilization - target_utilization)
      priority.append(-difference)  # Lower difference means higher priority
    else:
      priority.append(-float('inf'))
  return priority
