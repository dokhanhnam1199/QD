def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how well the item fills the bin, with a bonus for bins filled beyond a certain threshold, and a penalty for bins that would become too empty.}"""
  priority = []
  bin_capacity = 1  # Assuming bin capacity is normalized to 1
  fullness_threshold = 0.75
  emptiness_threshold = 0.25

  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      fullness = 1 - new_cap / bin_capacity
      
      score = fullness

      if fullness > fullness_threshold:
          score += 0.5 # Bonus for filling beyond threshold
      
      if new_cap < emptiness_threshold:
          score -= 0.25  # Penalty for creating near-empty bin

      priority.append(score)
    else:
      priority.append(-100000)  # extremely low priority if item does not fit
      
  return priority
