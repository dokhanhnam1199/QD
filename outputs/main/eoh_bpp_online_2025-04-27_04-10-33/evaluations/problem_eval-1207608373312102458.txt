def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of bin utilization after packing the item, favoring bins with higher utilization.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      utilization = (cap - new_cap) / 1.0  # Calculate utilization (item_size / bin_capacity). Assume bin capacity = 1.
      priority.append(utilization)
    else:
      priority.append(-float('inf'))
  return priority
