```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin. 
    Combines the benefits of prioritizing bins with enough capacity and minimizing waste.
    """
    # Check if the item can fit in each bin
    valid_bins = (bins_remain_cap >= item).astype(float)
    
    # Higher priority for bins with less remaining capacity after adding the item
    priority_scores = np.where(valid_bins == 1, 1 / (bins_remain_cap + 1e-6), -1.0)
    
    # Modify the priority scores to also consider the fullness of the bin
    fullness_factor = 1 + (1 - (bins_remain_cap - item) / bins_remain_cap)
    priority_scores = np.where(valid_bins == 1, priority_scores * fullness_factor, priority_scores)
    
    return priority_scores
```
