```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin using an advanced nuanced heuristic.

    The heuristic combines multiple strategies to prioritize bins based on their remaining capacity, 
    emphasizing both the fit and the utilization of the bins. It differentiates among viable options 
    by considering the relative fit, the proportion of capacity used, and slightly penalizing bins 
    with very high remaining capacity after the item is added.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """

    # First, identify bins that can fit the item
    fit_bins = bins_remain_cap >= item
    
    # Calculate a nuanced priority score that combines relative fit and utilization
    priorities = np.where(fit_bins,
                          # Relative fit: How close is the remaining capacity to the item size?
                          (1 - np.abs(bins_remain_cap - item) / (bins_remain_cap + item)) * 
                          # Utilization: Proportion of the bin that will be used after adding the item
                          (item / (bins_remain_cap)),
                          -1.0)  # Penalize bins that cannot fit the item
    
    # Normalize the priorities to ensure they are within a comparable range
    max_priority = np.max(priorities)
    if max_priority > -1.0:  # Check if there are bins that can fit the item
        priorities = np.where(priorities > -1.0, priorities / max_priority, priorities)
    
    # Slightly penalize bins with very high remaining capacity after adding the item
    priorities = np.where(fit_bins & (bins_remain_cap - item > item),
                          priorities * 0.8,  # Reduce priority for bins with high remaining capacity
                          priorities)
    
    return priorities
```
