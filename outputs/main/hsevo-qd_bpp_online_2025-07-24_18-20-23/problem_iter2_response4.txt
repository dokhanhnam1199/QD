```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score for each bin based on remaining capacity and item size.
    Prioritizes bins with remaining capacity closest to the item size and minimizes waste.
    """
    # Calculate priority based on the absolute difference between remaining capacity and item size
    priority = -np.abs(bins_remain_cap - item)
    
    # Set priority to negative infinity for bins that cannot fit the item
    priority[bins_remain_cap < item] = -np.inf
    
    # Normalize priority scores for bins that can fit the item
    valid_bins = priority != -np.inf
    if np.any(valid_bins):
        max_priority = np.max(priority[valid_bins])
        priority[valid_bins] = np.exp(-(priority[valid_bins] - max_priority))
    
    return priority
```
