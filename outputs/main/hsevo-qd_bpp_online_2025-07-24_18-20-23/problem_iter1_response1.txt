```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin based on the 'First-Fit' and 'Best-Fit' heuristics.
    The priority is higher for bins that have just enough capacity to hold the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score based on how well the item fits into the bin
    # A higher score is given to bins that have a remaining capacity close to the item size
    priority_scores = np.where(bins_remain_cap >= item, 1 - (bins_remain_cap - item) / bins_remain_cap, -1)
    
    # Give a very low priority to bins that cannot hold the item
    # This ensures that bins that cannot hold the item are not selected
    
    return priority_scores
```
