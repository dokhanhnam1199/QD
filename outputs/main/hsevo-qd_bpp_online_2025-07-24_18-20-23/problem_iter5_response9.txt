```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines prioritization strategies: prioritizing bins with minimal remaining capacity and fullness.
    Ensures numerical stability with epsilon.
    """
    # Calculate remaining capacity after adding item
    remaining_cap = bins_remain_cap - item
    
    # Mask out bins that cannot hold the item
    valid_bins = remaining_cap >= 0
    
    # Priority score combines remaining capacity and fullness with numerical stability
    priority = np.where(valid_bins, -remaining_cap + bins_remain_cap / (item + 1e-9), -np.inf)
    
    return priority
```
