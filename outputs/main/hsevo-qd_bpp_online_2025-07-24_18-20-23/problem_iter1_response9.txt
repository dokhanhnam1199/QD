```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin.
    A higher priority is given to bins with remaining capacity closest to the item size.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the item size and the remaining capacity of each bin
    diff = np.abs(bins_remain_cap - item)
    
    # Give a high priority to bins that have enough capacity for the item
    # and among those, give a higher priority to the one with the least remaining capacity
    priority = np.where(bins_remain_cap >= item, -diff, -np.inf)
    
    return priority
```
