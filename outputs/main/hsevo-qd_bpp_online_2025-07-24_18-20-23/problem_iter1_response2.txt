```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin.
    A bin with a remaining capacity closest to the item size gets the highest priority.
    If a bin cannot hold the item, its priority is set to negative infinity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the item can fit into each bin
    valid_bins = bins_remain_cap >= item
    
    # Calculate the priority for valid bins based on the difference between the remaining capacity and the item size
    priority_valid = -np.abs(bins_remain_cap - item)
    
    # Set the priority for invalid bins to negative infinity
    priority_invalid = -np.inf * np.ones_like(bins_remain_cap)
    
    # Combine the priorities for valid and invalid bins
    priority = np.where(valid_bins, priority_valid, priority_invalid)
    
    return priority
```
