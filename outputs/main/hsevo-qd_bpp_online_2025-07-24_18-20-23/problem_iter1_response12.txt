```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is determined by how well the item fits into the bin.
    A higher priority is given to bins where the item fits perfectly or 
    leaves a small remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Bins that are too small for the item should have a low priority
    too_small = remaining_cap_after_addition < 0
    
    # Calculate the priority score for each bin
    # A bin with a remaining capacity close to zero after adding the item gets a high priority
    priority = np.where(too_small, -np.inf, np.exp(-remaining_cap_after_addition))
    
    return priority
```
