```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is based on the remaining capacity of the bin after adding the item.
    The bin that will have the least remaining capacity after adding the item will have the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Set the priority to negative infinity for bins that cannot hold the item
    priority = np.where(remaining_cap_after_addition >= 0, -remaining_cap_after_addition, -np.inf)
    
    return priority
```
