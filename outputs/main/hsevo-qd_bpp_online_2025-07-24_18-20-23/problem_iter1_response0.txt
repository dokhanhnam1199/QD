```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a more sophisticated heuristic.

    The heuristic used here is a variant of the 'First-Fit Decreasing' algorithm adapted for online bin packing.
    It prioritizes bins that have just enough capacity for the item, and penalizes bins that would be left with too much or too little remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin based on the remaining capacity
    # We want to prioritize bins where the item fits exactly or leaves a small remainder
    priorities = np.where(bins_remain_cap >= item, 
                          1 - np.abs(bins_remain_cap - item) / item,  # Prioritize bins with remaining capacity close to the item size
                          -1.0)  # Penalize bins that can't fit the item
    
    # Ensure that bins that can't fit the item have a lower priority than any bin that can fit the item
    priorities = np.where(bins_remain_cap < item, priorities - np.max(priorities), priorities)
    
    return priorities
```
