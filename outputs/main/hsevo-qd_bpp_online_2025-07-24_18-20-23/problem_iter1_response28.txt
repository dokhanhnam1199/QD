```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is based on the remaining capacity of the bin. 
    Bins with remaining capacity closest to the item size are given the highest priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the remaining capacity and the item size
    diff = np.abs(bins_remain_cap - item)
    
    # Bins that can fit the item have higher priority
    valid_bins = bins_remain_cap >= item
    
    # Assign high priority to valid bins with remaining capacity closest to the item size
    priority = np.where(valid_bins, -diff, -np.inf)
    
    return priority
```
