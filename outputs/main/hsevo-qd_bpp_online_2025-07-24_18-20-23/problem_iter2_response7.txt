```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin based on remaining capacity and fullness.
    
    Combines the benefits of minimizing waste and prioritizing almost full bins.
    """
    # Calculate the remaining capacity after adding the item to each bin
    remaining_capacity_after_addition = bins_remain_cap - item
    
    # Mask out bins that cannot hold the item
    valid_bins = remaining_capacity_after_addition >= 0
    
    # Priority score is a combination of remaining capacity and fullness
    priority_scores = np.where(valid_bins, np.exp(-remaining_capacity_after_addition) + bins_remain_cap / (item + 1e-9), -1e10)
    
    return priority_scores
```
