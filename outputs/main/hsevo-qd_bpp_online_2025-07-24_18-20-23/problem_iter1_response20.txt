```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    The priority is higher for bins that have enough capacity for the item and have less remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priority scores with negative infinity for bins that cannot hold the item
    priority = np.where(bins_remain_cap >= item, bins_remain_cap.max() - bins_remain_cap, -np.inf)
    
    # Return the computed priority scores
    return priority
```
