```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit and space utilization."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    for i, remaining_capacity in enumerate(bins_remain_cap):
        if item <= remaining_capacity:
            remaining_space = remaining_capacity - item
            # Fit score: Higher is better (smaller remaining space)
            fit_score = 1.0 / (remaining_space + 0.01)

            # Space utilization score: penalize large remaining space
            utilization_penalty = (remaining_space / (remaining_capacity + 0.01))

            priorities[i] = fit_score - utilization_penalty
        else:
            priorities[i] = -np.inf

    return priorities
```
