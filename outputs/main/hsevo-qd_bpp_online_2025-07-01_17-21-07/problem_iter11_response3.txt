```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit and fragmentation cost."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if item <= cap:
            rem = cap - item
            fit = 1.0 / (rem + 0.01)  # Smaller rem -> better fit
            penalty = np.abs(item/cap - 0.5) #item size near 0.5*capacity is good.
            priorities[i] = fit - penalty
        else:
            priorities[i] = -np.inf
    return priorities
```
