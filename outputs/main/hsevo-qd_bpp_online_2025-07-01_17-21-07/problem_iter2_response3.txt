```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit and waste minimization."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    for i, remaining_capacity in enumerate(bins_remain_cap):
        if item <= remaining_capacity:
            remaining_space = remaining_capacity - item
            fit_score = 1.0 / (remaining_space + 0.01)  # Best fit

            # Penalize small space. avoid division by zero
            small_space_penalty = 0.0 if remaining_space > 0.1 else (0.1 - remaining_space)**2 if remaining_space >= 0 else np.inf

            priorities[i] = fit_score - small_space_penalty
        else:
            priorities[i] = -np.inf

    return priorities
```
