```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, fit_score_epsilon: float = 1e-6, size_ratio_center: float = 0.5, size_ratio_weight: float = 1.0) -> np.ndarray:
    """Combines fit score and size ratio penalty for bin priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, remaining_capacity in enumerate(bins_remain_cap):
        if item <= remaining_capacity:
            remaining_space = remaining_capacity - item
            fit_score = 1.0 / (remaining_space + fit_score_epsilon)
            size_ratio_penalty = size_ratio_weight * np.abs(item/remaining_capacity - size_ratio_center)
            priorities[i] = fit_score - size_ratio_penalty
        else:
            priorities[i] = -np.inf
    return priorities
```
