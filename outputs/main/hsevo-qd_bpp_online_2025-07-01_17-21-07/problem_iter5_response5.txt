```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fit and remaining space, avoid fragmentation."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if item <= cap:
            remaining_space = cap - item
            fit_score = cap / (remaining_space + 1e-6) #small remain -> high score, large cap -> high score
            priorities[i] = fit_score
        else:
            priorities[i] = -np.inf
    return priorities
```
