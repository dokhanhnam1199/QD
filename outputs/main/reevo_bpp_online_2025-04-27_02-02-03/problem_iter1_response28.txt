```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # Prioritize bins where the item fits
            space_left = cap - item
            priorities[i] = (item / cap)  # Fill ratio
            if space_left == 0:
                priorities[i] += 1 # Highest priority if it perfectly fits
            else:
              priorities[i] += 0.5 / (space_left + 1e-9) #slightly prefer less waste

        else:
            # Assign a very low priority if the item doesn't fit
            priorities[i] = -1e9

    return priorities
```
