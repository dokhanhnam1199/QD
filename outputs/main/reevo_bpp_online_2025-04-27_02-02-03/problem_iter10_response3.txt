```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Feasibility check: Consider only bins that can accommodate the item.
    eligible_bins = bins_remain_cap >= item

    if not np.any(eligible_bins):
        # If no bin can fit the item, prioritize bins with maximum remaining capacity (Worst Fit)
        priorities = bins_remain_cap / np.max(bins_remain_cap) if np.max(bins_remain_cap) > 0 else np.ones_like(bins_remain_cap)
        return priorities

    # Calculate remaining capacity after placing the item in eligible bins.
    remaining_capacity_after = bins_remain_cap[eligible_bins] - item

    # Tight Fit Score: Higher score for smaller remaining capacity.
    # Add a small constant to avoid division by zero.
    tight_fit_score = 1.0 / (remaining_capacity_after + 0.0001)
    priorities[eligible_bins] = tight_fit_score

    # Exact Fit Bonus: Give a significant bonus if the item fits almost perfectly.
    exact_fit_threshold = 0.001
    exact_fit = np.abs(remaining_capacity_after) < exact_fit_threshold
    priorities[eligible_bins][exact_fit] += 10.0

    # Near-Full Penalty: Reduce priority for bins that become near-full after packing.
    near_full_threshold = 0.1  # Adjust as needed
    near_full = remaining_capacity_after < near_full_threshold
    priorities[eligible_bins][near_full] *= 0.5  # Reduce, but don't eliminate priority

    # Normalize the priorities to a reasonable range (optional, but often helpful).
    max_priority = np.max(priorities[eligible_bins]) if np.any(eligible_bins) else 1.0
    priorities[eligible_bins] /= max_priority

    return priorities
```
