```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    suitable_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    
    if np.any(suitable_bins):
        remaining_capacities_of_suitable_bins = bins_remain_cap[suitable_bins]
        
        gaps = remaining_capacities_of_suitable_bins - item
        
        normalized_gaps = gaps / np.max(remaining_capacities_of_suitable_bins)
        
        sigmoid_scores = 1 / (1 + np.exp(-10 * (normalized_gaps - 0.5)))
        
        priorities[suitable_bins] = sigmoid_scores
        
        
        if np.all(priorities == 0):
             priorities[suitable_bins] = 0.5
    
    return priorities
```
