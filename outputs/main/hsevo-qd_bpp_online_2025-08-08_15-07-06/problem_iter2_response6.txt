```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins that are a tight fit using an inverse proximity measure,
    giving infinite priority to perfect fits to encourage consolidation.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    suitable_bins_mask = bins_remain_cap >= item

    if np.any(suitable_bins_mask):
        suitable_bins_caps = bins_remain_cap[suitable_bins_mask]
        differences = suitable_bins_caps - item

        priorities[suitable_bins_mask] = 1.0 / (differences + 1e-9)

        # Assign infinite priority to perfect fits
        perfect_fit_mask = (differences == 0)
        if np.any(perfect_fit_mask):
            priorities[suitable_bins_mask][perfect_fit_mask] = float('inf')
            
    return priorities
```
