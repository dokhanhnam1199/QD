```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins_mask = bins_remain_cap >= item
    suitable_bins_caps = bins_remain_cap[suitable_bins_mask]
    
    if suitable_bins_caps.size > 0:
        differences = suitable_bins_caps - item
        min_diff = np.min(differences)
        
        suitable_bin_indices = np.where(suitable_bins_mask)[0]
        
        for i, original_index in enumerate(suitable_bin_indices):
            if bins_remain_cap[original_index] - item == min_diff:
                priorities[original_index] = 1.0
            else:
                priorities[original_index] = 0.0
    return priorities
```
