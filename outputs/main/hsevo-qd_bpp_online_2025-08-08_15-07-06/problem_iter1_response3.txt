```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Almost Full Fit strategy.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            # Prioritize bins that will be almost full after adding the item
            # A smaller remaining capacity after adding the item means it's "almost full"
            priorities[i] = 1 / (bins_remain_cap[i] - item + 1e-9) # Add epsilon for stability
        else:
            priorities[i] = -1 # Cannot fit
    return priorities
```
