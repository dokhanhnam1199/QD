```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Calculates priority for bins to pack an item.
    Prioritizes bins with minimal remaining capacity that can fit the item,
    using an exponential scaling for graded preferences.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    suitable_bins_mask = bins_remain_cap >= item
    
    if not np.any(suitable_bins_mask):
        return priorities
    
    suitable_bins_caps = bins_remain_cap[suitable_bins_mask]
    
    differences = suitable_bins_caps - item
    
    if suitable_bins_caps.size > 0:
        min_diff = np.min(differences)
        
        
        scaled_diffs = differences - min_diff
        
        
        temperature = 0.1
        exp_scores = np.exp(-scaled_diffs / temperature)
        
        
        normalized_exp_scores = exp_scores / np.max(exp_scores)
        
        priorities[suitable_bins_mask] = normalized_exp_scores
        
        
        if np.all(priorities == 0):
            priorities[suitable_bins_mask] = 0.5
            
    return priorities
```
