```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This heuristic implements a Best Fit (BF) strategy. It prioritizes bins
    that will result in the smallest remaining capacity after the item is placed.
    Bins where the item does not fit are assigned the lowest possible priority.

    This approach inherently prioritizes 'perfect fits' (where remaining capacity
    is zero) because a remaining capacity of zero yields a priority score of 0,
    which is mathematically higher than any negative score resulting from a
    non-zero remaining capacity. This aligns with the reflection to avoid
    arbitrary, extreme bonuses for perfect fits, as Best Fit naturally handles
    these cases effectively by design.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        A higher score indicates a higher priority.
    """
    # Calculate the potential remaining capacity for each bin if the item were placed there.
    # Note: Some values in this array might be negative if the item does not fit.
    potential_remainders = bins_remain_cap - item

    # Create a boolean mask: True for bins where the item can fit (remaining_after_placement >= 0).
    can_fit_mask = potential_remainders >= 0

    # Initialize priority scores.
    # For bins where the item fits: the score is the negative of the potential remaining capacity.
    # This means a smaller positive remainder (tighter fit) results in a larger
    # (closer to zero) priority score. A perfect fit (remainder 0) gets a score of 0.
    # For bins where the item does not fit: assign a very low priority (-np.inf)
    # to ensure these bins are never selected unless no other bins are available
    # (in which case the system typically opens a new bin).
    priorities = np.where(can_fit_mask, -potential_remainders, -np.inf)

    return priorities
```
