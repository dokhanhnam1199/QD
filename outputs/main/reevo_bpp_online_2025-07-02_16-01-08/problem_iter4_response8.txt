```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:

    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # 1. Perfect/Near-Perfect Fit: Highest Priority
    perfect_fit = np.isclose(bins_remain_cap, item)
    almost_fit = (bins_remain_cap - item >= 0) & (bins_remain_cap - item <= 0.05)

    priorities[perfect_fit] = 10000
    priorities[almost_fit] = 5000

    # 2. Feasibility Check
    feasible_bins = bins_remain_cap >= item
    infeasible_bins = ~feasible_bins
    priorities[infeasible_bins] = -np.inf  # Ensure infeasible bins are never selected

    # 3. Remaining Capacity Consideration for Feasible Bins
    feasible_indices = np.where(feasible_bins)[0]
    if len(feasible_indices) > 0:
        remaining_space = bins_remain_cap[feasible_bins] - item
        mean_remaining_cap = np.mean(bins_remain_cap[feasible_bins]) if len(bins_remain_cap[feasible_bins]) > 0 else 0 # Avoid errors

        # Prioritize bins with remaining space close to the mean, but not perfect fits.
        # Normalized priority: Higher priority for bins closer to the mean remaining capacity
        valid_bins = feasible_bins & ~perfect_fit & ~almost_fit #exclude perfect/almost fits from this calc
        space_diff = np.abs(remaining_space[valid_bins[feasible_bins]] - mean_remaining_cap) #compute diff vs the mean
        max_diff = np.max(np.abs(bins_remain_cap[feasible_bins] - mean_remaining_cap)) if len(bins_remain_cap[feasible_bins]) > 0 else 1 #normalise by max diff, avoid divide by 0

        priorities[valid_bins] = 900 - (space_diff / max_diff) * 800 #scale from 100 to 900


        #4. Give minimal priority to remaining feasible bins.
        other_feasible = feasible_bins & ~perfect_fit & ~almost_fit & ~valid_bins
        priorities[other_feasible] = 100
    

    return priorities
```
