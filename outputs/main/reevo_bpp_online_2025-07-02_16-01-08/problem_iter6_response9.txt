```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # 1. Feasibility: Infeasible bins get the lowest priority.
    can_fit = bins_remain_cap >= item
    priorities[~can_fit] = -np.inf

    # 2. Encourage packing into feasible bins (Base priority boost)
    priorities[can_fit] += 10.0

    # 3. Balance Remaining Capacity: Prioritize bins with smaller *normalized* remaining space, but avoid nearly full bins.
    remaining_space = bins_remain_cap - item

    # Avoid division by zero by adding a small epsilon value.
    max_capacity = np.max(bins_remain_cap)
    epsilon = 1e-6

    normalized_remaining_space = np.zeros_like(bins_remain_cap, dtype=float)
    normalized_remaining_space[can_fit] = remaining_space[can_fit] / (max_capacity + epsilon)

    # Subtract normalized remaining space from priority.
    priorities[can_fit] -= normalized_remaining_space[can_fit] * 5  # Increased impact of normalized space

    # 4. Penalize Near-Full Bins: Avoid bins that would become almost full.
    nearly_full_threshold = 0.15 * max_capacity  # Dynamic threshold based on max capacity, slightly increased
    nearly_full = (remaining_space > 0) & (remaining_space <= nearly_full_threshold)
    priorities[nearly_full] -= 8.0 # Increased penalty

    # 5. Bonus for bins that are already somewhat full (but not nearly full). Encourages filling bins that have already been used.
    already_full_threshold = 0.6 * max_capacity  # Example threshold, adjust as needed, Increased threshold
    already_full = can_fit & (bins_remain_cap < already_full_threshold) & ~nearly_full
    priorities[already_full] += 3.0  # Smaller bonus, slightly increased

    #6. Perfect Fit Bonus
    perfect_fit = np.isclose(bins_remain_cap, item)
    priorities[perfect_fit] += 15.0

    return priorities
```
