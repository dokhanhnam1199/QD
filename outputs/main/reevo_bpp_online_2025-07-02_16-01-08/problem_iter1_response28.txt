```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # Primary priority: prioritize bins that can fit the item
            priorities[i] = 1.0 / (cap - item + 0.00001) # avoid division by zero, prefer smaller difference
        else:
            # If it doesn't fit, assign a very low priority. We can use a large negative value.
            priorities[i] = -1000.0 
    return priorities
```
