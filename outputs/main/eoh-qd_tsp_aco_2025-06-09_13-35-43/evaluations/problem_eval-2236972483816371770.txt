import numpy as np

def heuristics_v2(distance_matrix):
    """{This algorithm prioritizes edges connecting nodes with high average proximity to all other nodes, favoring edges within densely connected clusters.}"""
    n = distance_matrix.shape[0]
    heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)

    # Calculate average distance from each node to all other nodes
    node_proximity = np.mean(distance_matrix, axis=1)

    # Assign heuristic values based on the product of proximities of connected nodes
    for i in range(n):
        for j in range(n):
            if i != j:
                heuristics_matrix[i, j] = node_proximity[i] * node_proximity[j]

    return heuristics_matrix
