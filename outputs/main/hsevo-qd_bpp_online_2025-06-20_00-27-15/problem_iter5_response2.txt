```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 1e-6) -> np.ndarray:
    """Prioritizes bins based on fullness and remaining space, considering best fit."""

    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf)
    priorities[valid_bins] = 0

    if np.any(valid_bins):
        remaining_space = bins_remain_cap[valid_bins] - item
        #Fullness: how much of the bin capacity is used after adding the item.
        fullness = item / bins_remain_cap[valid_bins]
        #Best fit component: smaller remaining space gets higher priority.
        best_fit = 1 / (remaining_space + epsilon)

        priorities[valid_bins] = fullness + best_fit

    return priorities
```
