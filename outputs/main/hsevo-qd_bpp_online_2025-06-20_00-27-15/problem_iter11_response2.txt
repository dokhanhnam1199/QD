```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Return priority score for each bin based on item size and remaining capacity.
    Combines fill ratio and remaining space penalty.
    """
    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf)
    priorities[valid_bins] = 0
    remaining_space = bins_remain_cap[valid_bins] - item
    epsilon = 1e-6  # Small value to avoid division by zero.
    priorities[valid_bins] = (item / bins_remain_cap[valid_bins]) + (1 / (remaining_space + epsilon))
    return priorities
```
