```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities considering fullness and remaining space."""

    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf)
    priorities[valid_bins] = 0
    remaining_space = bins_remain_cap[valid_bins] - item
    
    # Combined score: Fullness + Inverse of remaining space (avoiding near-zero division)
    priorities[valid_bins] = (item / bins_remain_cap[valid_bins]) + (1 / (remaining_space + 0.000001))
    
    #Prioritize bins with smallest remaining space
    priorities[valid_bins] += 1/(np.sort(remaining_space)[0] + 0.000001)
    

    return priorities
```
