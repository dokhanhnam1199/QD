```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, invalid_priority=-np.inf, epsilon=1e-6) -> np.ndarray:
    """Combines fill ratio and remaining space for priority, with item size weighting."""

    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, invalid_priority)
    priorities[valid_bins] = 0

    remaining_space = bins_remain_cap[valid_bins] - item
    fill_ratio = item / bins_remain_cap[valid_bins]

    # Incorporate item size weighting and remaining space penalty.
    priorities[valid_bins] = fill_ratio + (1 / (remaining_space + epsilon)) * fill_ratio

    return priorities
```
