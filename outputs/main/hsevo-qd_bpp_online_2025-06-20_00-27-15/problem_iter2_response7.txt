```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculate priority score for each bin considering fullness and remaining space."""
    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf)
    priorities[valid_bins] = 0
    remaining_space = bins_remain_cap[valid_bins] - item
    
    # Scoring: balance fullness (item/capacity) and avoid tiny remaining space
    priorities[valid_bins] = (item / bins_remain_cap[valid_bins]) + (1 / (remaining_space + 0.000001))
    
    return priorities
```
