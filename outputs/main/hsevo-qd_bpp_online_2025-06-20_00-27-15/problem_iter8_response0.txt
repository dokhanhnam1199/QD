```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on density and remaining space, using ratio and handling invalid bins."""
    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, -np.inf)
    priorities[valid_bins] = 0

    if np.any(valid_bins):
        ratios = item / bins_remain_cap[valid_bins]
        remaining_space = bins_remain_cap[valid_bins] - item
        priorities[valid_bins] = ratios + (1 / (remaining_space + 1e-6))
    return priorities
```
