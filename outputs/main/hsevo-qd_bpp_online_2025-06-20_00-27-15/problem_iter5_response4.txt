```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 1e-6, invalid_priority: float = -np.inf) -> np.ndarray:
    """Combines fullness and remaining space with adaptive epsilon."""
    new_capacities = bins_remain_cap - item
    valid_bins = new_capacities >= 0
    priorities = np.full_like(bins_remain_cap, invalid_priority)
    priorities[valid_bins] = 0
    remaining_space = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = (item / bins_remain_cap[valid_bins]) + (1 / (remaining_space + epsilon))
    return priorities
```
