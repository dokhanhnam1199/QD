```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines relative fitness with exponential weighting for stable bin selection."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    bin_fits = bins_remain_cap[possible_bins] - item
    relative_waste = bin_fits / (item + 1e-6)
    exp_fits = np.exp(-relative_waste)
    sum_exp_fits = np.sum(exp_fits)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = exp_fits / sum_exp_fits
    return priorities
```
