```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines inverse waste with exponential weighting and normalization
    to prioritize bins based on how well an item fits.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        priorities[valid_bins] = np.exp(-waste / (item + 1e-6))
        priorities[valid_bins] /= np.sum(priorities[valid_bins])
    return priorities
```
