```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse waste with exponential weighting, normalized over feasible bins."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if np.any(feasible_bins):
        waste = bins_remain_cap[feasible_bins] - item
        priorities[feasible_bins] = np.exp(-1.0 / (waste + 1e-6))
        priorities[feasible_bins] /= np.sum(priorities[feasible_bins])
    return priorities
```
