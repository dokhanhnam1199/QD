```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins based on inverse waste with a small addition to avoid division by zero,
    and considering only bins with sufficient remaining capacity.
    Combines elements from priority_v0 and priority_v1.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities
    remaining_capacities = bins_remain_cap[valid_bins]
    waste = remaining_capacities - item
    priorities[valid_bins] = np.exp(-waste)
    return priorities
```
