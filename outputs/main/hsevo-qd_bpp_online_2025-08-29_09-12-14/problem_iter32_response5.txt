```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines exponential weighting of waste with normalization
    and robust handling of infeasible bins.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    scores = np.exp(-waste / item)
    probabilities = scores / np.sum(scores)
    priorities[valid_bins] = probabilities
    return priorities
```
