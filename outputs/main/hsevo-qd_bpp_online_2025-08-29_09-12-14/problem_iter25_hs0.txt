import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, weight: float = 3.3630313240603025) -> np.ndarray:
    """
    Calculates priorities based on item and bin capacities.

    Args:
        item (float): The item size.
        bins_remain_cap (np.ndarray): Remaining capacities of bins.
        weight (float): Weight factor for the exponential function.

    Returns:
        np.ndarray: Priorities for each bin.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    for i in range(n_bins):
        if bins_remain_cap[i] >= item:
            priorities[i] = 1 / (1 + np.exp(-weight * (bins_remain_cap[i] - item)))
        else:
            priorities[i] = 0
    return priorities
