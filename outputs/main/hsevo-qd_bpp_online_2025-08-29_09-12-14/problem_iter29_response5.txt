```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines exponential weighting of inverse waste with normalization over feasible bins."""
    bin_count = len(bins_remain_cap)
    priorities = np.zeros(bin_count)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        min_waste = np.min(waste)
        priorities[valid_bins] = np.exp(-5 * (waste / (min_waste + 1e-6)))
        priorities /= np.sum(priorities)
    return priorities
```
