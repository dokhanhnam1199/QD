```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse waste ratio with exponential weighting and normalization, enhanced by minimum waste."""
    bin_count = len(bins_remain_cap)
    priorities = np.zeros(bin_count)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities
    remaining_capacities = bins_remain_cap[valid_bins]
    min_waste = np.min(remaining_capacities - item)
    waste_ratio = (remaining_capacities - item) / (item + min_waste)
    priorities[valid_bins] = np.exp(-waste_ratio * 2)
    priorities = priorities / np.sum(priorities)
    return priorities
```
