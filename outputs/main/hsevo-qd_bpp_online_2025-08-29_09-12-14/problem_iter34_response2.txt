import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, weight: float = 3.2649484007726803) -> np.ndarray:
    """
    Calculates priorities based on the difference between bin remaining capacity and item size.

    Args:
        item: The size of the item.
        bins_remain_cap: A NumPy array representing the remaining capacity of each bin.
        weight: A weight factor that influences the priority calculation. Defaults to 5.0.

    Returns:
        A NumPy array representing the priorities for each bin.
    """
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    for i in range(n_bins):
        if bins_remain_cap[i] >= item:
            priorities[i] = 1 / (1 + np.exp(-weight * (bins_remain_cap[i] - item)))
        else:
            priorities[i] = 0
    return priorities
