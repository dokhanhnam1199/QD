```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines relative waste calculation and exponential weighting
    for robust bin prioritization.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return priorities
    waste = bins_remain_cap[valid_bins] - item
    relative_waste = waste / item
    priorities[valid_bins] = np.exp(-5 * relative_waste)
    priorities = priorities / (np.sum(priorities) + 1e-8)
    return priorities
```
