```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines relative waste with exponential weighting and normalizes."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    feasible_bins = bins_remain_cap >= item
    if np.any(feasible_bins):
        waste = bins_remain_cap[feasible_bins] - item
        relative_waste = waste / (item + 1e-6)
        priorities[feasible_bins] = np.exp(-5 * relative_waste)
        priorities[feasible_bins] /= np.sum(priorities[feasible_bins])
    return priorities
```
