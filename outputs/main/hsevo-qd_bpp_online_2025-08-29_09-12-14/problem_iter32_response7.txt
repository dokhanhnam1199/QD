```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse waste with exponential weighting and normalization."""
    bin_count = len(bins_remain_cap)
    priorities = np.zeros(bin_count)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities
    remaining_capacities = bins_remain_cap[valid_bins]
    waste = remaining_capacities - item
    priorities[valid_bins] = np.exp(-waste / item)
    priorities = priorities / np.sum(priorities)
    return priorities
```
