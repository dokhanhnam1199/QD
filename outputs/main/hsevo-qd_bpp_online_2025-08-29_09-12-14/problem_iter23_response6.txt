```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on inverse relative waste with exponential weighting."""
    priorities = np.zeros_like(bins_remain_cap)
    feasible_bins = bins_remain_cap >= item
    if np.any(feasible_bins):
        relative_waste = (bins_remain_cap[feasible_bins] - item) / item
        priorities[feasible_bins] = np.exp(-5 * relative_waste)
        priorities /= np.sum(priorities)
    return priorities
```
