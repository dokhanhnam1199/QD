```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on relative waste and exponential weighting."""
    epsilon = 1e-6
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    bin_fits = bins_remain_cap[possible_bins] - item
    relative_waste = bin_fits / (item + epsilon)
    priorities = np.exp(relative_waste)
    sum_exp_fits = np.sum(priorities)
    normalized_priorities = np.zeros_like(bins_remain_cap)
    normalized_priorities[possible_bins] = priorities / (sum_exp_fits + 1e-8)
    return normalized_priorities
```
