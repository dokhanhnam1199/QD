```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on inverse waste with exponential weighting."""
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)
    remaining_capacities = bins_remain_cap[valid_bins]
    waste = remaining_capacities - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = np.exp(1.0 / (waste + 1e-6))
    sum_exp_fits = np.sum(priorities[valid_bins])
    priorities[valid_bins] = priorities[valid_bins] / sum_exp_fits
    return priorities
```
