```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on inverse relative waste with exponential weighting."""
    priorities = np.zeros_like(bins_remain_cap)
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            relative_waste = item / bins_remain_cap[i]
            priorities[i] = np.exp(-5 * relative_waste)
    return priorities / np.sum(priorities) if np.sum(priorities) > 0 else priorities
```
