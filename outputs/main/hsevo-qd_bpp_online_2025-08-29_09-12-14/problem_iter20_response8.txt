```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines inverse waste with exponential weighting and normalization."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)
    
    min_waste = np.min(bins_remain_cap[possible_bins] - item)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = np.exp(-(min_waste / (bins_remain_cap[possible_bins] - item)))

    priorities = priorities / np.sum(priorities)
    return priorities
```
