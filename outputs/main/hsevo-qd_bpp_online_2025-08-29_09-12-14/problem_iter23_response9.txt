```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on inverse waste with exponential weighting and relative capacity."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities
    waste = bins_remain_cap[valid_bins] - item
    relative_waste = item / (bins_remain_cap[valid_bins] + 1e-6)
    priorities[valid_bins] = np.exp(-5 * relative_waste)
    priorities /= np.sum(priorities)
    return priorities
```
