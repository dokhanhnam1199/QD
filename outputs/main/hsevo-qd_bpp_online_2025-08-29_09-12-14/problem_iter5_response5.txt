```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines inverse waste with exponential weighting and normalization
    to create a robust priority function for bin packing.
    """
    bin_count = len(bins_remain_cap)
    priorities = np.zeros(bin_count)
    possible_bins = bins_remain_cap >= item
    if np.sum(possible_bins) == 0:
        return priorities

    remaining_capacities = bins_remain_cap[possible_bins]
    waste = remaining_capacities - item
    priorities[possible_bins] = np.exp(-waste / item)
    priorities /= np.sum(priorities)
    return priorities
```
