import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, epsilon: float = 0.7774390244508291) -> np.ndarray:
    """
    Calculates priorities for items based on remaining capacity of bins.

    Args:
        item (float): The size of the item.
        bins_remain_cap (np.ndarray): Remaining capacity of each bin.
        epsilon (float, optional): Small value to avoid division by zero. Defaults to 0.0001.

    Returns:
        np.ndarray: Priorities for each bin.
    """
    bin_count = len(bins_remain_cap)
    priorities = np.zeros(bin_count)
    for i in range(bin_count):
        if bins_remain_cap[i] >= item:
            priorities[i] = 1.0 / (bins_remain_cap[i] - item + epsilon)
        else:
            priorities[i] = 0.0
    return priorities
