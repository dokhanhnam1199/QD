```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    bin_count = len(bins_remain_cap)
    priorities = np.zeros(bin_count)
    for i in range(bin_count):
        if bins_remain_cap[i] >= item:
            relative_waste = (bins_remain_cap[i] - item) / item
            priorities[i] = np.exp(-relative_waste)
        else:
            priorities[i] = 0.0
    probabilities = priorities / np.sum(priorities)
    return probabilities
```
