```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins based on normalized remaining capacity and adaptive sigmoid penalization for item fit.
    """
    # Normalize remaining capacities
    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + 1e-6)
    
    # Sigmoid function to prioritize bins that are closer to being full
    sigmoid_priority = 1 / (1 + np.exp(-10 * (norm_remain_cap - 0.5)))
    
    # Penalty for bins that cannot fit the item
    can_fit = (bins_remain_cap >= item).astype(float)
    
    # Combine sigmoid priority with fit feasibility, emphasizing item fit
    priority_score = sigmoid_priority * can_fit * (1 + np.exp(-np.abs(bins_remain_cap - item)))
    
    return priority_score
```
