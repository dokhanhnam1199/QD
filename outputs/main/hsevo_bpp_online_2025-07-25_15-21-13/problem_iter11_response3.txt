```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins using fit feasibility, normalized leftover space, and adaptive sigmoid to balance space efficiency and item fit."""
    can_fit = (bins_remain_cap >= item).astype(float)  # Check if item fits in the bin
    leftover_space = np.where(can_fit, bins_remain_cap - item, np.inf)  # Calculate leftover space
    norm_leftover = leftover_space / (np.max(bins_remain_cap) + 1e-6)  # Normalize leftover space
    k = 1.0  # Steepness of the sigmoid
    x0 = 0.5 - (item / (np.max(bins_remain_cap) + 1e-6))  # Dynamic midpoint based on item size
    priority_scores = can_fit * (1 / (1 + np.exp(-k * (1 - norm_leftover - x0))))  # Combine with sigmoid
    return priority_scores
```
