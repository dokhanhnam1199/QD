import numpy as np

def priority_v2(
    item: float, 
    bins_remain_cap: np.ndarray, 
    initial_relative_space: float = 1.0473180459248999, 
    space_weight: float = 0.9844426157387918) -> np.ndarray:
    """Prioritizes bins based on item fit and minimal leftover space, with dynamic threshold adjustment."""
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    priority = can_fit * (space_weight - (space_left / bins_remain_cap))  # Minimize leftover space
    relative_space_left_factor = bins_remain_cap / np.max(bins_remain_cap, initial=initial_relative_space)  # Consider initial bin space
    return priority * relative_space_left_factor  # Combine factors for adaptive prioritization
