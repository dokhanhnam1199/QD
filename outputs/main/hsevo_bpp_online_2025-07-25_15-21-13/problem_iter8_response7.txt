```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Dynamic priority function combining normalized fit, adaptive penalties, and sigmoid for online BPP."""
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    normalized_cap = bins_remain_cap / np.max(bins_remain_cap, initial=1.0)
    k = 1.0  # Steepness of the sigmoid function
    x0 = 0.5 - (item / (np.max(bins_remain_cap) + 1e-6))
    sigmoid_factor = 1 / (1 + np.exp(-k * (normalized_cap - x0)))
    priority = can_fit * (normalized_cap - (space_left / bins_remain_cap)) * sigmoid_factor
    return priority
```
