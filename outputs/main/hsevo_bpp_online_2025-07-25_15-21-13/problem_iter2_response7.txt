```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on item fit and minimal leftover space, with dynamic threshold adjustment."""
    can_fit = bins_remain_cap >= item
    space_left = bins_remain_cap - item
    priority = can_fit * (1 - (space_left / bins_remain_cap))  # Minimize leftover space
    relative_space_left_factor = bins_remain_cap / np.max(bins_remain_cap, initial=1.0)  # Consider initial bin space
    return priority * relative_space_left_factor  # Combine factors for adaptive prioritization
```
