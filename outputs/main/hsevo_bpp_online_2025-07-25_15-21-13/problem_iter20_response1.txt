```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins by combining normalized fit feasibility with a dynamic sigmoid function to adaptively balance space utilization.
    """
    # Check if the item fits in each bin
    can_fit = (bins_remain_cap >= item).astype(float)
    
    # Calculate normalized remaining capacity
    norm_remain_cap = (bins_remain_cap - np.mean(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + 1e-6)
    
    # Adaptive sigmoid function to prioritize bins based on normalized remaining capacity
    sigmoid_steepness = 10.0  # Adjust steepness for sensitivity
    sigmoid_priority = 1 / (1 + np.exp(-sigmoid_steepness * norm_remain_cap))
    
    # Combine feasibility with sigmoid priority
    priority_scores = can_fit * sigmoid_priority
    
    return priority_scores
```
