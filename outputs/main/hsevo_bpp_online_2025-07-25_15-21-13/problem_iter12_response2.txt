```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins by combining normalized fit feasibility with dynamic adaptive penalties.
    """
    # Check if item fits in the bin
    ifbinsfit = (bins_remain_cap >= item).astype(float)
    
    # Normalize remaining capacity
    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + 1e-6)
    
    # Adaptive sigmoid-based penalty that adjusts based on the item size relative to the remaining capacity
    sigmoid_penalty = 1 / (1 + np.exp(-20 * (norm_remain_cap - 2 * (item / np.max(bins_remain_cap)))))
    
    # Combine feasibility and adaptive penalty
    priority_scores = ifbinsfit * sigmoid_penalty
    
    return priority_scores
```
