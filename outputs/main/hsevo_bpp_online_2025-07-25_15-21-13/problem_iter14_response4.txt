```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines normalized fit feasibility with dynamic sigmoid penalties for adaptive bin prioritization.
    """
    # Normalized remaining capacity
    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + 1e-6)
    
    # Fit feasibility
    fit_feasibility = (bins_remain_cap >= item).astype(float)
    
    # Dynamic adaptive sigmoid penalty
    midpoint = item / (np.max(bins_remain_cap) + 1e-6)
    penalty = 1 / (1 + np.exp(-10 * (norm_remain_cap - midpoint)))
    
    # Combine feasibility and penalty
    priority_score = fit_feasibility * penalty
    
    return priority_score
```
