```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins by normalized fit feasibility and adaptive penalty on leftover space."""
    ifbinsfit = (bins_remain_cap >= item).astype(float)  # Check if item fits in the bin
    leftover_space = np.where(ifbinsfit, bins_remain_cap - item, np.inf)  # Calculate leftover space
    # Use an adaptive penalty based on leftover space, with normalization
    penalty = leftover_space / (np.max(bins_remain_cap) + 1e-6)
    # Combine fit feasibility with adaptive penalty
    return ifbinsfit / (penalty + 1e-6)
```
