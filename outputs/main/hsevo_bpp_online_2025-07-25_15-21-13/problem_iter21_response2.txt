```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, steepness: float = 10.0, influence: float = 0.5, epsilon: float = 1e-6) -> np.ndarray:
    """
    Prioritizes bins by using an adaptive mechanism that combines fit feasibility,
    a dynamic sigmoid function, and an influence factor to balance the decision-making.
    """
    # Check if item fits in the bin
    ifbinsfit = (bins_remain_cap >= item).astype(float)
    
    # Normalized remaining capacity ensuring no division by zero
    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + epsilon)
    
    # Calculate the sigmoid priority
    sigmoid_priority = 1 / (1 + np.exp(-steepness * (norm_remain_cap - (item / np.max(bins_remain_cap)))))
    
    # Influence of the item size on the priority, with adaptive steepness
    adaptive_influence = sigmoid_priority * (1 - influence * (1 - item / np.max(bins_remain_cap)))
    
    # Combine feasibility with adaptive influence
    priority_score = ifbinsfit * adaptive_influence
    
    return priority_score
```
