```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins using dynamic sigmoid penalties, adaptive fit feasibility, and prioritization adjustments.
    """
    ifbinsfit = (bins_remain_cap >= item).astype(float)
    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + 1e-6)
    sigmoid_steepness = 10 * (1 - item / (np.max(bins_remain_cap) + 1e-6))
    sigmoid_priority = 1 / (1 + np.exp(-sigmoid_steepness * (norm_remain_cap - item / (np.max(bins_remain_cap) + 1e-6))))
    penalty = (bins_remain_cap - item) / (np.max(bins_remain_cap) + 1e-6)
    priority_adjustment = np.exp(-np.abs(norm_remain_cap - 1) * 5)
    return ifbinsfit * sigmoid_priority / (penalty + 1e-6) * priority_adjustment
```
