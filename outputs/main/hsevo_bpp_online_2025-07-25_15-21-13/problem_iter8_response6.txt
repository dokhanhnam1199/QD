```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins using normalized fit feasibility and adaptive penalty with sigmoid.
    """
    ifbinsfit = (bins_remain_cap >= item).astype(float)  # Check if item fits in the bin
    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + 1e-6)
    sigmoid_priority = 1 / (1 + np.exp(-10 * (norm_remain_cap - 0.5)))  # Prioritize bins closer to being full
    penalty = (bins_remain_cap - item) / (np.max(bins_remain_cap) + 1e-6)  # Adaptive penalty based on leftover space
    return ifbinsfit * sigmoid_priority / (penalty + 1e-6)  # Combine feasibility, sigmoid, and adaptive penalty
```
