```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit feasibility with normalized penalties and adaptive sigmoid to prioritize bins."""
    # Fit feasibility
    ifbinsfit = (bins_remain_cap >= item).astype(float)
    # Leftover space
    leftover_space = np.where(ifbinsfit, bins_remain_cap - item, np.inf)
    # Normalized leftover space
    normalized_leftover = leftover_space / (np.max(leftover_space) + 1e-6)
    # Sigmoid function with dynamic adjustment based on item size
    k = 1.0  # Steepness of the sigmoid function, can be tuned
    x0 = 0.5 - (item / (np.max(bins_remain_cap) + 1e-6))  # Midpoint adjusted by item size
    priority_scores = ifbinsfit * 1 / (1 + np.exp(-k * (1 - normalized_leftover - x0)))
    return priority_scores
```
