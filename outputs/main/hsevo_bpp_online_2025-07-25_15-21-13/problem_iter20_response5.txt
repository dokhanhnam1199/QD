```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins using adaptive sigmoid penalties and normalized fit feasibility.
    """
    can_fit = (bins_remain_cap >= item).astype(float)
    norm_remain_cap = bins_remain_cap / (np.max(bins_remain_cap) + 1e-6)
    midpoint = 0.5 - (item / (np.max(bins_remain_cap) + 1e-6))
    k = 5.0  # Steepness of the sigmoid
    sigmoid_penalty = 1 / (1 + np.exp(-k * (norm_remain_cap - midpoint)))
    penalty_factor = 1 / (1 + np.exp(5 * ((bins_remain_cap - item) / (np.max(bins_remain_cap) + 1e-6))))
    priority_scores = can_fit * sigmoid_penalty * penalty_factor
    return priority_scores
```
