{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Prioritizes bins by combining normalized fit feasibility and dynamic sigmoid penalties with tunable parameters.\n    \"\"\"\n    sigmoid_steepness = 8.060154863007442\n    max_cap_offset = 9.629999168879228e-06\n    can_fit = (bins_remain_cap >= item).astype(float)  # Check if item fits in the bin\n    norm_remain_cap = (bins_remain_cap - np.min(bins_remain_cap)) / (np.max(bins_remain_cap) - np.min(bins_remain_cap) + max_cap_offset)\n    x0 = item / (np.max(bins_remain_cap) + max_cap_offset)  # Dynamic midpoint based on item size\n    penalty = (bins_remain_cap - item) / (np.max(bins_remain_cap) + max_cap_offset)  # Adaptive penalty\n    priority_scores = can_fit * (1 / (1 + np.exp(-sigmoid_steepness * (norm_remain_cap - x0)))) / (penalty + max_cap_offset)\n    return priority_scores\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}