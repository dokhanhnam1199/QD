def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on how well the item fits (smaller remaining space is better), penalizing bins that would be filled beyond a threshold after packing.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            remaining = cap - item
            priority = 1 / (remaining + 0.00001)  # Inverse of remaining space (avoid division by zero)
            if fill_ratio > 0.75: # Penalty for bins more than 75% full
                priority *= (1 - (fill_ratio - 0.75)) #Reduce priority
            priorities.append(priority)
        else:
            priorities.append(-1)  # Invalid bin
    return priority
