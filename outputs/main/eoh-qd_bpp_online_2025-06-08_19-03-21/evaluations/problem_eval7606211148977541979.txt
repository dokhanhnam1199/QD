def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the remaining capacity after placing the item, favoring bins that are relatively empty (close to full bin capacity) and avoiding bins that are already quite full.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            rem_cap = cap - item
            priority = cap / (sum(bins_remain_cap) / len(bins_remain_cap))
            priorities.append(priority)
        else:
            priorities.append(-float('inf'))
    return priority
