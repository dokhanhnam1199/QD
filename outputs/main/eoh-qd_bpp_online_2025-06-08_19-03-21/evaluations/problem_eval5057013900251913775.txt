def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the remaining capacity after placing the item, favoring bins where the remaining capacity is closest to a target value (half the bin capacity) and penalizing bins that are too full or too empty.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            rem_cap = cap - item
            target = 0.5 * (sum(bins_remain_cap) / len(bins_remain_cap)) 
            priority = -abs(rem_cap - target)
            priorities.append(priority)
        else:
            priorities.append(-float('inf'))
    return priority
