def priority_v3(item, bins_remain_cap):
  """{This algorithm assigns priority to each bin based on the proportion of the item size to the remaining capacity, penalized by the relative emptiness of the bin.}"""
  priority = []
  total_capacity = sum(bins_remain_cap)
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append((item / cap) - (cap / total_capacity))  # Reward proportion of item to cap, penalize emptiness
    else:
      priority.append(-1000)  # Very low priority if bin is too small
  return priority
