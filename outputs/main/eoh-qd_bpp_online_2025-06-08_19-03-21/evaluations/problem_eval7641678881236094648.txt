def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a combination of remaining capacity and the item's size, favoring bins that can accommodate the item without excessive leftover space and penalizing those that are too full or too empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(cap - item)
    else:
      priority.append(-1)
  return priority
