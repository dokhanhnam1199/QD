def priority_v3(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin by focusing more on minimizing the waste, but still considering if the bin has sufficient capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority_score = cap*0.3 - waste*0.7  # Weighted combination, waste has higher weight
      priority.append(priority_score)
    else:
      priority.append(-1)
  return priority
