def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on how closely the item's size matches the bin's remaining capacity, penalizing bins that are either too full or have too much space left.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(1.0 / (abs(cap - item) + 0.1)) # higher priority for bins that are close to the item size.
    else:
      priority.append(-1) # very low priority for bins that can't fit the item.
  return priority
