def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority score to each bin based on the percentage of the bin it would fill after placing the item, favoring bins that would be filled to a certain percentage range.}"""
    priorities = []
    bin_size = sum(bins_remain_cap) / len(bins_remain_cap)
    for cap in bins_remain_cap:
        if cap >= item:
            fill_percentage = (bin_size - cap + item) / bin_size
            if 0.6 <= fill_percentage <= 0.9:
                priorities.append(fill_percentage)
            else:
                priorities.append(-abs(fill_percentage - 0.75))
        else:
            priorities.append(-float('inf'))
    return priority
