def priority_v3(item, bins_remain_cap):
  """{This algorithm assigns priority based on a combination of remaining capacity after packing the item and the ratio between item size and remaining capacity, favoring bins that result in a small remaining capacity and a high ratio.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_cap = cap - item
      ratio = item / (cap + 0.0001)
      priority.append(1 / (remaining_cap + 0.0001) + ratio)
    else:
      priority.append(-1)
  return priority
