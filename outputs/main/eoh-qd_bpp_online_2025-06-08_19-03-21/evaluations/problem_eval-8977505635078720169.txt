def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of remaining capacity fit and a bonus for bins that are relatively full to encourage efficient packing.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fit_score = 1 / (cap - item + 0.0001)  # Higher score for tighter fit
            fullness_bonus = (1 - (cap / 100))**2 # 100 is the bin capacity
            priority_score = fit_score + fullness_bonus
        else:
            priority_score = -1  # Assign -1 for bins that cannot fit the item
        priority.append(priority_score)
    return priority
