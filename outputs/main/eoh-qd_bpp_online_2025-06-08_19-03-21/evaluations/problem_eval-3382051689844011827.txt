def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the ratio of remaining capacity to item size, favoring bins where the remaining capacity is just slightly larger than the item size while penalizing bins that are too full or too empty.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = (item / cap) # Ratio of item size to remaining capacity
      priority.append(priority_score)
    else:
      priority.append(-1)
  return priority
