def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a weighted combination of remaining capacity and waste, favoring bins with sufficient capacity and minimizing wasted space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority_score = cap*0.7 - waste*0.3  # Weighted combination
      priority.append(priority_score)
    else:
      priority.append(-1) 
  return priority
