def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a weighted sum of the inverse of remaining capacity after packing the item and the inverse of the square of the difference between the item size and remaining capacity, penalizing bins that cannot accommodate the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_cap = cap - item
      diff = abs(item - remaining_cap)
      priority.append((0.7 / (remaining_cap + 0.0001)) + (0.3 / ((diff**2) + 0.0001)))
    else:
      priority.append(-1)
  return priority
