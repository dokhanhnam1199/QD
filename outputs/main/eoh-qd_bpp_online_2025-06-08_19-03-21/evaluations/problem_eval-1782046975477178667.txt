def priority_v3(item, bins_remain_cap):
    """{This algorithm prioritizes bins based primarily on minimizing waste, with a bonus for bins that are already partially full.}"""
    priorities = []
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            waste = cap - item
            bin_fullness = 1 - (cap / 100)  # Assuming bin capacity is 100
            if waste == 0:
                priorities.append(100 + bin_fullness*10)  # Perfect fit, bonus for fullness
            else:
                priorities.append(90 - waste + bin_fullness*5) # Prioritize low waste, plus bonus for fullness
        else:
            priorities.append(-1)  # Cannot fit
    return priority
