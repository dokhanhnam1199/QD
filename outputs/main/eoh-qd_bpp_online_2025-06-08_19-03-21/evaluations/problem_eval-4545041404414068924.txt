def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by considering both the absolute waste if the item is placed in the bin and the relative fullness of the bin after placement.}"""
    priority = []
    bin_capacity = 100
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            fullness_after = (bin_capacity - waste) / bin_capacity
            priority_score = fullness_after / (waste + 0.0001)
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
