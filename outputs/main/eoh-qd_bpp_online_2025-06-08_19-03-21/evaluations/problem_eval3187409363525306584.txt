def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority score to each bin based on the wasted space if the item is placed in that bin, preferring bins where the wasted space is closest to a pre-defined target waste.}"""
    priority = []
    target_waste = 0.2  # Define a target waste ratio (e.g., 20% of bin capacity)
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            waste_ratio = waste / cap
            priority_score = -abs(waste_ratio - target_waste) # Closer to target, higher priority
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
