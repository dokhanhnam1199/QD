def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on how close the item's size is to the remaining capacity of the bin, penalizing bins that are either too full or have too much empty space after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(cap / item - abs(cap - item) / (cap + item)) # higher priority if item fits well and minimizes wasted space.
    else:
      priority.append(-1)
  return priority
