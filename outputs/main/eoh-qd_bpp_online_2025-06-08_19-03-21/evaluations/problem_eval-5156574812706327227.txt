def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on the ratio of the item size to the remaining capacity, adjusted by a penalty based on the absolute difference between the item size and remaining capacity, penalizing bins where the item fits very loosely or nearly overflows the bin.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = float(item) / float(cap) - abs(item - cap) * 0.01
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
