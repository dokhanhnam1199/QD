def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns bin priorities based on the absolute difference between the item size and remaining bin capacity, favoring bins where the item fills the bin as closely as possible without overfilling.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap < item:
            priorities.append(-1e9)  # Very low priority if item doesn't fit
        else:
            priority = -abs(cap - item)
            priorities.append(priority)
    return priority
