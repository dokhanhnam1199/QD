def priority_v3(item, bins_remain_cap):
    """{This algorithm prioritizes bins by primarily focusing on how closely the item's size matches the remaining capacity, with a minor penalty for nearly empty bins.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fit_score = 1 / (abs(cap - item) + 0.0001)  # Higher score for closer fit (smaller difference)
            empty_penalty = (cap / 100)**3  # Penalty increases as bin becomes emptier
            priority_score = fit_score - empty_penalty
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
