def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates bin priority based on a combination of the ratio of item size to remaining capacity and a penalty for bins nearing full capacity.}"""
  priorities = []
  total_capacity = sum(bins_remain_cap)
  for cap in bins_remain_cap:
    if cap >= item:
      capacity_ratio = item / cap
      fullness_penalty = (1 - cap / total_capacity) ** 2
      priorities.append(capacity_ratio - fullness_penalty)
    else:
      priorities.append(-1000)
  return priority
