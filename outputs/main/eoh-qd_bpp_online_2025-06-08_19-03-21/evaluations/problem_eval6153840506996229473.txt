def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the ratio of item size to remaining capacity after packing, combined with a penalty if the item doesn't fit well, favoring fuller bins.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_cap = cap - item
      ratio = item / (cap + 0.0001) 
      fit_penalty = abs(remaining_cap - item) / (cap + 0.0001)
      priority.append(ratio - fit_penalty)
    else:
      priority.append(-1)
  return priority
