def priority_v3(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the remaining capacity relative to the item size and applies a penalty proportional to the absolute difference between the remaining capacity and the item size.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      # Base priority: Remaining capacity relative to item size.
      base_priority = item / cap

      # Adjust priority based on absolute waste.  Linear penalty for waste.
      waste = abs(cap - item)
      penalty = waste / (item + cap) #Normalized waste
      adjusted_priority = base_priority - penalty
      priority.append(adjusted_priority)
    else:
      priority.append(-1)  # Bin is not suitable.

  return priority
