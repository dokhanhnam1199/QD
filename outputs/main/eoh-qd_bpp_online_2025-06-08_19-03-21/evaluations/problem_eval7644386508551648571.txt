def priority_v2(item, bins_remain_cap):
    """{Prioritize bins based on the potential fill percentage, exponentially rewarding near-perfect fits and heavily penalizing bins where the item doesn't fit or leaves significant wasted space.}"""
    priorities = []
    for cap in bins_remain_cap:
        if item <= cap:
            fill_percentage = (item / cap) * 100
            priority = fill_percentage**2 if fill_percentage >= 90 else fill_percentage # Exponentially reward near perfect fits
        else:
            priority = -1e9  # Heavily penalize if item doesn't fit
        priorities.append(priority)
    return priority
