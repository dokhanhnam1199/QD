def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on the percentage of the bin filled by the item, penalizing bins that are too full or cannot fit the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_percentage = float(item) / cap
      priority_score = fill_percentage  # Prioritize higher fill percentage
    else:
      priority_score = -100  # Heavily penalize bins that can't fit
    priority.append(priority_score)
  return priority
