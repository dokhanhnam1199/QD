def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the ratio of the item size to the bin's remaining capacity, favoring bins where the item fills a significant portion of the remaining space, but also penalizing bins that are almost full to avoid over-packing.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            #Prioritize bins with a good fill ratio, but penalize near-full bins.
            priority_score = fill_ratio - (1 - cap / 100)**3
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
