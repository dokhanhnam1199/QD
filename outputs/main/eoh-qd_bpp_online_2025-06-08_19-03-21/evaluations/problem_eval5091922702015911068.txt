def priority_v2(item, bins_remain_cap):
  """{Assign a priority score to each bin based on how much of its remaining capacity would be used by the item, rewarding bins that would be filled more completely and penalizing those that would be left with large unused space, and returning these scores as a list.}"""
  priorities = []
  for cap in bins_remain_cap:
    if item <= cap:
      fill_ratio = float(item) / float(cap)
      remaining_ratio = float(cap - item) / float(cap)
      priority = fill_ratio - remaining_ratio**2  # Reward higher fill ratios, penalize large remaining space
    else:
      priority = -1  # Item doesn't fit
    priorities.append(priority)
  return priority
