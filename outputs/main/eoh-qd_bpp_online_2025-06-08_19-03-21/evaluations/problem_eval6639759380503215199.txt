def priority_v2(item, bins_remain_cap):
    """{This algorithm calculates a priority score for each bin based on the wasted space if the item is placed in that bin, giving higher priority to bins with less wasted space relative to the bin's capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            priority_score = 1 - (wasted_space / cap)  # Prioritize less wasted space relative to capacity
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
