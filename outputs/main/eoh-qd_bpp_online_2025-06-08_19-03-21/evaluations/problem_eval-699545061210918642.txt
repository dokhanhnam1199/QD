def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of how well the item fits relative to the bin's capacity and a bonus for bins that are neither too full nor too empty after packing.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            emptiness_penalty = abs(0.5 - fill_ratio) 
            priority = fill_ratio - emptiness_penalty
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
