def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a weighted combination of remaining capacity utilization and absolute waste, favoring bins that lead to higher utilization and smaller absolute waste.}"""
    priorities = []
    for cap in bins_remain_cap:
        if cap >= item:
            utilization = item / cap
            waste = cap - item
            priority = (utilization * 50) + (50 - waste)
            priorities.append(priority)
        else:
            priorities.append(-1)
    return priority
