def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the wasted space if the item is placed, normalized by the bin's original capacity, with a bonus for filling the bin closer to full.}"""
    priority = []
    bin_capacity = 100 # Assume bin capacity is 100
    for cap in bins_remain_cap:
        if cap >= item:
            wasted_space = cap - item
            normalized_wasted_space = wasted_space / bin_capacity
            fullness_ratio = item / bin_capacity
            priority_score = 1 - normalized_wasted_space + fullness_ratio
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
