def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on a combination of remaining capacity and a factor related to how much of the item fits in the bin, preferring bins that can accommodate the item reasonably well without wasting too much space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority.append(cap - item + cap * 0.1) # higher priority for bins that can fit the item with some space left.
    else:
      priority.append(-1) # very low priority for bins that can't fit the item.
  return priority
