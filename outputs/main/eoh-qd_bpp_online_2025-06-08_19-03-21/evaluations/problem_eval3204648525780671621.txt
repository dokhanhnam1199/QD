def priority_v3(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin by rewarding bins with remaining capacity close to the item size and penalizing bins with significantly larger or smaller remaining capacity.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      # Reward bins with remaining capacity close to the item size
      capacity_ratio = item / cap
      priority_score = capacity_ratio - abs(1 - capacity_ratio) #Penalty function adjusted.
      priority.append(priority_score)
    else:
      priority.append(-1)  # Bin is not suitable
  return priority
