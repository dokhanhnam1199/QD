def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on a combination of remaining capacity after packing the item and the absolute difference between remaining capacity and item size, favoring bins that result in a small remaining capacity and a close fit.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_cap = cap - item
      diff = abs(remaining_cap - item)
      priority.append(1 / (remaining_cap + 0.0001) + 1 / (diff + 0.0001))
    else:
      priority.append(-1)
  return priority
