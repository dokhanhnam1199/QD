def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the absolute difference between the remaining capacity and a target fill level (e.g., 75% full), penalizing deviations from this target.}"""
  priorities = []
  target_fill = 0.75  # Target fill percentage
  for cap in bins_remain_cap:
    if cap < item:
      priorities.append(-1)  # Cannot fit
    else:
      new_remaining = cap - item
      fill_level = 1 - (new_remaining / cap)
      deviation = abs(fill_level - target_fill)
      priority = 1 - deviation # Higher priority for bins closer to target fill
      priorities.append(priority)
  return priority
