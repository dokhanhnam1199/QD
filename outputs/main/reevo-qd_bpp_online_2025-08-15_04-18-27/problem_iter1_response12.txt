```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit strategy.

    The Worst Fit strategy prioritizes bins that have the most remaining capacity.
    This aims to leave smaller, more constrained bins available for future smaller items.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        Higher score indicates higher priority (i.e., more remaining capacity).
    """
    # In Worst Fit, we want to place the item in the bin with the most remaining capacity.
    # Therefore, the priority is directly proportional to the remaining capacity.
    # We only consider bins that can actually accommodate the item.
    priorities = np.where(bins_remain_cap >= item, bins_remain_cap, -np.inf)
    return priorities
```
