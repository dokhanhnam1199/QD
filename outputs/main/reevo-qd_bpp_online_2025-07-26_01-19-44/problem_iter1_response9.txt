```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This implementation considers both the remaining capacity and the number of
    bins used: prioritizing bins that are about to be filled and have space,
    trying to avoid creating new bins unless necessary.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Penalize bins that are almost full (using a sigmoid-like function) and
    # prioritize ones that have enough space.
    # Blo拥挤-ness coefficient to emphasize bins with less space left.
    overcrowding_coefficient = 2.0
    priorities = (bins_remain_cap - item) / \
                 (bins_remain_cap + overcrowding_coefficient * item)
    return priorities
```
