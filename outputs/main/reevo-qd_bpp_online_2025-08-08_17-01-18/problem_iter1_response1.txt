```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a Best Fit strategy.

    The Best Fit strategy aims to place the item into the bin that has the least remaining
    capacity after the item is placed, provided it fits. This helps in keeping larger
    bins available for larger items later.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
        A higher score indicates a more desirable bin. Bins that cannot fit the item
        will have a priority of 0.
    """
    # Calculate remaining capacity after placing the item
    potential_remaining_caps = bins_remain_cap - item

    # Initialize priorities to zero
    priorities = np.zeros_like(bins_remain_cap)

    # Find bins where the item can fit
    fit_indices = np.where(potential_remaining_caps >= 0)[0]

    if len(fit_indices) > 0:
        # For bins that can fit the item, assign a priority.
        # The "best fit" is the one that leaves the *least* remaining capacity.
        # To make this a "highest priority" score, we can invert the remaining capacity
        # (or use a large number minus remaining capacity).
        # A simple approach is to use the negative of the potential remaining capacity.
        # The more negative, the better the fit (i.e., less remaining space).
        priorities[fit_indices] = -potential_remaining_caps[fit_indices]

        # To ensure that a bin that is a "perfect fit" (leaves 0 remaining capacity)
        # is prioritized over one that leaves, say, -1 remaining capacity (meaning it was
        # a bit too large), we can further refine the priority.
        # If multiple bins have the same minimum remaining capacity, any of them is fine.
        # The current negative remaining capacity already ranks them appropriately.

    return priorities
```
