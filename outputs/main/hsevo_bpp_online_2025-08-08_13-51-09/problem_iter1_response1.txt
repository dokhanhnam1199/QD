```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Implements a Best Fit strategy for the online Bin Packing Problem.
    Prioritizes bins that have the smallest remaining capacity *after* the item is placed,
    as long as the item fits. Items that don't fit get a low priority.
    """
    priorities = np.full_like(bins_remain_cap, -np.inf)
    can_fit_mask = bins_remain_cap >= item
    remaining_capacities_after_fit = bins_remain_cap[can_fit_mask] - item
    
    # We want the bin with the smallest remaining capacity after fitting the item.
    # A smaller remaining capacity is better. So, we want to maximize the negative of the remaining capacity.
    priorities[can_fit_mask] = -remaining_capacities_after_fit
    
    return priorities
```
