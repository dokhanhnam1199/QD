```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    valid_bins_mask = bins_remain_cap >= item
    valid_bins_remain_cap = bins_remain_cap[valid_bins_mask]
    if valid_bins_remain_cap.size == 0:
        return np.zeros_like(bins_remain_cap)
    
    capacities_ratio = valid_bins_remain_cap / np.sum(valid_bins_remain_cap)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins_mask] = np.exp(capacities_ratio) / np.sum(np.exp(capacities_ratio))
    
    return priorities
```
