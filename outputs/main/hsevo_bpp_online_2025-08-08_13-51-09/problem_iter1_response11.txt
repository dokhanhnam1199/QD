```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    valid_bins_mask = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf)
    
    if not np.any(valid_bins_mask):
        return priorities
        
    available_capacities = bins_remain_cap[valid_bins_mask]
    
    gaps = available_capacities - item
    
    priorities[valid_bins_mask] = -gaps / available_capacities
    
    return priorities
```
