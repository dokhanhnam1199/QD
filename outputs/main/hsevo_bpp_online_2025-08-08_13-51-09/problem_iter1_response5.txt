```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Inverse Distance (Proximity Fit).

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    suitable_bins_mask = bins_remain_cap >= item
    
    if not np.any(suitable_bins_mask):
        return np.zeros_like(bins_remain_cap)

    suitable_bins_remain_cap = bins_remain_cap[suitable_bins_mask]
    
    distances = suitable_bins_remain_cap - item
    
    priorities = 1 / (distances + 1e-9)  # Add small epsilon to avoid division by zero
    
    full_priorities = np.zeros_like(bins_remain_cap)
    full_priorities[suitable_bins_mask] = priorities
    
    return full_priorities
```
