```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Inverse Distance (Proximity Fit).

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    valid_bins_mask = bins_remain_cap >= item
    
    if np.any(valid_bins_mask):
        valid_bins_remain_cap = bins_remain_cap[valid_bins_mask]
        
        differences = valid_bins_remain_cap - item
        
        inverse_distances = 1.0 / (differences + 1e-9)
        
        priorities[valid_bins_mask] = inverse_distances

    return priorities
```
