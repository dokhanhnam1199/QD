```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization and bin occupancy for better BPP."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    # Waste minimization: Smaller waste is better
    waste = bins_remain_cap - item
    waste_penalty = np.where(waste >= 0, -waste, -np.inf)
    priorities += waste_penalty

    # Bin occupancy: Encourages filling bins close to full
    occupancy = (bins_remain_cap - waste) / (bins_remain_cap + epsilon)
    occupancy_reward = np.where(waste >= 0, occupancy, -np.inf)
    priorities += occupancy_reward
    
    return priorities
```
