```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins based on waste, fill ratio, and stability, 
    with emphasis on minimizing waste and encouraging higher fill.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    feasible_bins = bins_remain_cap >= item
    if not np.any(feasible_bins):
        return priorities

    waste = bins_remain_cap[feasible_bins] - item
    waste_priority = 1 / (waste + epsilon)
    priorities[feasible_bins] += waste_priority

    fill_ratio = item / (bins_remain_cap[feasible_bins] + epsilon)
    fill_priority = 1 / (1 + np.exp(-5 * (fill_ratio - 0.5)))
    priorities[feasible_bins] += fill_priority

    stability = -np.abs(bins_remain_cap[feasible_bins] - item)
    stability_priority = stability * 0.1
    priorities[feasible_bins] += stability_priority

    return priorities
```
