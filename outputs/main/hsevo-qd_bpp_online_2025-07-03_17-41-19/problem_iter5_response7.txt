```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization and a modified fill ratio for priority."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    # Waste minimization: Smaller waste is better
    waste = bins_remain_cap - item
    waste_penalty = np.where(waste >= 0, -waste, -np.inf)
    priorities += waste_penalty

    # Modified fill ratio: Favor bins closer to being filled completely.
    fill_ratio = item / (bins_remain_cap + epsilon)
    fill_reward = np.where(fill_ratio <= 1, (1 - abs(1 - fill_ratio)), -np.inf)  # Closer to 1 is better
    priorities += fill_reward

    return priorities
```
