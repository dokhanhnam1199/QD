```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Refines bin selection using waste, capacity, and fill ratio.
    Emphasizes fitting items well and balancing bin usage.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    fit_mask = bins_remain_cap >= item
    if not np.any(fit_mask):
        return priorities

    waste = bins_remain_cap - item
    waste_priority = np.exp(-waste / (item + epsilon))
    waste_priority = np.where(~fit_mask, -np.inf, waste_priority)

    capacity_factor = bins_remain_cap / (np.max(bins_remain_cap) + epsilon)
    capacity_priority = np.where(~fit_mask, -np.inf, capacity_factor)

    fill_ratio = item / (bins_remain_cap + epsilon)
    fill_reward = np.exp(1 - np.abs(1 - fill_ratio))
    fill_reward = np.where(~fit_mask, -np.inf, fill_reward)

    priorities = (0.4 * waste_priority +
                  0.3 * fill_reward +
                  0.3 * capacity_priority)

    return priorities
```
