```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization and fill ratio with feasibility check."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Waste minimization with feasibility check
    waste = bins_remain_cap - item
    feasible = waste >= 0
    waste_penalty = np.where(feasible, -waste, -np.inf)
    priorities += waste_penalty

    # Fill ratio reward (only if feasible)
    fill_ratio = item / bins_remain_cap
    fill_reward = np.where(feasible, fill_ratio, -np.inf)
    priorities += fill_reward

    return priorities
```
