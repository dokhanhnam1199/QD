```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines waste minimization and fill ratio considerations.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    # Waste minimization
    waste = bins_remain_cap - item
    waste_priority = np.where(waste >= 0, np.exp(-waste), -np.inf)
    priorities += waste_priority

    # Fill ratio with a sigmoid function
    fill_ratio = item / (bins_remain_cap + epsilon)
    fill_priority = 1 / (1 + np.exp(5 - 10 * fill_ratio))  # Sigmoid centered at 0.5 fill ratio
    priorities += fill_priority

    return priorities
```
