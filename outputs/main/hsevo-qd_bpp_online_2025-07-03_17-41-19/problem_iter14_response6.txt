```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, fill level, and bin utilization."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    # Waste minimization
    waste = bins_remain_cap - item
    waste_penalty = np.where(waste >= 0, np.exp(-5 * waste / (item+epsilon)), -np.inf)
    priorities += waste_penalty

    # Fill level
    fill_ratio = item / (bins_remain_cap + epsilon)
    fill_reward = 1 / (1 + np.exp(2 - 4 * fill_ratio))
    priorities += fill_reward

    # Bin utilization
    utilization = (1 - bins_remain_cap)
    utilization_reward = np.where(utilization > 0, np.tanh(2*utilization), 0)
    priorities += 0.3 * utilization_reward

    return priorities
```
