```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, fill level, and bin utilization."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9

    # Waste penalty (quadratic)
    waste = bins_remain_cap - item
    waste_penalty = np.where(waste >= 0, -waste**2, -np.inf)
    priorities += waste_penalty

    # Fill level reward (exponential near 1)
    fill_ratio = item / (bins_remain_cap + epsilon)
    fill_reward = np.where(fill_ratio <= 1, np.exp(1 - np.abs(1 - fill_ratio)), -np.inf)
    priorities += fill_reward

    # Bin utilization reward (scaled exponential)
    utilization = 1 - bins_remain_cap
    utilization_reward = np.exp(utilization)
    priorities += 0.1 * utilization_reward

    return priorities
```
