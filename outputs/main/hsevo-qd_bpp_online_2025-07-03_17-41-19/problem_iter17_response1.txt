```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization and fill level with balanced bin utilization."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    epsilon = 1e-9
    alpha = 0.6

    waste = bins_remain_cap - item
    waste_penalty = np.where(waste >= 0, np.exp(-waste / (item + epsilon)), -np.inf)
    priorities += alpha * waste_penalty

    fill_ratio = item / (bins_remain_cap + epsilon)
    fill_reward = np.where(fill_ratio <= 1, np.exp(fill_ratio), -np.inf)
    priorities += (1 - alpha) * fill_reward

    bin_utilization = 1 - (bins_remain_cap / (np.max(bins_remain_cap) + epsilon))
    balance_reward = np.exp(-np.abs(bin_utilization - 0.5))
    priorities += 0.1 * balance_reward

    return priorities
```
