```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            remaining_after_fit = cap - item
            if remaining_after_fit == 0:
                priorities[i] = 1.0
            else:
                priorities[i] = 1.0 / (remaining_after_fit + 1e-6)
    return priorities
```
