```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using a First Fit decreasing-like approach."""
    priorities = np.zeros_like(bins_remain_cap)
    
    # Prioritize bins that can fit the item
    can_fit_mask = bins_remain_cap >= item
    
    # Among bins that can fit, prioritize those with the least remaining capacity after fitting the item
    # This encourages using bins that are "just right" for the item, aiming for tighter packing.
    remaining_caps_after_fit = bins_remain_cap[can_fit_mask] - item
    
    # Assign priorities: higher priority for bins with less remaining capacity after fitting
    # We want to minimize remaining_caps_after_fit, so we take its negative
    priorities[can_fit_mask] = -remaining_caps_after_fit
    
    # To ensure a bin that can fit is always preferred over one that cannot, 
