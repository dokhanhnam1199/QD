def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on remaining capacity and a penalty if the item almost fills the bin, then returns the priority scores.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority_score = cap - item  # Remaining capacity after packing
      if item > 0.8 * cap:
          priority_score -= 0.2*cap  # Added penalty when the item almost fills the bin
      priority.append(priority_score)
    else:
      priority.append(-1)  # Assign -1 priority if the item doesn't fit
  return priority
