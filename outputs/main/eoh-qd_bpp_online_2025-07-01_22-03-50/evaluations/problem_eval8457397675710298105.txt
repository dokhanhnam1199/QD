def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns priority based on a combination of remaining capacity (favoring bins that can tightly pack the item) and bin index (breaking ties in favor of earlier bins). }"""
  priority = []
  for i, cap in enumerate(bins_remain_cap):
    if cap >= item:
      priority.append(cap - item + 1.0/(i+1))
    else:
      priority.append(-1)
  return priority
