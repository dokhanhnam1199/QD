```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization and capacity ratio for bin selection."""
    priority = np.zeros_like(bins_remain_cap, dtype=float)
    sufficient_capacity = bins_remain_cap >= item
    priority[sufficient_capacity] += 1

    waste = bins_remain_cap - item
    positive_waste = waste[waste >= 0]
    if len(positive_waste) > 0:
        min_waste = np.min(positive_waste)
        min_waste_bins_idx = np.where(waste == min_waste)[0]
        priority[min_waste_bins_idx] += 2

    ratios = item / bins_remain_cap
    ratios[~sufficient_capacity] = 0  # Penalize bins that can't fit the item
    priority += ratios * 0.5

    return priority
```
