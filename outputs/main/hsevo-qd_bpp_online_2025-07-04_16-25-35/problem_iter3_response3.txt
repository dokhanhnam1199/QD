```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priority = np.zeros_like(bins_remain_cap, dtype=float)

    # Heuristic 1: Feasibility - Essential
    feasible = bins_remain_cap >= item
    priority[feasible] += 1  # Base priority if the bin can fit the item

    # Heuristic 2: Minimize Waste (Maximize filled space) - Refined
    waste = bins_remain_cap - item
    positive_waste = waste[feasible]  # Only consider feasible bins
    if len(positive_waste) > 0:
        min_waste = np.min(positive_waste)
        min_waste_bins_idx = np.where(waste == min_waste)[0]
        priority[min_waste_bins_idx] += 3  # Higher priority for minimizing waste

        # Heuristic 2b: Prioritize bins with smaller waste proportionally
        waste_priority = 1 / (1 + positive_waste)  # Avoid division by zero
        waste_priority /= np.sum(waste_priority)  # Normalize to avoid domination
        feasible_indices = np.where(feasible)[0]
        priority[feasible_indices] += 2 * waste_priority

    # Heuristic 3: Prevent Fragmentation (Bins near full) - Adjusted range
    nearly_full = (bins_remain_cap > 0) & (bins_remain_cap <= 1.5 * item) & (bins_remain_cap >= item)
    priority[nearly_full] += 2  # Increase priority for near-full bins

    # Heuristic 4: Encourage Use of Empty Bins - Enhanced
    is_empty = bins_remain_cap == np.max(bins_remain_cap)
    priority[is_empty] += 4  # Significantly higher priority for empty bins

    # Heuristic 5: Balance (Try to balance the bin levels)
    bin_utilization = (np.max(bins_remain_cap) - bins_remain_cap) / np.max(bins_remain_cap) # Calculates utilization of each bin
    priority[feasible] += bin_utilization[feasible] # Gives higher priority to bins with higher utilization

    return priority
```
