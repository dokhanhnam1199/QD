```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines capacity ratio and waste minimization for bin priority."""
    bin_capacity = np.max(bins_remain_cap)
    priority = np.zeros_like(bins_remain_cap, dtype=float)

    # Heuristic 1: Capacity Ratio
    ratios = item / bins_remain_cap
    priority += -np.log(ratios)

    # Heuristic 2: Waste Minimization
    waste = bins_remain_cap - item
    positive_waste = waste[waste >= 0]
    if len(positive_waste) > 0:
        min_waste = np.min(positive_waste)
        min_waste_bins_idx = np.where(waste == min_waste)[0]
        priority[min_waste_bins_idx] += 1.0 # Add constant for minimizing waste

    return priority
```
