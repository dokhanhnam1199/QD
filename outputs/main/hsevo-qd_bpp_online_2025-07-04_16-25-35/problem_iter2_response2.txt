```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines capacity ratio with waste minimization."""
    priority = np.zeros_like(bins_remain_cap, dtype=float)
    
    # Sufficient capacity check
    can_fit = bins_remain_cap >= item
    
    # Prioritize bins that can fit the item
    priority[can_fit] += 1.0
    
    # Waste minimization
    waste = bins_remain_cap - item
    
    # Calculate a ratio-based priority, but only for bins that can fit
    safe_bins = bins_remain_cap[can_fit]
    
    if(len(safe_bins) > 0):
        ratios = item / safe_bins
        log_ratios = np.log(ratios)
        priority[can_fit] += -log_ratios  # Add -log(ratio) to bins that can fit

    # More preference for smaller waste
    min_waste_idx = np.argmin(waste)
    if waste[min_waste_idx] >= 0:
        priority[min_waste_idx] += 1

    return priority
```
