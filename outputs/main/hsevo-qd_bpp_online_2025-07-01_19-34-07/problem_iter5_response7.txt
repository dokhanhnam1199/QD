```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines utilization, fit, and gravity for bin priority."""
    epsilon = 1e-9
    feasible_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=float) - np.inf

    # Utilization Factor
    utilization = (1 - bins_remain_cap / (np.max(bins_remain_cap) + epsilon))
    utilization = np.clip(utilization, 0, 1)
    utilization_factor = utilization**2

    # Item Fit Score
    fit_score = np.exp(-np.abs(bins_remain_cap - item) / (item + epsilon))

    # Gravity Effect (modified)
    gravity_power = 2 #gravity_power
    gravitational_effect = (item / (bins_remain_cap + epsilon)) ** gravity_power
    
    priorities[feasible_bins] = (
        0.4 * utilization_factor[feasible_bins] +
        0.3 * fit_score[feasible_bins] +
        0.3 * gravitational_effect[feasible_bins]
    )
    return priorities
```
