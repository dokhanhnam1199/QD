```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, min_capacity: float = 1e-6, gravity_power: float = 2.0, balance_factor: float = 0.5) -> np.ndarray:
    """Combines gravitational effect, fill factor, and a balance term for bin selection."""

    bins_remain_cap = np.where(bins_remain_cap <= 0, min_capacity, bins_remain_cap)

    gravitational_effect = item / bins_remain_cap**gravity_power

    fill_factor = (1 - (bins_remain_cap - item) / bins_remain_cap)
    fill_factor = np.where(bins_remain_cap < item, -np.inf, fill_factor)

    capacity_utilization = (1 - bins_remain_cap / np.max(bins_remain_cap))
    balance = balance_factor * capacity_utilization

    priorities = gravitational_effect + fill_factor + balance
    return priorities
```
