```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines gravitational effect and a modified fill factor for bin priority."""

    # Avoid division by zero
    bins_remain_cap = np.where(bins_remain_cap <= 0, 1e-9, bins_remain_cap)

    # Gravitational effect: item size relative to capacity.
    gravitational_effect = item / bins_remain_cap**2

    # Fill factor: how full the bin would be after adding the item.
    fill_factor = (item / bins_remain_cap)
    fill_factor = np.where(bins_remain_cap < item, -np.inf, fill_factor)

    # Combine both factors, emphasizing gravitational effect for nearly full bins.
    priorities = gravitational_effect + fill_factor
    return priorities
```
