```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    This version combines multiple factors for better bin selection:
    - Remaining capacity relative to item size
    - Fill percentage of the bin
    - A penalty for bins that are almost full (encourages more balanced fill)

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """

    # Handle cases where the item doesn't fit (assign very low priority)
    fit_mask = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf)
    priorities[fit_mask] = 0.0  # Initialize priorities for fitting bins

    fitting_bins_remain_cap = bins_remain_cap[fit_mask]

    # 1. Capacity Ratio: How much space is left relative to the item size?
    capacity_ratio = item / fitting_bins_remain_cap
    capacity_ratio = np.clip(capacity_ratio, 0, 1)  # Ensure the ratio is within [0, 1]
    priorities[fit_mask] += capacity_ratio

    # 2. Fill Percentage: How full is the bin already?
    bin_size = 1.0 #Assume bin size is 1
    fill_percentage = (bin_size - fitting_bins_remain_cap) / bin_size
    priorities[fit_mask] += fill_percentage

    # 3. Remaining capacity score, small remaining capacity gives higher score
    remaining_cap_score = 1/(fitting_bins_remain_cap + 1e-9)
    priorities[fit_mask] += remaining_cap_score

    # 4. Introduce a penalty for bins that are nearly full to promote more balanced fill
    almost_full_threshold = 0.9  # Consider a bin "almost full" if filled > 90%
    almost_full_penalty = -0.5
    almost_full_mask = fill_percentage > almost_full_threshold
    priorities[fit_mask][almost_full_mask] += almost_full_penalty

    # 5. Item size score: larger item, higher score
    item_size_score = item
    priorities[fit_mask] += item_size_score

    return priorities
```
