```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This version prioritizes bins with remaining capacity closest to the item size
    but only if the item fits. It also adds a small bonus to bins that are nearly full,
    to encourage filling them up completely. Bins where item does not fit gets -inf priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # Main Priority: Closeness of remaining capacity to item size
            priority = -abs(cap - item)

            # Bonus for nearly full bins after adding item
            if cap - item <= 0.1:  # Small threshold
                priority += 1.0 # Magnitude of bonus

            priorities[i] = priority
        else:
            priorities[i] = -np.inf  # Cannot fit the item
    return priorities
```
