```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities considering gravitational effect and fill ratio."""
    division_safety: float = 1e-9
    exponent: float = 1.5

    bins_remain_cap = np.where(bins_remain_cap <= 0, division_safety, bins_remain_cap)
    gravitational_effect = item / bins_remain_cap**exponent
    fill_factor = (1 - (bins_remain_cap - item) / bins_remain_cap)
    fill_factor = np.where(bins_remain_cap < item, -np.inf, fill_factor)
    priorities = gravitational_effect + fill_factor
    
    capacity_utilization = (1 - bins_remain_cap / np.max(bins_remain_cap))
    priorities += 0.1 * capacity_utilization # scale down and add
    
    return priorities
```
