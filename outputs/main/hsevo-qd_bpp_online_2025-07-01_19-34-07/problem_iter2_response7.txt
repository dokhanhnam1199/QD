```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines gravitational effect with a modified fill factor."""
    # Avoid division by zero
    bins_remain_cap = np.where(bins_remain_cap <= 0, 1e-9, bins_remain_cap)

    # Gravitational effect: item size / remaining capacity squared
    gravitational_effect = item / (bins_remain_cap**2)

    # Modified fill factor: consider item size relative to remaining capacity.
    fill_factor = (item / bins_remain_cap) # Simple ratio
    fill_factor = np.where(bins_remain_cap < item, -np.inf, fill_factor)

    # Combine, emphasizing gravitational effect.
    priorities = gravitational_effect + 0.5 * fill_factor #Weighting the fill_factor
    return priorities
```
