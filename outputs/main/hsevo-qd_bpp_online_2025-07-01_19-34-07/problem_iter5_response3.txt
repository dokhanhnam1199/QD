```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines gravitational effect, fill ratio, and capacity awareness."""
    bins_remain_cap = np.where(bins_remain_cap <= 0, 1e-9, bins_remain_cap)

    gravitational_effect = item / bins_remain_cap**2 # more attraction for fuller bins

    fill_ratio = item / bins_remain_cap
    fill_ratio = np.where(bins_remain_cap < item, -np.inf, fill_ratio) # impossible bins

    capacity_awareness = np.exp(-bins_remain_cap / item) # scaled by item size

    priorities = gravitational_effect + fill_ratio + capacity_awareness
    return priorities
```
