import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, sigmoid_scale: float = 3.2981544381115686, best_bin_boost: float = 2.2267114039372817) -> np.ndarray:
    """Combines best-fit (waste minimization) with sigmoid scaling for stability."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        best_bin_index = np.argmin(waste)
        sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
        priorities[valid_bins] = sigmoid_scaled_waste
        priorities[np.where(valid_bins)[0][best_bin_index]] = best_bin_boost
    return priorities
