```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit (v0) with handling no valid bins (v1) for robustness."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        sigmoid_scale = 5.0
        sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
        priorities[valid_bins] = sigmoid_scaled_waste
        best_bin_index = np.argmin(waste)
        worst_bin_index = np.argmax(waste)
        priorities[valid_bins][best_bin_index] += 0.5
        priorities[valid_bins][worst_bin_index] -= 0.1
    return priorities
```
