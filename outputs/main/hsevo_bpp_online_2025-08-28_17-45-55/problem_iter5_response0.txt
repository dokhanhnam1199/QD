```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best fit with sigmoid scaling and a decaying best bin boost."""
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)
    waste = bins_remain_cap[valid_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = 1 / (1 + np.exp(waste))
    best_bin_index = np.argmin(waste)
    priorities[valid_bins] = np.exp(-(waste - 1))
    priorities[best_bin_index] = np.max(priorities[valid_bins])
    return priorities
```
