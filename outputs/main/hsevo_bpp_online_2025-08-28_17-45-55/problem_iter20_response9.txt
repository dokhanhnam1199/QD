```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a worst-fit penalty, using sigmoid scaling and explicit handling of no valid bins."""
    possible_bins = bins_remain_cap >= item
    if np.sum(possible_bins) == 0:
        return np.zeros_like(bins_remain_cap)
    waste = bins_remain_cap[possible_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    sigmoid_scale = 5.0
    sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
    priorities[possible_bins] = sigmoid_scaled_waste
    best_bin_index = np.argmin(waste)
    worst_bin_index = np.argmax(waste)
    priorities[possible_bins][best_bin_index] += 1.0
    priorities[possible_bins][worst_bin_index] -= 0.1
    return priorities
```
