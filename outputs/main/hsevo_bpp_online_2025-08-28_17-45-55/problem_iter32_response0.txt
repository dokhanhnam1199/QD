```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with sigmoid scaling and exploration based on waste standard deviation."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = 1 / (1 + np.exp(-waste * 5.0))

    waste_std = np.std(waste)
    exploration_factor = np.maximum(0.1, waste_std)
    best_bin_index = np.argmin(waste)
    priorities[valid_bins[best_bin_index]] += exploration_factor

    return priorities
```
