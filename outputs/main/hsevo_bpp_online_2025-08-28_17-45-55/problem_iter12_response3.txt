```python
import numpy as np

sigmoid_scale = 5.0
best_bin_boost = 1.0

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A priority function for online bin packing, combining best-fit,
    worst-fit (to promote diversity), and sigmoid scaling with a dynamic
    adjustment based on bin utilization.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    best_bin_index = np.argmin(waste)
    worst_bin_index = np.argmax(waste)

    bin_utilization = bins_remain_cap / np.max(bins_remain_cap)
    utilization_factor = 1 + bin_utilization

    sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
    priorities[valid_bins] = sigmoid_scaled_waste * utilization_factor[valid_bins]

    priorities[np.where(valid_bins)[0][best_bin_index]] += best_bin_boost
    priorities[np.where(valid_bins)[0][worst_bin_index]] += 0.5

    return priorities
```
