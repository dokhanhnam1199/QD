```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit waste minimization with a mild worst-fit penalty for diversity."""
    valid_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap)
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        priorities[valid_bins] = 1.0 / (waste + 1e-9)
        worst_bin_index = np.argmax(waste)
        priorities[valid_bins][worst_bin_index] -= 0.1
    return priorities
```
