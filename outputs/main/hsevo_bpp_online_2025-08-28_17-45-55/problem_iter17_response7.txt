```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with a worst-fit penalty using sigmoid scaling for stability."""
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[valid_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = 1.0 / (1 + np.exp(-waste * 5.0))

    best_bin_index = np.argmin(waste)
    priorities[valid_bins][best_bin_index] += 0.5

    worst_bin_index = np.argmax(waste)
    priorities[valid_bins][worst_bin_index] -= 0.2

    return priorities
```
