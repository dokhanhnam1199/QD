```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A priority function for online bin packing that combines best-fit with
    modulated sigmoid scaling based on waste statistics.
    """
    sigmoid_scale = 5.0
    best_bin_boost = 2.0
    waste_std_factor = 2.0

    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[valid_bins] - item
    waste_std = np.std(waste)
    
    modulated_scale = sigmoid_scale * (1 + waste_std * waste_std_factor)

    sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * modulated_scale))
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = sigmoid_scaled_waste

    best_bin_index = np.argmin(waste)
    priorities[np.where(valid_bins)[0][best_bin_index]] += best_bin_boost

    return priorities
```
