```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        
        priorities[valid_bins] = 1.0 / (1.0 + waste)
        
        bin_usage = (bins_remain_cap - item) / bins_remain_cap
        bin_usage = np.where(valid_bins, bin_usage, 0.0)
        
        exploration_bonus = np.exp(-bin_usage * exploration_factor)
        priorities[valid_bins] += exploration_bonus
        
        
        worst_fit_index = np.argmax(waste)
        priorities[np.where(valid_bins)[0][worst_fit_index]] += worst_fit_boost

    return priorities

exploration_factor = 2.0
worst_fit_boost = 0.1
```
