```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins based on a combination of best-fit, waste standard deviation,
    and a sigmoid scaling for stability.
    """
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[valid_bins] - item
    
    waste_std = np.std(bins_remain_cap[valid_bins] - item) if len(bins_remain_cap[valid_bins] - item) > 1 else 0.0
    
    priorities = np.zeros_like(bins_remain_cap)
    
    if waste_std > 0:
        sigmoid_scale = 0.5 / waste_std
        sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
        priorities[valid_bins] = sigmoid_scaled_waste
    else:
        priorities[valid_bins] = 1.0

    best_bin_index = np.argmin(waste)
    priorities[np.where(valid_bins)[0][best_bin_index]] += 0.1 

    return priorities
```
