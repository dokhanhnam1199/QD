```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap[bins_remain_cap >= item]
    if len(possible_bins) == 0:
        return np.zeros_like(bins_remain_cap)
    
    scores = 1 / (1 + np.exp(-(possible_bins - item) / (np.std(bins_remain_cap) + 1e-6)))
    
    priorities = np.zeros_like(bins_remain_cap)
    
    bin_indices = np.where(bins_remain_cap >= item)[0]
    
    for i, index in enumerate(bin_indices):
        priorities[index] = scores[i]
    
    return priorities
```
