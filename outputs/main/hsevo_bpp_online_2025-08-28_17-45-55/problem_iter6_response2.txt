```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, iteration: int, max_iterations: int) -> np.ndarray:
    """
    An enhanced priority function for online bin packing, combining best-fit,
    sigmoid scaling, and a decaying best-bin boost.
    """
    sigmoid_scale = 5.0
    best_bin_boost = 1.0
    decay_rate = 0.99

    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item

    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        best_bin_index = np.argmin(waste)
        sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
        priorities[valid_bins] = sigmoid_scaled_waste
        
        boost_factor = best_bin_boost * (1 - (iteration / max_iterations))
        priorities[np.where(valid_bins)[0][best_bin_index]] += boost_factor
    
    return priorities
```
