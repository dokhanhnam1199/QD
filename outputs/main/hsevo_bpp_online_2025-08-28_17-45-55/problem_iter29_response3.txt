```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with sigmoid scaling and dynamic exploration based on waste standard deviation."""
    possible_bins = bins_remain_cap >= item
    if np.sum(possible_bins) == 0:
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[possible_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[possible_bins] = 1 / (1 + np.exp(-waste * 2.0))

    std_waste = np.std(waste)
    exploration_factor = np.maximum(0.1, std_waste)
    
    best_bin_index = np.argmin(waste)
    priorities[possible_bins][best_bin_index] += exploration_factor
    
    return priorities
```
