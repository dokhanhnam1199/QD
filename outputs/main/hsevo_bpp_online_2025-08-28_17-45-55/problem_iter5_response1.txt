```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with sigmoid scaling and a decaying best-bin boost."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        fit_ratios = item / bins_remain_cap[valid_bins]
        sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * 2.0))
        priorities[valid_bins] = sigmoid_scaled_waste * np.exp(-(fit_ratios - 1))
        best_bin_index = np.argmin(waste)
        priorities[np.where(valid_bins)[0][best_bin_index]] += 1.0
    return priorities
```
