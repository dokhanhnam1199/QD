```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit waste with sigmoid scaling and a decaying best-bin boost."""
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[valid_bins] - item
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = 1 / (1 + np.exp(-5 * (1 - (item / bins_remain_cap[valid_bins]))))
    
    best_bin_index = np.argmin(waste)
    priorities[np.where(valid_bins)[0][best_bin_index]] += 2.0
    
    return priorities
```
