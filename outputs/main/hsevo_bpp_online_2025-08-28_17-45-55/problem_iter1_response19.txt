```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    eligible_bins = bins_remain_cap >= item
    if not np.any(eligible_bins):
        return np.zeros_like(bins_remain_cap)

    remaining_capacities = bins_remain_cap[eligible_bins]
    normalized_capacities = (remaining_capacities - item) / remaining_capacities
    scores = np.exp(normalized_capacities)
    priorities = np.zeros_like(bins_remain_cap)
    priorities[eligible_bins] = scores / np.sum(scores)
    return priorities
```
