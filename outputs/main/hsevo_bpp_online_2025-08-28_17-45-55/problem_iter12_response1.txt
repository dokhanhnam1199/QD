```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, alpha=1.0, beta=0.5, gamma=2.0) -> np.ndarray:
    """
    A mutated priority function for online Bin Packing Problem (BPP).
    Combines best-fit with a dynamically adjusted priority based on bin utilization and item size.
    Uses parameters alpha, beta, and gamma to control the weighting of different factors.
    """
    valid_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap)

    if np.any(valid_bins):
        bin_utilization = bins_remain_cap[valid_bins] / np.max(bins_remain_cap)
        waste = bins_remain_cap[valid_bins] - item
        
        priority_component1 = np.exp(-alpha * waste / np.max(bins_remain_cap))
        priority_component2 = bin_utilization**beta
        
        combined_priority = priority_component1 * priority_component2
        priorities[valid_bins] = combined_priority

        best_bin_index = np.argmin(waste)
        priorities[np.where(valid_bins)[0][best_bin_index]] += gamma

    return priorities
```
