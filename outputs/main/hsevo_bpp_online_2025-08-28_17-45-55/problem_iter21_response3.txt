```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, exploration_rate: float = 0.1, diversity_factor: float = 1.0) -> np.ndarray:
    """
    Adaptive priority function for online bin packing. Combines best-fit,
    exploration, and diversity to enhance packing performance.
    """
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[valid_bins] - item
    best_bin_index = np.argmin(waste)
    best_fit_priority = 1.0 / (1.0 + np.exp(-waste * 2.0))

    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins] = best_fit_priority

    exploration_bonus = np.random.rand(len(bins_remain_cap)) * exploration_rate
    priorities[valid_bins] += exploration_bonus

    bin_occupancy = 1.0 - (bins_remain_cap / np.max(bins_remain_cap))
    bin_occupancy = np.clip(bin_occupancy, 0.0, 1.0)
    diversity_bonus = diversity_factor * (1.0 - bin_occupancy)
    priorities[valid_bins] += diversity_bonus

    priorities[np.where(valid_bins)[0][best_bin_index]] += 0.5
    return priorities
```
