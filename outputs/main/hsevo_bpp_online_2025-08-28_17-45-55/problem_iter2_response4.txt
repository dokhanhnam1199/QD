```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization with sigmoid scaling for stable prioritization."""
    possible_bins = bins_remain_cap >= item
    if not np.any(possible_bins):
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[possible_bins] - item
    priorities = 1 / (1 + np.exp(-waste))
    priorities = priorities / np.sum(priorities)
    result = np.zeros_like(bins_remain_cap)
    result[possible_bins] = priorities
    return result
```
