{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    A priority function for online bin packing that dynamically adjusts\n    exploration vs. exploitation. It combines best-fit with a time-dependent\n    exploration bonus.\n    \"\"\"\n    n_bins = len(bins_remain_cap)\n    priorities = np.zeros(n_bins)\n    valid_bins = bins_remain_cap >= item\n\n    if not np.any(valid_bins):\n        return priorities\n\n    waste = bins_remain_cap[valid_bins] - item\n    \n    best_bin_index = np.argmin(waste)\n    \n    exploration_bonus_factor = 0.1 \n    \n    time_step = np.sum(bins_remain_cap > 0)\n    \n    exploration_bonus = exploration_bonus_factor * np.exp(-time_step / n_bins)\n    \n    \n    priorities[valid_bins] = -waste \n    priorities[np.where(valid_bins)[0][best_bin_index]] += 1.0 + exploration_bonus\n    \n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}