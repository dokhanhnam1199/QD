```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization with a worst-fit penalty, using sigmoid scaling for stability."""
    possible_bins = bins_remain_cap >= item
    if np.sum(possible_bins) == 0:
        return np.zeros_like(bins_remain_cap)

    waste = bins_remain_cap[possible_bins] - item
    priorities = 1.0 / (np.exp(waste) + 1e-9)
    best_bin_index = np.argmin(waste)
    priorities[possible_bins][best_bin_index] += 0.7
    worst_bin_index = np.argmax(waste)
    priorities[possible_bins][worst_bin_index] -= 0.3
    priorities[~possible_bins] = 0.0
    return priorities
```
