```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with dynamic exploration based on waste statistics."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    avg_waste = np.mean(waste)
    waste_std = np.std(waste)

    if waste_std == 0:
        waste_std = 1e-6

    normalized_waste = (waste - avg_waste) / waste_std
    sigmoid_scaled_waste = 1 / (1 + np.exp(-normalized_waste * 5.0))
    priorities[valid_bins] = sigmoid_scaled_waste

    best_bin_index = np.argmin(waste)
    priorities[np.where(valid_bins)[0][best_bin_index]] += 1.0

    return priorities
```
