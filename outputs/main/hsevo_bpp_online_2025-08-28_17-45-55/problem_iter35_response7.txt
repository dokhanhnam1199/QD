```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit, sigmoid scaling (v0) with waste std modulation (v1) for improved bin packing."""
    sigmoid_scale = 1.0
    best_bin_boost = 10.0
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)
    waste = bins_remain_cap[valid_bins] - item
    waste_std = np.std(waste) if len(waste) > 1 else 0.0
    priorities = np.zeros_like(bins_remain_cap)
    sigmoid_scaled_waste = 1 / (1 + np.exp(-waste * sigmoid_scale))
    modulated_sigmoid = sigmoid_scaled_waste * (1 + waste_std * 0.1)
    priorities[valid_bins] = modulated_sigmoid
    best_bin_index = np.argmin(waste)
    priorities[np.where(valid_bins)[0][best_bin_index]] += best_bin_boost
    return priorities
```
