```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with sigmoid exploration based on remaining capacity."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = 1 / (1 + np.exp(-waste * 2.0))
    
    avg_waste = np.mean(waste)
    std_waste = np.std(waste)
    
    exploration_factor = 0.1 * (std_waste / (avg_waste + 1e-6))
    
    priorities[valid_bins] += exploration_factor
    
    return priorities
```
