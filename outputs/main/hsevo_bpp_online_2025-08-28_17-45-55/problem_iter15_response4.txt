```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A priority function for online bin packing that balances best-fit with
    exploration of less-utilized bins.
    """
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    priorities = np.zeros_like(bins_remain_cap)
    waste = bins_remain_cap[valid_bins] - item

    best_bin_index = np.argmin(waste)
    
    priorities[valid_bins] = 1.0 / (waste + 1e-6)

    exploration_factor = 0.2
    
    for i in range(len(bins_remain_cap)):
        if valid_bins[i]:
            if i != best_bin_index:
                priorities[i] += exploration_factor * np.random.rand()
            else:
                priorities[i] += exploration_factor * 0.2 * np.random.rand()

    
    return priorities
```
