```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A priority function for online bin packing that dynamically adjusts exploration vs. exploitation.
    It combines best-fit, worst-fit, and a dynamic exploration boost.
    """
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    priorities = np.zeros_like(bins_remain_cap)
    
    waste = bins_remain_cap[valid_bins] - item
    best_bin_index = np.argmin(waste)
    worst_bin_index = np.argmax(waste)

    priorities[valid_bins] = 0.5 * (1 / (1 + np.exp(-waste))) + 0.5 * (waste / np.max(waste))
    
    exploration_boost = 0.1
    
    
    
    if np.random.rand() < exploration_boost:
        
        priorities[valid_bins] = 0.8 * priorities[valid_bins] + 0.2 * (1 / (np.arange(1, len(valid_bins) + 1)))
        

    priorities[np.where(valid_bins)[0][best_bin_index]] += 0.1
    priorities[np.where(valid_bins)[0][worst_bin_index]] -= 0.05
    
    return priorities
```
