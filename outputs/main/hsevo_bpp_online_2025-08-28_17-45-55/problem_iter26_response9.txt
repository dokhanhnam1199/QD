```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with time-dependent exploration bonus for improved bin packing."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    best_bin_index = np.argmin(waste)
    time_step = np.sum(bins_remain_cap > 0)
    exploration_bonus_factor = 0.1
    exploration_bonus = exploration_bonus_factor * np.exp(-time_step / n_bins)

    priorities[valid_bins] = -waste
    priorities[np.where(valid_bins)[0][best_bin_index]] += 1.0 + exploration_bonus

    return priorities
```
