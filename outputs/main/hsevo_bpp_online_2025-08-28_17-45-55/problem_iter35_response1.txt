```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with modulated sigmoid scaling based on waste standard deviation and exploration bonus."""
    n_bins = len(bins_remain_cap)
    priorities = np.zeros(n_bins)
    valid_bins = bins_remain_cap >= item

    if not np.any(valid_bins):
        return priorities

    waste = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = 1 / (1 + np.exp(-waste * 1.0))
    
    if len(waste) > 0:
        std_waste = np.std(waste)
        mean_waste = np.mean(waste)
        exploration_bonus = 0.1 * np.exp(-std_waste / (mean_waste if mean_waste > 0 else 1e-6))
        best_bin_index = np.argmin(waste)
        priorities[valid_bins[best_bin_index]] += exploration_bonus

    return priorities
```
