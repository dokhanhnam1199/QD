```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    A priority function for online bin packing that combines best-fit,
    worst-fit, and a dynamic exploration factor.
    """
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.zeros_like(bins_remain_cap)

    remaining_capacities = bins_remain_cap[valid_bins]
    n_valid_bins = len(remaining_capacities)

    best_fit_score = 1.0 / (remaining_capacities - item + 1e-6)
    worst_fit_score = remaining_capacities
    
    exploration_factor = np.random.uniform(0.0, 0.2)
    
    priorities = np.zeros_like(bins_remain_cap)
    
    
    combined_score = (0.6 * best_fit_score + 0.4 * worst_fit_score) * (1 + exploration_factor)
    
    priorities[valid_bins] = combined_score
    
    return priorities
```
