```python
import numpy as np

sigmoid_scale = 1.0
best_bin_boost = 1.0

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best-fit with dynamic modulation based on bin capacity std deviation."""
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.any(valid_bins):
        waste = bins_remain_cap[valid_bins] - item
        std_dev = np.std(bins_remain_cap[valid_bins])
        
        modulated_waste = waste / (std_dev + 1e-6)
        
        sigmoid_scaled_waste = 1 / (1 + np.exp(-modulated_waste * sigmoid_scale))
        priorities[valid_bins] = sigmoid_scaled_waste
        
        best_bin_index = np.argmin(waste)
        priorities[np.where(valid_bins)[0][best_bin_index]] += best_bin_boost
    return priorities
```
