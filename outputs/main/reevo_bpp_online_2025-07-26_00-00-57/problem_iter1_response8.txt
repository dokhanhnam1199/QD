```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This implementation considers both the remaining capacity and the number of times a bin has close-to-full capacity.
    Priorities are higher for bins that can accommodate the item and have more remaining capacity, 
    and lower for bins that are nearly full.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate feasibility (bin can accommodate the item)
    feasibility = (bins_remain_cap >= item).astype(float)
    
    # Penalize bins that have less remaining capacity
    capacity_preference = bins_remain_cap / np.max(bins_remain_cap)
    
    # priority score is a combination of feasibility and capacity preference
    priority_scores = feasibility * capacity_preference
    
    return priority_scores
```
