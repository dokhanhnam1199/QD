```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:

    """Returns priority with which we want to add item to each bin.

    This implementation prioritizes bins based on remaining capacity, assigns a
    very low penalty to bins that can't fit the item, and ensures that feasible
    bins have positive priority scores.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Penalty for bins with less remaining capacity than the item (can't fit the item)
    penalties = (bins_remain_cap < item) * -np.inf
    
    # Calculate priority: linearly based on remaining capacity
    priority = bins_remain_cap
    
    # Apply penalties to bins where the item can't be placed
    priority += penalties
    
    return priority
```
