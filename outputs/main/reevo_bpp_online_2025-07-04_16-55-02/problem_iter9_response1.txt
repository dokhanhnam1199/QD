```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    bin_size = bins_remain_cap.max() # Assuming all bins have same capacity

    # 1. Feasibility: Only consider bins where the item fits.
    feasible_bins = bins_remain_cap >= item

    # 2. Infeasibility penalty: Set priority to -inf for infeasible bins
    priorities[~feasible_bins] = -np.inf

    # Only calculate priorities for feasible bins
    if np.any(feasible_bins):
        # 3. Waste minimization: Prioritize bins with smallest remaining capacity *after* placing the item
        post_fill_levels = bins_remain_cap[feasible_bins] - item
        normalized_waste = post_fill_levels / bin_size
        priorities[feasible_bins] = -normalized_waste  # Invert waste to make it a priority.

        # 4. Bonus for near-full bins: Incentivize tight packing
        near_full_threshold = 0.1
        near_full_bonus = 1
        near_full_bins = (post_fill_levels >= 0) & (post_fill_levels <= (bin_size * near_full_threshold))
        priorities[feasible_bins][near_full_bins] += near_full_bonus

        # 5. Penalize bins that would have too little remaining capacity, to consolidate items.
        too_little_threshold = 0.2
        too_little_penalty = -0.5
        too_little_bins = (post_fill_levels > 0) & (post_fill_levels <= (bin_size * too_little_threshold))
        priorities[feasible_bins][too_little_bins] += too_little_penalty
    else:
        # If no feasible bin, spread the load if possible or indicate total failure
        priorities = np.full_like(priorities, -np.inf) # If no feasible bin, all should be -inf
        return priorities # No feasible solution

    return priorities
```
