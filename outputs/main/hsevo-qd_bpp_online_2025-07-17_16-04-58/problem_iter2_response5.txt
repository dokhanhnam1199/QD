```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste and bin utilization.
    Favors bins with less waste and high utilization."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Heuristic 1: Perfect fit bonus (minimize wasted space)
    waste = bins_remain_cap - item
    perfect_fit_bonus = np.exp(-np.abs(waste) / (item + 0.0001))

    # Heuristic 2: Infeasibility penalty
    can_fit = bins_remain_cap >= item
    priorities = np.where(can_fit, perfect_fit_bonus, -np.inf)

    # Heuristic 3: Prefer bins that are already somewhat full
    space_utilization = (1 - bins_remain_cap)
    priorities = priorities + 0.1 * space_utilization # weight it

    return priorities
```
