```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on remaining capacity, waste, and tunability."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return -np.inf * np.ones_like(bins_remain_cap)
    
    # Waste-based priority
    waste = bins_remain_cap - item
    priorities[feasible_bins] = -waste[feasible_bins]

    # Compactness bonus. Prefer bins that result in less remaining space
    # after placing the item.  Helps to fill up bins more completely.
    fill_ratio = item / bins_remain_cap
    priorities[feasible_bins] += fill_ratio[feasible_bins]
        
    return priorities
```
