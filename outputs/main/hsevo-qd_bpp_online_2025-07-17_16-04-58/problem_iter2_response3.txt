```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines feasibility, target utilization, and balanced usage."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    cannot_fit = bins_remain_cap < item
    priorities[cannot_fit] = -np.inf

    space_utilization = item / bins_remain_cap
    space_utilization[cannot_fit] = 0

    fit_priority = np.exp(-np.abs(space_utilization - 0.8))

    normalized_capacities = bins_remain_cap / np.max(bins_remain_cap)
    exploration_bonus = 0.1 * normalized_capacities

    priorities = fit_priority + exploration_bonus
    return priorities
```
