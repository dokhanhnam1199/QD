```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins considering feasibility, waste, and fill percentage,
    with small bin penalty."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item
    
    if not np.any(feasible_bins):
        return priorities

    # Base priority: negative wasted space
    wasted_space = bins_remain_cap[feasible_bins] - item
    priorities[feasible_bins] = -wasted_space

    # Fill percentage bonus
    fill_percentage = item / bins_remain_cap[feasible_bins]
    priorities[feasible_bins] += 0.5 * fill_percentage

    # Small capacity bin penalty
    small_capacity_bins = bins_remain_cap < 0.2
    priorities[small_capacity_bins] -= 2.0

    return priorities
```
