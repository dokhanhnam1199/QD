```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Hybrid heuristic: Waste minimization + almost full bonus."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return priorities

    wasted_space = bins_remain_cap[feasible_bins] - item

    # Prioritize bins with less wasted space
    priorities[feasible_bins] = 1.0 / (wasted_space + 0.00001)

    # Almost full bonus
    almost_full_threshold = 0.1
    almost_full_bins = feasible_bins & (bins_remain_cap < item + almost_full_threshold * item)
    priorities[almost_full_bins] += 3.0

    return priorities
```
