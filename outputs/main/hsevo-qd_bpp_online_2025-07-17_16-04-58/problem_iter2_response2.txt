```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins: avoids infeasibility, minimizes waste, considers fullness."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    infeasible_bins = bins_remain_cap < item
    priorities[infeasible_bins] = -np.inf

    feasible_bins = ~infeasible_bins
    wasted_space = bins_remain_cap[feasible_bins] - item
    priorities[feasible_bins] = -wasted_space # Lower waste is better

    # Encourage filling: slightly prioritize bins that are already somewhat full
    fullness_factor = 1.0 / (bins_remain_cap[feasible_bins] + 1e-9)
    priorities[feasible_bins] += 0.1 * fullness_factor

    return priorities
```
