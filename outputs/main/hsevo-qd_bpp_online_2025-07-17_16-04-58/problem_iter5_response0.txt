```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, target_capacity_fraction: float = 0.75) -> np.ndarray:
    """Prioritizes bins based on waste, target capacity, and feasibility."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return -np.inf * np.ones_like(bins_remain_cap)

    # Waste: Smaller remaining capacity after placement is better
    remaining_capacity_after_placement = bins_remain_cap - item
    waste = np.abs(remaining_capacity_after_placement)
    priorities[feasible_bins] += -waste[feasible_bins]

    # Target Capacity: Prioritize bins closer to target capacity after placement
    target_capacity = item * target_capacity_fraction
    capacity_difference = np.abs(remaining_capacity_after_placement - target_capacity)
    priorities[feasible_bins] += -capacity_difference[feasible_bins]
    
    return priorities
```
