```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Calculates bin priorities considering target capacity and fullness."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return priorities

    remaining_capacity = bins_remain_cap - item
    remaining_capacity[remaining_capacity < 0] = np.inf

    target_capacity = 0.1
    capacity_diff = np.abs(remaining_capacity - target_capacity)

    priorities[feasible_bins] = -capacity_diff[feasible_bins]

    almost_full_threshold = 0.05
    almost_full_bins = feasible_bins & (bins_remain_cap < item + almost_full_threshold * item)
    priorities[almost_full_bins] += 10.0

    small_capacity_threshold = 0.25
    small_capacity_bins = feasible_bins & (bins_remain_cap < small_capacity_threshold)
    priorities[small_capacity_bins] -= 5.0

    nearly_empty_threshold = 0.9
    nearly_empty_bins = feasible_bins & (bins_remain_cap > nearly_empty_threshold)
    priorities[nearly_empty_bins] += 2.0

    return priorities
```
