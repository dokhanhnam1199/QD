```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on feasibility, waste, and item/bin ratio."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    infeasible_bins = bins_remain_cap < item
    priorities[infeasible_bins] = -np.inf

    feasible_bins = ~infeasible_bins
    wasted_space = bins_remain_cap[feasible_bins] - item
    priorities[feasible_bins] = -wasted_space

    # Item/bin ratio to encourage tighter fits
    ratios = item / bins_remain_cap[feasible_bins]
    priorities[feasible_bins] += 0.1 * ratios # Tunable weight

    return priorities
```
