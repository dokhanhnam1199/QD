```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Penalty for remaining space discrepancy between bins
    avg_remain_cap = np.mean(bins_remain_cap)
    remain_space_discrepancy = np.abs(bins_remain_cap - avg_remain_cap)
    
    # Priority for each bin: Remaining capacity minus a factor of remaining space discrepancy
    priority_score = bins_remain_cap - 0.1 * remain_space_discrepancy
    
    # Penalty for exceeding bin capacity if item is added
    penalty = np.where(bins_remain_cap - item < 0, np.inf, 0)
    
    # Final priority score
    return priority_score - penalty
```
