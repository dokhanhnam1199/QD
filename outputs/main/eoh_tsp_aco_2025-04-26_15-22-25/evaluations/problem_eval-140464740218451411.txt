import numpy as np

def heuristics_v2(distance_matrix):
  """{This algorithm generates a heuristic matrix based on the exponential of the negative of the distances, normalized by the row-wise maximum distance.}"""
  n = distance_matrix.shape[0]
  heuristics_matrix = np.zeros_like(distance_matrix, dtype=float)

  for i in range(n):
    max_distance = np.max(distance_matrix[i, :])
    for j in range(n):
      if i != j:
        heuristics_matrix[i, j] = np.exp(-distance_matrix[i, j] / max_distance)
      else:
        heuristics_matrix[i, j] = 0
  return heuristics_matrix
