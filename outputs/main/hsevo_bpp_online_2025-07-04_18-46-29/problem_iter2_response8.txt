```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fit score and waste penalty with perfect/next fit."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    perfect_fit = np.isclose(bins_remain_cap, item)
    priorities[perfect_fit] = 1000

    if len(bins_remain_cap) > 0 and bins_remain_cap[0] >= item and not perfect_fit[0]:
        priorities[0] = 500

    feasible_bins = bins_remain_cap >= item

    if not np.any(feasible_bins):
        return priorities

    fit_scores = 1 - np.abs(bins_remain_cap - item) / np.max(bins_remain_cap)
    waste = bins_remain_cap - item
    waste_penalty = np.zeros_like(waste, dtype=float)
    waste_penalty[waste > 0] = (waste[waste > 0] / np.max(bins_remain_cap))**2

    priorities[feasible_bins] = fit_scores[feasible_bins] - waste_penalty[feasible_bins]

    priorities[~feasible_bins] = -1e9
    return priorities
```
