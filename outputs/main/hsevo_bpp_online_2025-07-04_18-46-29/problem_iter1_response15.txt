```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Higher priority means we want to add the item into that bin first.

    This function considers a combination of factors to determine bin priority:
    1. Remaining capacity relative to item size. Bins that have remaining
       capacity close to item size are prioritized to avoid excessive fragmentation.
    2. Avoid bins that are almost full (to prevent failed placements later).
    3. If no bin is large enough, give a uniform small negative priority,
       so that we prefer opening a new bin instead of a random assignment.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Calculate the space wasted if the item were added to the bin
    waste = bins_remain_cap - item

    # Identify bins where the item fits
    valid_bins = bins_remain_cap >= item

    if np.any(valid_bins):

        # Prioritize bins where waste is minimized
        priorities[valid_bins] = -np.abs(waste[valid_bins])

        # If some bins are a *very* good fit (waste close to zero), boost those
        close_fit = np.abs(waste[valid_bins]) < 0.1 * item  # Adjust threshold as needed
        priorities[valid_bins][close_fit] += 1  # Add a bonus for good fits.  The magnitude here is key to the behaviour

        # Penalize bins that are very full already
        full_threshold = 0.1 # percentage of bin capacity below which it is considered almost full
        almost_full = bins_remain_cap < (1 + full_threshold) * item
        priorities[almost_full] -= 2  # Strong penalty: Opening new bin likely better
    else:
        #No bin fits: Small negative priority to discourage assigning to a random one
        priorities[:] = -0.0001

    return priorities
```
