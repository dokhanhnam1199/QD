```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    This version prioritizes bins that can accommodate the item with minimal wasted space.
    If no bins can fit the item, it assigns the lowest priority to all bins to signal the need for a new bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    eligible_bins = bins_remain_cap >= item
    if not np.any(eligible_bins):
        return np.full(bins_remain_cap.shape, -np.inf)  # No bin can fit, signal for new bin

    wasted_space = bins_remain_cap - item
    wasted_space[~eligible_bins] = np.inf # Penalize ineligible bins to a huge wasted space

    # Prioritize bins with minimal wasted space among the eligible bins.
    priorities = -wasted_space
    return priorities
```
