```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Inspired by the principle of least action and the warping of spacetime around mass,
    this priority function prioritizes bins whose remaining capacity is "close" to the item size,
    but also penalizes bins that are too full or too empty.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            # A "gravitational" attraction towards bins that can fit the item, stronger when the item
            # is a significant portion of the remaining capacity, but not too large, to encourage efficiency.
            # Avoid division by zero
            if cap == 0:
                priorities[i] = -np.inf  # Very low priority if bin is full (shouldn't happen).
            else:

                # Attraction force. stronger as remaining capacity approaches item size.
                # F = G * m1 * m2 / r^2; G = 1, m1= item, m2 = 1, r = abs(cap-item); or similair forms.
                # A more damped version avoids huge fluctuations
                priority = np.exp(-np.abs(cap - item) / item)  # Gaussian-like attraction. Damps differences.

                # Additional reward for bins with utilization not too close to 1 after placement

                new_cap = cap - item
                new_utilization = 1- (new_cap / 1.0) #Assume a bin of size 1.0;

                #avoid negative capacity
                if new_cap < 0:
                    priority = -np.inf
                else:
                    priority += 0.0*(new_utilization < 0.95) #slight encouragement

                priorities[i] = priority
        else:
            priorities[i] = -np.inf  # Cannot fit. Low priority.

    return priorities
```
