```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Prioritizes bins with sufficient remaining capacity, favoring those with slightly larger capacity than the item size
    to reduce fragmentation. Avoids bins where the item nearly fills the bin.
    Uses a combination of remaining capacity and a "near-fit" bonus/penalty.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    # Capacity check: Disqualify bins that cannot fit the item.
    eligible_bins = bins_remain_cap >= item

    # Base priority: Remaining capacity (higher capacity generally preferred, within reason)
    priorities[eligible_bins] = bins_remain_cap[eligible_bins]

    # Near-fit bonus/penalty: Encourages good fits, discourages almost-full fits
    near_fit_threshold_upper = item * 1.2  # slightly larger
    near_fit_threshold_lower = item * 1.05 # avoid packing if only marginally bigger

    near_fit_bins = (bins_remain_cap >= item) & (bins_remain_cap <= near_fit_threshold_upper) & (bins_remain_cap >= near_fit_threshold_lower)

    nearly_full_bins = (bins_remain_cap >= item) & (bins_remain_cap < item * 1.05)

    priorities[near_fit_bins] += bins_remain_cap[near_fit_bins] #give bonus for near fit.
    priorities[nearly_full_bins] -= (item * 2)  # penalty if item nearly fills bin (creates fragmentation)

    #Very large capacities are not good either. They are penalized.

    large_cap_bins = bins_remain_cap > item * 2
    priorities[large_cap_bins] -= bins_remain_cap[large_cap_bins] * 0.1

    # If no bins can fit, return a low-priority score for all (should not happen in normal usage)
    if not np.any(eligible_bins):
        priorities[:] = -1e9  # Extremely low priority for all if item cannot fit in any bin

    return priorities
```
