```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins by combining fill ratio, best fit, and bin balancing."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    eligible_bins = bins_remain_cap >= item

    if np.any(eligible_bins):
        # Fill Ratio
        fill_ratio = item / bins_remain_cap[eligible_bins]
        priorities[eligible_bins] += fill_ratio

        # Best Fit
        remaining_space = bins_remain_cap[eligible_bins] - item
        priorities[eligible_bins] += np.exp(-remaining_space)

    # Bin Balancing
    bin_capacity_normalized = bins_remain_cap / np.max(bins_remain_cap) if np.max(bins_remain_cap)>0 else np.zeros_like(bins_remain_cap)
    priorities += 0.1*bin_capacity_normalized

    return priorities
```
