import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, too_small_penalty: float = -1026946767.3957253, exponent_multiplier: float = -6.7915984925182205) -> np.ndarray:
    """Combines exponential boost for near-full bins with fill-ratio consideration."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    can_fit = bins_remain_cap >= item
    remaining_space = bins_remain_cap - item
    
    # Exponential boost for near-full, combined with fill ratio.
    fill_ratio = (bins_remain_cap - item) / bins_remain_cap
    priorities = np.where(can_fit, np.exp(exponent_multiplier * (remaining_space/bins_remain_cap)) + (1-fill_ratio), too_small_penalty)

    return priorities
