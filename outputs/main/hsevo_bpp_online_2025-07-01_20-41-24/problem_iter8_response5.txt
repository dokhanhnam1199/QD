```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, fill ratio, and non-linear penalty."""
    waste = bins_remain_cap - item
    priority = np.zeros_like(bins_remain_cap)
    feasible = waste >= 0

    if np.any(feasible):
        fill_ratio = (bins_remain_cap[feasible] - waste[feasible]) / bins_remain_cap[feasible]
        priority[feasible] = fill_ratio * 100

        waste_feasible = waste[feasible]
        priority[feasible] -= np.exp(waste_feasible * 5)  # Non-linear waste penalty
    priority[waste < 0] = -np.inf
    return priority
```
