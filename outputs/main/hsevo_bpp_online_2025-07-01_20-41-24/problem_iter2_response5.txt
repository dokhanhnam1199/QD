```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Hybrid priority: fill ratio, near-full bonus, anti-fragmentation, scaled capacity."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    feasible_bins = bins_remain_cap >= item

    fill_ratio = item / bins_remain_cap
    priorities[feasible_bins] = fill_ratio[feasible_bins]

    almost_full = (bins_remain_cap - item) < 0.1
    priorities[feasible_bins & almost_full] += 0.5

    remainder = bins_remain_cap - item
    priorities[feasible_bins] += (1 - (remainder[feasible_bins] / np.max(bins_remain_cap))) * 0.2

    priorities[feasible_bins] += (item / (bins_remain_cap[feasible_bins] + 0.0001)) * 0.1

    too_small = bins_remain_cap < item
    priorities[too_small] = -np.inf
    
    return priorities
```
