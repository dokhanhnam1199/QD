```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, fill ratio, and bonuses for near-full bins."""

    waste = bins_remain_cap - item
    priority = np.zeros_like(bins_remain_cap)

    # Infeasible bins
    priority[waste < 0] = -np.inf
    feasible = waste >= 0

    if np.any(feasible):
      fill_ratio = (bins_remain_cap[feasible] - waste[feasible]) / bins_remain_cap[feasible]
      priority[feasible] = fill_ratio * 10

      # Exponential bonus for almost full
      almost_full = fill_ratio >= 0.9
      priority[feasible][almost_full] += 2 # Exponential bonus

    return priority
```
