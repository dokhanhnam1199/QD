```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on fill ratio and remaining space."""
    remaining_after_packing = bins_remain_cap - item
    priorities = np.zeros_like(bins_remain_cap)
    
    # Fit check
    fit_mask = remaining_after_packing >= 0
    
    if np.any(fit_mask):
      #Fill ratio for suitable bins
      fill_ratio_after = item / bins_remain_cap[fit_mask]
      priorities[fit_mask] = fill_ratio_after
      #Remaining space affect
      remaining_space = bins_remain_cap[fit_mask] - item
      priorities[fit_mask] = priorities[fit_mask] * (1/(remaining_space + 0.00001))
      #Cap affect
      priorities[fit_mask] = priorities[fit_mask] * bins_remain_cap[fit_mask]
      

    else:
        space_needed = item - bins_remain_cap
        priorities = -space_needed
    return priorities
```
