```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines best aspects of v0 and v1. Fill-based priority, perfect fit bonus, considers initial capacity."""
    priorities = np.full(bins_remain_cap.shape, -np.inf)
    eligible_bins = bins_remain_cap >= item

    if not np.any(eligible_bins):
        return priorities
    
    priorities[eligible_bins] = bins_remain_cap[eligible_bins] - item #Minimizing waste
    
    perfect_fit = bins_remain_cap[eligible_bins] == item
    if np.any(perfect_fit):
        priorities[eligible_bins][perfect_fit] = np.inf #Big bonus for perfect fit.
    
    # Prioritize based on how full the bins would be
    fill_ratio = (bins_remain_cap[eligible_bins] - item) / bins_remain_cap[eligible_bins]
    priorities[eligible_bins] = -fill_ratio #Prioritize higher fill

    return priorities
```
