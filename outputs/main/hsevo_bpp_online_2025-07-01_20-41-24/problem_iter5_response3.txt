```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio, near-full bonus, and anti-fragmentation."""
    feasible_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap, dtype=float)

    if np.any(feasible_bins):
        # Fill ratio priority
        fill_ratio = item / bins_remain_cap[feasible_bins]
        priorities[feasible_bins] = fill_ratio

        # Near-full bonus
        remaining_space = bins_remain_cap[feasible_bins] - item
        almost_full_bonus = np.exp(-5 * remaining_space) #sharper than linear to emphasize near full
        priorities[feasible_bins] += almost_full_bonus

    else:
        # If no bin fits, prioritize bins closest to fitting
        space_needed = item - bins_remain_cap
        priorities = -space_needed #Prioritize smallest need

    return priorities
```
