```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, fill ratio, and near-full bonuses."""

    waste = bins_remain_cap - item
    priority = np.zeros_like(bins_remain_cap)
    priority[waste < 0] = -np.inf

    feasible = waste >= 0
    if np.any(feasible):
        fill_ratio = (bins_remain_cap[feasible] - waste[feasible]) / bins_remain_cap[feasible]
        priority[feasible] = fill_ratio * 100  # Fill ratio priority

        # Near-full bonus, exponential
        near_full = bins_remain_cap[feasible]
        priority[feasible] += np.exp(fill_ratio * 5)

    return priority
```
