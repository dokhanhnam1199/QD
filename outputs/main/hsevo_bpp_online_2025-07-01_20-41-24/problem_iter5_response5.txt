```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines tight fit, capacity awareness, and penalizes near misses."""
    priorities = np.full_like(bins_remain_cap, -np.inf)
    valid_bins = bins_remain_cap >= item

    if np.any(valid_bins):
        priorities[valid_bins] = 0.0
        slack = bins_remain_cap[valid_bins] - item
        priorities[valid_bins] += np.exp(-slack) # Tight fit bonus

        #Capacity awareness
        priorities[valid_bins] += bins_remain_cap[valid_bins]/np.max(bins_remain_cap)

    #big penalty if near misses
    space_needed = item - bins_remain_cap
    priorities[space_needed > 0] -= space_needed[space_needed > 0] * 10

    return priorities
```
