```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio with a bonus for near-full bins."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    can_fit = bins_remain_cap >= item
    too_small_penalty = -1e9

    if not np.any(can_fit):
        space_needed = item - bins_remain_cap
        return -space_needed # Prioritize bins needing least space

    fill_ratio = item / bins_remain_cap
    priorities = np.where(can_fit, fill_ratio, too_small_penalty)

    remaining_space = bins_remain_cap - item
    almost_full_bonus = np.exp(-5 * (remaining_space / bins_remain_cap))
    priorities = np.where(can_fit, priorities + almost_full_bonus, too_small_penalty)

    return priorities
```
