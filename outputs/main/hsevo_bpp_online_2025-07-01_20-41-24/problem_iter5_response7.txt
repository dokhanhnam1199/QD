```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on tight fit and remaining capacity."""
    priorities = np.full(bins_remain_cap.shape, -np.inf)
    valid_bins = bins_remain_cap >= item

    if np.any(valid_bins):
        priorities[valid_bins] = 0.0

        # Tight fit bonus.
        slack = bins_remain_cap[valid_bins] - item
        priorities[valid_bins] += np.exp(-slack)

        # Capacity bonus.
        priorities[valid_bins] += bins_remain_cap[valid_bins] / np.max(bins_remain_cap)
    else:
        # Penalize bins nearly fitting.
        space_needed = item - bins_remain_cap
        priorities = -space_needed * 10

    return priorities
```
