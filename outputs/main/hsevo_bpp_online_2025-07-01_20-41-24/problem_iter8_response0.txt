```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines waste minimization, fill ratio, and almost full bonus."""
    valid_bins = bins_remain_cap >= item
    if not np.any(valid_bins):
        return np.full_like(bins_remain_cap, -np.inf)

    waste = bins_remain_cap - item
    waste[waste < 0] = np.inf

    priority = -waste  # Minimize waste

    fill_ratio = (bins_remain_cap - waste) / bins_remain_cap
    fill_ratio[np.isinf(fill_ratio)] = 0
    priority += fill_ratio * 100  # Maximize fill ratio

    almost_full = (bins_remain_cap - item) / bins_remain_cap > 0.9
    priority += almost_full * 50 # Bonus for almost full bins

    priority[bins_remain_cap < item] = -np.inf
    return priority
```
