```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines gravitational force and almost-full heuristics."""

    gravitational_constant = 1.0
    distances = np.abs(bins_remain_cap - item)
    forces = (gravitational_constant * bins_remain_cap) / (distances + 0.0001)**2
    penalty = np.where(item > bins_remain_cap, -np.inf, 0)
    priorities = forces + penalty

    #Almost Full heuristic
    feasible_bins = bins_remain_cap >= item
    if np.any(feasible_bins):
      almost_full = np.where(feasible_bins)[0]
      priorities[almost_full] += 1.0 / bins_remain_cap[almost_full]

    return priorities
```
