{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Combines fill ratio, near-full bonus, and anti-fragmentation. Avoids overly complex functions.\"\"\"\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n    feasible_bins = bins_remain_cap >= item\n\n    if not np.any(feasible_bins):\n        return np.full_like(bins_remain_cap, -np.inf)\n\n    fill_ratio = item / bins_remain_cap\n    priorities[feasible_bins] = fill_ratio[feasible_bins]\n\n    almost_full = (bins_remain_cap - item) < 0.1\n    priorities[feasible_bins & almost_full] += 0.3\n\n    remainder = bins_remain_cap - item\n    priorities[feasible_bins] += (1 - (remainder[feasible_bins] / np.max(bins_remain_cap))) * 0.1\n\n    priority_copy = priorities.copy()\n    priority_copy[bins_remain_cap < item] = -np.inf # Ensure only valid bins return from calculation\n    return priority_copy\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}