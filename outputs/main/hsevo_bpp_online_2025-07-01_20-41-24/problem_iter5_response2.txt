```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Combines fill ratio, perfect fit bonus, and capacity consideration."""
    priority = np.zeros_like(bins_remain_cap)
    waste = bins_remain_cap - item
    
    # Infeasible bins get -inf priority
    priority[waste < 0] = -np.inf
    
    # Fill ratio priority
    fit_mask = waste >= 0
    if np.any(fit_mask):
        fill_ratio = item / bins_remain_cap[fit_mask]
        priority[fit_mask] = fill_ratio

        # Perfect fit bonus
        perfect_fit_mask = np.abs(waste[fit_mask]) < 1e-6
        priority[fit_mask][perfect_fit_mask] += 1 # Significant bonus

        # Capacity consideration: bigger bins better
        priority[fit_mask] *= bins_remain_cap[fit_mask]
        
    return priority
```
