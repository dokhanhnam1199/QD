```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Worst Fit strategy.

    The Worst Fit strategy prioritizes bins that have the most remaining capacity,
    as this leaves more space for potentially larger future items. If an item
    does not fit in a bin, its priority is set to negative infinity to exclude it.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of remaining capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Initialize priorities with a very low value to represent infeasible bins
    priorities = np.full_like(bins_remain_cap, -np.inf)

    # Identify bins where the item can fit
    fit_mask = bins_remain_cap >= item

    # For bins where the item fits, the priority is the remaining capacity (Worst Fit)
    priorities[fit_mask] = bins_remain_cap[fit_mask]

    return priorities
```
