{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Combines weighted utilization factor, remaining capacity, and a sophisticated tie-breaker for online Bin Packing Problem.\n    \"\"\"\n    # Normalize remaining capacity\n    norm_remain_cap = bins_remain_cap / np.max(bins_remain_cap)\n    epsilon = 1e-6  # Avoid division by zero\n    \n    # Weighted utilization factor considering item size and bin capacity\n    utilization_factor = (bins_remain_cap - item) / np.maximum(bins_remain_cap, epsilon)\n    weighted_utilization = np.where(bins_remain_cap >= item, -np.abs(utilization_factor) * 0.7 + norm_remain_cap * 0.3, -np.inf)\n    \n    # Sophisticated tie-breaker based on bin remaining capacity and index\n    num_bins = len(bins_remain_cap)\n    tie_breaker_coef = 1e-3  # Coefficient for tie-breaker\n    tie_breaker = (bins_remain_cap >= item) * ((np.log(num_bins / (1 + np.arange(num_bins))) * 0.5 + \n                                                (bins_remain_cap / (item + epsilon)) * 0.5) * tie_breaker_coef)\n    \n    # Combine weighted utilization with tie-breaker and a small random noise for further tie-breaking\n    priority = np.where(weighted_utilization != -np.inf, weighted_utilization + tie_breaker + np.random.uniform(0, 1e-6, size=num_bins), -np.inf)\n    \n    return priority\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}