```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for each bin. 
    Prioritizes bins with just enough capacity for the item and breaks ties with random noise.
    """
    # Check if the item can fit into the bin and prioritize bins with less remaining capacity after addition
    valid_bins = (bins_remain_cap >= item).astype(float)
    priority = valid_bins * (-(bins_remain_cap - item))  # Prioritize bins that are just enough for the item
    
    # Add a small random noise to break ties
    priority += np.random.rand(*priority.shape) * 1e-6
    
    return priority
```
