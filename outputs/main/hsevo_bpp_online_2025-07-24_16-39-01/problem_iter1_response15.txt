```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This function implements the First-Fit decreasing heuristic with a twist.
    It prioritizes bins that have just enough capacity for the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # The score is high when the bin has just enough capacity for the item
    priority_scores = np.where(bins_remain_cap >= item, bins_remain_cap - item, np.inf)
    # Use the negative of the scores to get the bin with the highest priority (i.e., the one with the least remaining capacity)
    priority_scores = -priority_scores
    
    return priority_scores
```
