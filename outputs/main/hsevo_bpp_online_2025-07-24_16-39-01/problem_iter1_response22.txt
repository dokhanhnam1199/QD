```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    The priority is calculated based on the remaining capacity of each bin.
    A bin with a remaining capacity closest to the item size will have the highest priority.
    If a bin does not have enough capacity to hold the item, its priority is set to negative infinity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # The score is the negative of the difference between the remaining capacity and the item size
    # This way, a bin with a remaining capacity closest to the item size will have the highest score
    priority_scores = -np.abs(bins_remain_cap - item)
    
    # Set the priority score to negative infinity if the bin does not have enough capacity
    priority_scores[bins_remain_cap < item] = -np.inf
    
    return priority_scores
```
