```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    The priority is calculated based on the remaining capacity of each bin.
    Bins with remaining capacity closest to the item size are given higher priority.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the item size and the remaining capacity of each bin
    diff = np.abs(bins_remain_cap - item)
    
    # Bins that can fit the item should have higher priority
    mask = bins_remain_cap >= item
    
    # Assign high priority to bins that can fit the item and have remaining capacity closest to the item size
    priority = np.where(mask, 1 / (1 + diff), 0)
    
    return priority
```
