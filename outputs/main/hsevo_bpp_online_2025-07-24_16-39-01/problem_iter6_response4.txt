```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This function implements a hybrid heuristic that combines the benefits of 
    First-Fit decreasing and Best-Fit heuristics. It prioritizes bins that have 
    just enough capacity for the item and also considers the number of bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # We want to prioritize bins that have just enough capacity for the item
    # So, we use a combination of the negative of the remaining capacity after 
    # adding the item and the number of non-empty bins
    priority_scores = np.where(bins_remain_cap >= item, 
                               -(bins_remain_cap - item) + 0.1 * (bins_remain_cap != 1.0), 
                               -np.inf)
    
    return priority_scores
```
