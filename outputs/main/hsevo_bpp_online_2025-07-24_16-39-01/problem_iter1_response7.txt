```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Check if the item can fit into the bin
    valid_bins = (bins_remain_cap >= item).astype(float)
    
    # Give higher priority to bins with less remaining capacity that can still fit the item
    priority = valid_bins * (1 - bins_remain_cap / np.max(bins_remain_cap))
    
    # Add a small random noise to break ties
    priority += np.random.rand(*priority.shape) * 1e-6
    
    return priority
```
