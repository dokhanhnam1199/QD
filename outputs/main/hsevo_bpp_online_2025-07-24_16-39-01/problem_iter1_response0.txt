```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This function implements the First-Fit decreasing heuristic with a twist.
    It prioritizes bins that have just enough capacity for the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # We want to prioritize bins that have just enough capacity for the item
    # So, we use the negative of the remaining capacity after adding the item
    # If the item doesn't fit, the priority score is negative infinity
    priority_scores = np.where(bins_remain_cap >= item, -(bins_remain_cap - item), -np.inf)
    
    # To avoid division by zero and make the score more meaningful, we can add a small value to the denominator
    # However, in this case, it's not necessary because we're not using the remaining capacity as a denominator
    
    return priority_scores
```
