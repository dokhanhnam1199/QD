```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority score for each bin by combining the benefits of 
    prioritizing bins with just enough capacity and breaking ties.
    """
    # Prioritize bins with less remaining capacity after addition, with a small noise to break ties
    priority = np.where(bins_remain_cap >= item, 
                        -(bins_remain_cap - item) + 1e-6 * np.random.rand(len(bins_remain_cap)), 
                        -np.inf)
    return priority
```
