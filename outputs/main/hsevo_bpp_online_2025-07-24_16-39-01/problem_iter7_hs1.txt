import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray, 
                noise_weight: float = 7.518954532062054e-05) -> np.ndarray:
    """
    Returns priority scores for each bin. 
    Prioritizes bins with just enough capacity and breaks ties with random noise.
    """
    # Check if the item can fit into the bin
    valid_bins = (bins_remain_cap >= item).astype(float)
    
    # Prioritize bins that are just enough for the item
    priority = valid_bins * (-(bins_remain_cap - item))
    
    # Add a small random noise to break ties, only for valid bins
    priority += valid_bins * np.random.rand(*priority.shape) * noise_weight
    
    return priority
