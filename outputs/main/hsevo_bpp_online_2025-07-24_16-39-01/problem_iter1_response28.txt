```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough 
    remaining capacity to fit the item. It discourages bins that would be left 
    with a lot of remaining capacity after the item is added, as well as bins 
    that are too small to fit the item.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Create a mask to avoid division by zero and to ignore bins that are too small
    mask = bins_remain_cap >= item
    
    # Initialize priority scores with negative infinity for bins that are too small
    priority_scores = np.full_like(bins_remain_cap, -np.inf)
    
    # For bins that can fit the item, calculate the priority score
    # The score is higher when the remaining capacity after adding the item is smaller
    priority_scores[mask] = 1 - (bins_remain_cap[mask] - item) / bins_remain_cap[mask]
    
    return priority_scores
```
