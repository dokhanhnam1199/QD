```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.
    
    This function implements the First-Fit decreasing heuristic with a twist. 
    It gives higher priority to bins that have enough capacity for the item 
    and are most full. If a bin does not have enough capacity, its priority is 
    set to negative infinity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the priority score for each bin
    # Priority is high when the bin has just enough capacity for the item
    # and is most full, i.e., has the least remaining capacity
    priority = np.where(bins_remain_cap >= item, 
                        # The more full the bin is, the higher the priority
                        1 / (bins_remain_cap + 1e-6), 
                        # If the bin does not have enough capacity, set priority to negative infinity
                        -np.inf)
    
    return priority
```
