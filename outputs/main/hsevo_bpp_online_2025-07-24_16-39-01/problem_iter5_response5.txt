```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for adding an item to each bin.
    Prioritizes bins with just enough capacity, considering remaining capacity and 'fullness'.
    """
    # Calculate priority score for bins that can accommodate the item
    mask = bins_remain_cap >= item
    priority = np.where(mask, 
                        -(bins_remain_cap - item) / (bins_remain_cap + 1e-6) + 1 / (bins_remain_cap + 1e-6), 
                        -np.inf)
    # Add a small random noise to break ties
    priority[mask] += np.random.uniform(0, 1e-6, np.sum(mask))
    return priority
```
