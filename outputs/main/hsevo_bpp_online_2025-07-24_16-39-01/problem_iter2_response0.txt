```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority scores for adding an item to each bin.
    
    Combines elements of First-Fit decreasing heuristic and score normalization.
    Prioritizes bins with just enough capacity, adding noise to break ties.
    """
    # Calculate priority scores for bins with enough capacity
    mask = bins_remain_cap >= item
    priority_scores = np.full_like(bins_remain_cap, -np.inf)
    priority_scores[mask] = -(bins_remain_cap[mask] - item) + np.random.uniform(0, 1e-6, size=np.sum(mask))  # Add small noise
    
    return priority_scores
```
