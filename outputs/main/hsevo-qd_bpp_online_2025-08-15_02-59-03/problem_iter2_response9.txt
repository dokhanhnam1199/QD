```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins with the tightest fit, favoring exact fits.
    Combines the exact-fit preference of heuristic 6 with the general
    tight-fit prioritization of heuristic 1.
    """
    priorities = np.full_like(bins_remain_cap, -np.inf)
    can_fit_mask = bins_remain_cap >= item
    
    fitting_bins_remain_cap = bins_remain_cap[can_fit_mask]
    
    if fitting_bins_remain_cap.size > 0:
        gaps = fitting_bins_remain_cap - item
        
        # Prioritize exact fits (gap is 0)
        exact_fit_mask = (gaps == 0)
        if np.any(exact_fit_mask):
            priorities[can_fit_mask][exact_fit_mask] = 1.0
        else:
            # Otherwise, prioritize tightest fit (smallest positive gap)
            min_gap = np.min(gaps)
            priorities[can_fit_mask] = -gaps + min_gap + 1e-9 # Add small epsilon for stability if needed
            
    return priorities
```
