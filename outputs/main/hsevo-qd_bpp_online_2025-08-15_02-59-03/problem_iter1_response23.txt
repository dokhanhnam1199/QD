```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i in range(len(bins_remain_cap)):
        if bins_remain_cap[i] >= item:
            remaining_capacity = bins_remain_cap[i]
            if remaining_capacity - item == 0:
                priorities[i] = 1.0 / (remaining_capacity - item + 1e-9)
            else:
                priorities[i] = 1.0 / (remaining_capacity - item)
    return priorities
```
