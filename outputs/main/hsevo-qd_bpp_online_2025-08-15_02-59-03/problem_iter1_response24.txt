```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Exact Fit First heuristic: Prioritize bins where the item fits exactly.
    If no exact fit, then prioritize the bin with the smallest remaining capacity
    that can still accommodate the item (Best Fit).
    """
    priorities = np.zeros_like(bins_remain_cap)
    
    exact_fit_indices = np.where(bins_remain_cap == item)[0]
    
    if len(exact_fit_indices) > 0:
        priorities[exact_fit_indices] = 1.0
    else:
        possible_bins = np.where(bins_remain_cap >= item)[0]
        if len(possible_bins) > 0:
            relevant_capacities = bins_remain_cap[possible_bins]
            best_fit_index_in_possible = np.argmin(relevant_capacities)
            best_fit_original_index = possible_bins[best_fit_index_in_possible]
            priorities[best_fit_original_index] = 1.0
    
    return priorities
```
