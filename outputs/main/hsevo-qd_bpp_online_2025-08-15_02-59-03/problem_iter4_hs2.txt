import numpy as np
import random
import math
import scipy
import torch
def priority_v2(item: float, bins_remain_cap: np.ndarray, priority_value: float = 0.9045022862020285) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Best Fit strategy."""
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins_mask = bins_remain_cap >= item
    if np.any(suitable_bins_mask):
        remaining_capacities = bins_remain_cap[suitable_bins_mask] - item
        min_remaining_capacity = np.min(remaining_capacities)
        best_fit_mask = (bins_remain_cap >= item) & (bins_remain_cap - item == min_remaining_capacity)
        priorities[best_fit_mask] = priority_value
    return priorities
