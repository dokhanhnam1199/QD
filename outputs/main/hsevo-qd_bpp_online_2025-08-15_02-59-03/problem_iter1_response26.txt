```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    possible_bins = bins_remain_cap >= item
    priorities = np.zeros_like(bins_remain_cap)
    
    available_capacities = bins_remain_cap[possible_bins]
    
    if available_capacities.size > 0:
        
        fitted_capacities = available_capacities - item
        
        
        scaled_capacities = fitted_capacities / np.max(available_capacities)
        
        
        priorities[possible_bins] = 1 / (1 + np.exp(-5 * (scaled_capacities - 0.5)))
        
        
        if np.any(fitted_capacities == 0):
            priorities[possible_bins][fitted_capacities == 0] = 1.0
            
    return priorities
```
