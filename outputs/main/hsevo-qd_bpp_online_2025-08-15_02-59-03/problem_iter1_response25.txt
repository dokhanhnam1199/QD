```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    valid_bins_mask = bins_remain_cap >= item
    valid_bins_caps = bins_remain_cap[valid_bins_bins_mask]
    
    if not valid_bins_caps.size:
        return np.zeros_like(bins_remain_cap)
        
    inverse_distances = 1 / (bins_remain_cap[valid_bins_mask] - item + 1e-9)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[valid_bins_mask] = inverse_distances
    
    return priorities
```
