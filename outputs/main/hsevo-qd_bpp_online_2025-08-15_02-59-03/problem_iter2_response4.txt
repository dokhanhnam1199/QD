```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Prioritizes bins with the tightest fit, giving a bonus to exact fits.
    Combines Best Fit with an Exact Fit preference.
    """
    priorities = np.zeros_like(bins_remain_cap)
    suitable_bins_mask = bins_remain_cap >= item

    if not np.any(suitable_bins_mask):
        return priorities

    fitting_bins_remain_cap = bins_remain_cap[suitable_bins_mask]
    gaps = fitting_bins_remain_cap - item

    # Strong preference for exact fits
    exact_fit_mask = gaps == 0
    if np.any(exact_fit_mask):
        priorities[suitable_bins_mask][exact_fit_mask] = 1.0
    else:
        # Otherwise, use the "best fit" (smallest positive gap)
        min_gap = np.min(gaps)
        best_fit_mask = gaps == min_gap
        priorities[suitable_bins_mask][best_fit_mask] = 0.5 # Slightly lower priority than exact fit

    return priorities
```
