```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    fits = bins_remain_cap >= item
    valid_bins_cap = bins_remain_cap[fits]
    if valid_bins_cap.size == 0:
        return np.zeros_like(bins_remain_cap)

    
    diffs = valid_bins_cap - item
    
    
    scaled_diffs = (diffs - np.min(diffs)) / (np.max(diffs) - np.min(diffs) + 1e-9)

    
    priorities = 1 / (1 + np.exp(-10 * (scaled_diffs - 0.5)))

    
    final_priorities = np.zeros_like(bins_remain_cap, dtype=float)
    final_priorities[fits] = priorities
    
    return final_priorities
```
