```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    available_bins_mask = bins_remain_cap >= item
    priorities = np.full_like(bins_remain_cap, -np.inf)
    
    if np.any(available_bins_mask):
        available_bins_cap = bins_remain_cap[available_bins_mask]
        
        differences = available_bins_cap - item
        
        max_diff_index = np.argmax(differences)
        
        priorities[available_bins_mask][max_diff_index] = 1.0
        
    return priorities
```
