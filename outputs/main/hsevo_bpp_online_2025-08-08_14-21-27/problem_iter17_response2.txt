```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Combines a refined Best Fit approach with a penalty for leaving excessive
    remaining capacity, using a multiplicative scoring for synergy.
    """
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    fittable_bins_mask = bins_remain_cap >= item

    if not np.any(fittable_bins_mask):
        return priorities

    fittable_bins_remain_cap = bins_remain_cap[fittable_bins_mask]

    # Component 1: Best Fit - Prioritize bins that leave minimal remaining space.
    # This is crucial for immediate packing efficiency.
    # Using 1/(difference + epsilon) to favor smaller differences.
    best_fit_score = 1.0 / (fittable_bins_remain_cap - item + 1e-9)

    # Component 2: Penalty for Large Leftover Space - Discourage packing into
    # bins that leave significantly more capacity than needed. This aims to
    # preserve larger spaces for potentially larger future items.
    # We use a logarithmic penalty: smaller leftovers are better, but the
    # penalty grows slower for larger leftovers, avoiding over-penalization.
    # The +1 in log1p handles cases where remaining capacity after fit is 0.
    leftover_space_penalty = np.log1p(fittable_bins_remain_cap - item)

    # Combine scores multiplicatively to ensure bins perform well on both criteria.
    # We want to maximize the best_fit_score and minimize the leftover_space_penalty.
    # Therefore, we divide by (1 + penalty) to get a score that is higher when
    # the penalty is lower.
    combined_scores = best_fit_score / (1.0 + leftover_space_penalty)

    # Normalize priorities to a [0, 1] range for consistent selection.
    max_score = np.max(combined_scores)
    if max_score > 1e-9:
        priorities[fittable_bins_mask] = combined_scores / max_score
    else:
        # If all calculated scores are negligible, assign a small uniform priority
        # to all fittable bins to ensure at least one is chosen if available.
        priorities[fittable_bins_mask] = 0.1

    return priorities
```
