```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins_mask = bins_remain_cap >= item
    
    if np.any(valid_bins_mask):
        remaining_capacities = bins_remain_cap[valid_bins_mask]
        
        smallest_valid_remaining_capacity = np.min(remaining_capacities)
        
        closest_fit_mask = (remaining_capacities - item) == 0
        
        if np.any(closest_fit_mask):
            priorities[valid_bins_mask][closest_fit_mask] = 2
        else:
            priorities[valid_bins_mask] = 1 - (remaining_capacities / (remaining_capacities + item)) 
            
            bins_with_smallest_capacity_mask = (remaining_capacities == smallest_valid_remaining_capacity)
            priorities[valid_bins_mask][bins_with_smallest_capacity_mask] += 0.5 
    
    return priorities
```
