```python
def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    suitable_bins_mask = bins_remain_cap >= item
    suitable_bins_remain_cap = bins_remain_cap[suitable_bins_mask]
    
    if suitable_bins_remain_cap.size == 0:
        return np.zeros_like(bins_remain_cap)

    residuals = suitable_bins_remain_cap - item
    
    e_x = np.exp(residuals)
    
    priorities = np.zeros_like(bins_remain_cap)
    priorities[suitable_bins_mask] = e_x / np.sum(e_x)
    
    return priorities
```
