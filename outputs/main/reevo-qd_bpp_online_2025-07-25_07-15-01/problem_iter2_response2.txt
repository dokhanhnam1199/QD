```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on how well they fit the item.
    If a bin has exactly enough capacity to hold the item, it gets the highest priority.
    Bins with less capacity than the item get zero priority.
    Bins with more capacity than the item get lower priority, with the priority decreasing as the excess capacity increases.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Bins with less capacity than the item get zero priority
    priority_score = np.where(bins_remain_cap < item, 0, 
                              # Priority is higher for bins that can just hold the item
                              np.where(bins_remain_cap == item, 1, 
                                       # For bins with more capacity, the priority decreases as the excess capacity increases
                                       1 / (1 + np.abs(bins_remain_cap - item))))
    return priority_score
```
