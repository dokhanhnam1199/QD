```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on how well the item fits into them.
    Bins that can hold the item with the least remaining space are prioritized.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining space if the item is added to each bin
    remaining_space = np.where(bins_remain_cap >= item, bins_remain_cap - item, np.inf)
    
    # Lower remaining space indicates a better fit, so use inverse remaining space as priority score
    priority_scores = np.where(remaining_space == np.inf, 0, 1 / (1 + remaining_space))
    
    return priority_scores
```
