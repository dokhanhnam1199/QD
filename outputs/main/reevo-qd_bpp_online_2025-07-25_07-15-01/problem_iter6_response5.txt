```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on a smooth and simple ratio,
    favoring bins that can efficiently hold the item while penalizing bins that
    are either too full or too empty.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Bins with less capacity than the item get zero priority
    # Priority is higher for bins that can just hold the item, using a smooth function
    priority_score = np.where(bins_remain_cap < item, 0, 
                              np.exp(-np.abs((bins_remain_cap - item) / item)))
    return priority_score
```
