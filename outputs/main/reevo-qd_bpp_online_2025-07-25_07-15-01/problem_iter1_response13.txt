```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins with the most remaining capacity,
    while preventing bins from being overfilled.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the remaining capacity after adding the item
    remaining_cap_after_addition = bins_remain_cap - item
    
    # Ensure the item can fit in the bin
    can_fit = remaining_cap_after_addition >= 0
    
    # Set priority to 0 for bins that cannot fit the item
    priority = np.where(can_fit, remaining_cap_after_addition, -np.inf)
    
    # Add a small random value to the priority to break ties randomly
    priority += np.random.uniform(0, 1e-9, size=priority.shape)
    
    return priority
```
