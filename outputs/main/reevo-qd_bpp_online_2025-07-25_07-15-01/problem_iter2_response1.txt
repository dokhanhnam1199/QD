```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough capacity to pack the item,
    minimizing waste of space. If no such bin exists, it prioritizes bins with the least remaining capacity,
    encouraging efficient use of space.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    capacity_diff = np.abs(bins_remain_cap - item)
    
    # Identify bins that have just enough capacity to pack the item
    exact_fit_bins = capacity_diff == 0
    
    # Prioritize exact fit bins
    priority = np.where(exact_fit_bins, 1.0, 0.0)
    
    # For non-exact fit bins, prioritize bins with the least remaining capacity
    priority[~exact_fit_bins] = 1.0 / (1.0 + capacity_diff[~exact_fit_bins])
    
    # Ensure exact fit bins have the highest priority
    priority[exact_fit_bins] = np.max(priority) + 1.0
    
    return priority
```
