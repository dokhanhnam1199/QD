```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins with the least remaining capacity that can still accommodate the item.
    The rationale behind this is to avoid creating new bins whenever possible and to distribute items evenly.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the number of bins that can accommodate the item
    can_fit = bins_remain_cap >= item
    
    # If no bins can accommodate the item, return zero priority for all bins
    if not np.any(can_fit):
        return np.zeros_like(bins_remain_cap)
    
    # Assign a higher priority to bins with less remaining capacity
    priority = np.where(can_fit, 1 / (bins_remain_cap + 1e-9), 0)
    
    return priority
```
