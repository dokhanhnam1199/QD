```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins with the least remaining capacity that can still accommodate the item.
    This encourages more efficient packing by avoiding leaving large amounts of empty space in bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Filter bins that can accommodate the item
    valid_bins = bins_remain_cap >= item
    
    # Assign a low priority to bins that cannot accommodate the item
    priority = np.where(valid_bins, 1 / (bins_remain_cap + 1), -1)
    
    # Bins with the same priority will be filtered by the argmax function, 
    # so we add a small value based on the index to ensure a deterministic order
    return priority + 1e-6 * np.arange(len(priority))
```
