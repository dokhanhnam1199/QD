```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function prioritizes bins based on the ratio of the remaining capacity and the item size.
    It simplifies and balances penalty functions to improve efficiency.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Bins with less capacity than the item get zero priority
    priority_score = np.where(bins_remain_cap < item, 0, 
                              # Balance ratio calculations and penalize size mismatches
                              (bins_remain_cap / (bins_remain_cap + item)) * 
                              (1 / (1 + np.abs((bins_remain_cap - item) / np.maximum(bins_remain_cap, item)))))
    # Simplify penalty for extremes with a single line of code
    priority_score *= np.clip(1 - np.abs((bins_remain_cap - item) / bins_remain_cap) / 2, 0.5, 1)
    return priority_score
```
