```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have enough capacity to hold the item
    and penalize bins that are too full or too empty. The priority score is calculated as the
    remaining capacity of the bin divided by the item size plus a bonus for nearly full bins.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Ensure that the item can fit in the bin
    can_fit = bins_remain_cap >= item
    
    # Calculate the priority score for each bin
    priority = np.where(can_fit, bins_remain_cap / item + np.where(bins_remain_cap - item < item / 2, 1, 0), 0)
    
    # Reward bins that are nearly full
    priority = np.where(can_fit, priority * (1 + (bins_remain_cap - item) / item), 0)
    
    return priority
```
