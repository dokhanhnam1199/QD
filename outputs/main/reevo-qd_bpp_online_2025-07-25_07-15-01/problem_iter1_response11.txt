```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to prioritize bins that have just enough capacity to accommodate the item.
    It favors bins with remaining capacity closest to the item size, while also considering the absolute remaining capacity.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the absolute difference between the item size and the remaining capacity of each bin
    diff = np.abs(bins_remain_cap - item)
    
    # Calculate the priority score for each bin, favoring bins with remaining capacity closest to the item size
    priority = 1 / (diff + 1)  # Adding 1 to avoid division by zero
    
    # To prevent extremely large priority values when the difference is very small,
    # we can use a bounded inverse function like the sigmoid function
    priority = 1 / (1 + np.exp(-(priority - 0.5)))
    
    return priority
```
