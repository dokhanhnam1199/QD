```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Returns priority with which we want to add item to each bin.

    This priority function is designed to favor bins that have just enough capacity to pack the item.
    The goal is to minimize the number of bins used by packing items as tightly as possible.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the difference between the remaining capacity of each bin and the item size
    capacity_diff = bins_remain_cap - item
    
    # Calculate a weight based on how close the remaining capacity is to the item size
    weights = np.maximum(1 - np.abs(capacity_diff) / (np.max(bins_remain_cap) + item), 0)
    
    # Calculate the priority scores using the weights
    priority_scores = weights * np.clip(bins_remain_cap - item, 0, None)
    
    return priority_scores
```
