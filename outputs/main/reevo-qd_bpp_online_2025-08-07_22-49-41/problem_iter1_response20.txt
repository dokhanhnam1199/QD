```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    First‑Fit priority for online Bin Packing.

    The function assigns the highest score to the earliest (lowest‑index)
    bin that can accommodate the item. Non‑feasible bins receive ``-inf`` so they
    are never selected. A tiny epsilon term based on the leftover capacity
    after placement is added to break ties while preserving the first‑fit
    ordering.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D array of remaining capacities of the current bins.

    Returns:
        A float array of the same shape as ``bins_remain_cap`` containing the
        priority for each bin.
    # The bin with the highest priority (argmax) will be chosen.
    """
    # Identify bins that can hold the item.
    can_fit = bins_remain_cap >= item

    # Primary ordering key: lower index → higher priority.
    idx = np.arange(bins_remain_cap.size, dtype=float)      # [0, 1, 2, ...]
    # Secondary (tie‑breaker) key: prefer bins that waste less space.
    eps = 1e-6                                              # small weight
    slack = bins_remain_cap - item                          # remaining capacity if placed

    # Combine both keys: negative index dominates, epsilon*slack breaks ties.
    base_priority = -idx + eps * slack

    # Assign -inf to bins that cannot accommodate the item.
    priorities = np.where(can_fit, base_priority, -np.inf)

    return priorities
```
