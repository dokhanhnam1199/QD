```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Priority function for online bin packing that prefers exact fits,
    then the smallest remaining slack.

    Parameters
    ----------
    item : float
        Size of the incoming item.
    bins_remain_cap : np.ndarray
        1‑D array of remaining capacities of the current bins.

    Returns
    -------
    np.ndarray
        Array of priority scores; higher scores are preferred.
    """
    # Ensure numeric array
    caps = np.asarray(bins_remain_cap, dtype=float)

    # Compute leftover capacity after placing the item
    leftover = caps - item

    # Initialise all priorities to -inf for infeasible bins
    priorities = np.full_like(caps, -np.inf, dtype=float)

    # Feasible bins are those with non‑negative leftover
    feasible = leftover >= 0

    # Priority: -leftover gives 0 for exact fits, negative for slack.
    # The highest priority (0) corresponds to exact fit, then the most negative
    # (i.e., the smallest slack) is chosen.
    priorities[feasible] = -leftover[feasible]

    return priorities
```
