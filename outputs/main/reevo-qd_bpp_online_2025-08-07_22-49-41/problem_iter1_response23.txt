```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    Almost Full Fit priority function for online Bin Packing.

    For each bin the priority is inversely proportional to the leftover
    capacity after adding the item.  Bins that will become almost full
    receive a higher priority.  Bins that cannot fit the item are given
    a priority of -inf and will never be selected.

    Args:
        item: Size of the item to be packed.
        bins_remain_cap: 1â€‘D array with remaining capacity of each bin.

    Returns:
        Array of priorities, same shape as bins_remain_cap.
    """
    # Default priorities for bins that cannot fit the item
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Identify bins that can accommodate the item
    fits = bins_remain_cap >= item
    if np.any(fits):
        # Remaining capacity after placement
        leftover = bins_remain_cap[fits] - item
        # Inverse of (1 + leftover) -> larger when leftover is smaller
        priorities[fits] = 1.0 / (1.0 + leftover)

    return priorities
```
