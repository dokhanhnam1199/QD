```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Random Fit priority for online Bin Packing.

    For each bin that can accommodate the incoming ``item`` we assign a
    random priority value drawn from a uniform distribution on [0, 1).
    Bins that cannot fit the item receive a priority of ``-np.inf`` so that
    they are never selected. The bin with the highest priority (i.e. the
    maximum random draw) is effectively chosen uniformly at random among all
    feasible bins, which is the hallmark of the Random Fit strategy.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D ``np.ndarray`` containing the remaining capacity
            of each existing bin.

    Returns:
        ``np.ndarray`` of the same shape as ``bins_remain_cap`` with the
        priority for each bin.
    """
    # Convert to a 1‑D float array (in case a different shape is passed)
    bins_remain_cap = np.asarray(bins_remain_cap, dtype=float).ravel()

    # Identify bins that have enough capacity for the item
    can_fit = bins_remain_cap >= item

    # Initialize all priorities to the lowest possible value
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)

    # Assign a uniform random priority to each feasible bin
    if np.any(can_fit):
        priorities[can_fit] = np.random.rand(can_fit.sum())

    return priorities
```
