```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Random Fit priority for online Bin Packing.

    Assigns a random priority to each bin that can accommodate `item`. Bins that
    cannot accommodate the item receive a very low priority (−∞) so they will never
    be chosen by a max‑priority selector.

    Args:
        item: Size of the incoming item.
        bins_remain_cap: 1‑D array of remaining capacities for each bin.

    Returns:
        An array of the same shape as ``bins_remain_cap`` containing priority scores.
    """
    # Identify bins that have enough capacity for the item
    feasible_mask = bins_remain_cap >= item

    # Draw a random priority for every bin (uniform in [0, 1))
    rand_priorities = np.random.rand(bins_remain_cap.shape[0])

    # Give infeasible bins a priority of −∞ so they are never selected
    low_priority = -np.inf
    priorities = np.where(feasible_mask, rand_priorities, low_priority)

    return priorities
```
