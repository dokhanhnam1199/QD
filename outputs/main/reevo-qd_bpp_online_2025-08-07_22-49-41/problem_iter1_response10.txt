```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """
    First Fit priority: prefers the earliest bin that can accommodate the item.
    Each feasible bin receives a priority equal to the negative of its index,
    so that lower indices have higher priority values.  Non‑feasible bins
    are assigned -np.inf to ensure they are never chosen.
    
    Args:
        item: Size of the item to pack.
        bins_remain_cap: 1‑D array of remaining capacities for each bin.
    
    Returns:
        An array of the same shape as bins_remain_cap containing the
        priority scores for each bin.  The bin with the highest score will
        be selected.
    """
    n_bins = bins_remain_cap.size
    indices = np.arange(n_bins, dtype=float)
    
    # Mask for bins that can fit the item
    feasible = bins_remain_cap >= item
    
    # Priorities: negative index for feasible bins, -inf otherwise
    priorities = np.full_like(bins_remain_cap, -np.inf, dtype=float)
    priorities[feasible] = -indices[feasible]
    
    return priorities
```
