def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins by balancing remaining capacity, fullness, and a reward for filling bins close to full.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fullness = 1 - (cap / 100)
      reward = 0
      if waste < 20:
        reward = (20 - waste) / 200 
      priority_score = fullness + (1 / (waste + 1)) + reward
      priority.append(priority_score)
    else:
      priority.append(-1)
  return priority
