def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on how well the item fills the remaining capacity, giving higher scores to bins that are filled closest to a target fill ratio after the item is placed.}"""
    priority = []
    target_fill_ratio = 0.8  # Aim for 80% filled bins
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio_after_item = (cap - item) / cap if cap > 0 else 0 #avoid division by zero
            priority.append(1 - abs(fill_ratio_after_item - (1 - target_fill_ratio)))
        else:
            priority.append(-1) # Invalid bin
    return priority
