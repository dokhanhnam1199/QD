def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the remaining capacity, prioritizing bins that can accommodate the item while minimizing the absolute waste and preferring bins that are already relatively full.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fullness_ratio = (100 - cap) / 100
      priority_score = fullness_ratio / (waste + 1)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
