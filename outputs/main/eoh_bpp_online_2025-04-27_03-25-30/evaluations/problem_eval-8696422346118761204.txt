def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how closely the item's size matches the bin's remaining capacity, favoring bins that can be filled almost completely by the item.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      priority = 1.0 - abs(cap - item)  # Prioritize bins where item fills most of the bin
      priorities.append(priority)
    else:
      priorities.append(-1)  # Assign low priority to bins that cannot fit the item
  return priority
