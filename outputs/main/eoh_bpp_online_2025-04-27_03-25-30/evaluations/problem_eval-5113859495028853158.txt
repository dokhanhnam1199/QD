def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the percentage of remaining capacity the item would fill, penalizing bins that would become too full or leave excessive space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_percentage = (item / 100)
      waste_percentage = (cap - item) / 100
      overfill_penalty = max(0, (1 - (cap - item) / cap)) # Penalize near full
      priority_score = fill_percentage * (1 - waste_percentage) * (1 - overfill_penalty)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
