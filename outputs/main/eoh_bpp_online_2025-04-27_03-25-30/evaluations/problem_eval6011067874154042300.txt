def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority to each bin based on how close the remaining capacity is to a target waste level, using a Gaussian-like function to favor bins with waste near the target.}"""
  priority = []
  target_waste = item * 0.2  # Aim for 20% waste
  std_dev = item * 0.1  # Standard deviation for the Gaussian-like function

  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      priority_score = exp(-((waste - target_waste)**2) / (2 * (std_dev**2))) # Gaussian-like priority based on waste
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
