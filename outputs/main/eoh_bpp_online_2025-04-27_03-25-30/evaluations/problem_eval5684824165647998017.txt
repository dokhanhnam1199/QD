def priority_v2(item, bins_remain_cap):
  """{This algorithm assigns a priority to each bin based on a modified first-fit decreasing approach, where bins are conceptually sorted by remaining capacity and a penalty is applied for small remaining capacities after placement.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_after_fit = cap - item
      priority_score = cap - (1/(remaining_after_fit+0.0001)) # Invert the remaning capacity and subtract from current capacity. The 0.0001 to avoid dividing by zero
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
