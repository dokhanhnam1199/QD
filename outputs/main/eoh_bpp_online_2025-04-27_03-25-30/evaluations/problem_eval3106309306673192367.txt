def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on a combination of remaining capacity and wasted space if the item is placed in the bin, favoring bins with sufficient capacity and minimizing wasted space.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority_score = cap + (1 / (wasted_space + 0.00001))
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
