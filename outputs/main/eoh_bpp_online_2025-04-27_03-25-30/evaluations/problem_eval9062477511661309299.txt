def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by considering the wasted space, the fill ratio, and a bonus for bins that are neither too empty nor too full.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            fill_ratio = item / 100
            
            # Bonus for bins that are neither too empty nor too full
            sweet_spot_bonus = 0
            if waste > 10 and cap < 90:
                sweet_spot_bonus = 0.1 

            priority_score = (fill_ratio / (waste + 0.0001)) + sweet_spot_bonus
        else:
            priority_score = -1
        priority.append(priority_score)
    return priority
