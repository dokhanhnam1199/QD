def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, favoring bins where the item fills a significant portion of the remaining space without overfilling.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_ratio = float(item) / cap
      # Prioritize bins where the item fills a significant portion of the bin (e.g., 60-90%)
      if 0.6 <= fill_ratio <= 0.9:
        priority = fill_ratio
      else:
        priority = 0.1  # Lower priority if fill ratio is outside the desired range
      priorities.append(priority)
    else:
      priorities.append(-1)  # Assign low priority to bins that cannot fit the item
  return priority
