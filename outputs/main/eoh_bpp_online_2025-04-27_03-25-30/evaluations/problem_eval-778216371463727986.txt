def priority_v3(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on the wasted space if the item is placed in it, rewarding bins with moderate wasted space and heavily penalizing those with insufficient space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            if waste > 15:
                priority.append(0.2)
            elif waste < 2:
                priority.append(-2)
            else:
                priority.append(1 / (abs(waste - 7.5) + 1))
        else:
            priority.append(-100)
    return priority
