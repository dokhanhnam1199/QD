def priority_v3(item, bins_remain_cap):
    """{This algorithm prioritizes bins that can accommodate the item with minimal waste, using a linear penalty for waste and a strong penalty for bins that are too small.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append(1 - (waste / (2*item)))  # Linear penalty for waste, scaled by item size
        else:
            priority.append(-10)  # Strong penalty for bins that are too small
    return priority
