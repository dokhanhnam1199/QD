def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on how well the item fits, favoring bins with remaining capacity close to the item size and penalizing those with significantly more or less capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            if waste > item * 0.5:  # Penalize excessive waste
                priority.append(0.2)
            elif waste < item * 0.1:  # Penalize very little waste
                priority.append(0.6)
            else:
                priority.append(1 / (abs(waste - item * 0.2) + 1)) # Closer waste to 20% of item, higher priority
        else:
            priority.append(-1)
    return priority
