def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the remaining capacity, prioritizing bins that can accommodate the item while maximizing the fill ratio relative to the bin's original capacity and penalizing bins with very small remaining capacity after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fill_ratio = (100-cap+item)/100 
      small_waste_penalty = 1 / (waste + 0.0001) if waste < 10 else 1
      priority_score = fill_ratio * small_waste_penalty
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
