def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of remaining capacity and a penalty for bins that are too empty.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            # Basic remaining capacity priority, encouraging fuller bins
            score = cap - item 
            # Penalty for bins that would become excessively empty after packing. This encourages filling more bins
            if cap - item > 0.75:  # e.g., 75% empty
                score -= 0.5
            priority.append(score)
        else:
            priority.append(-1000)  # Assign a very low priority if the item doesn't fit

    return priority
