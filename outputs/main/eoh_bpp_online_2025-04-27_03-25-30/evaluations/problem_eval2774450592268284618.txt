def priority_v2(item, bins_remain_cap):
    """
    {This algorithm calculates a priority score for each bin based on the remaining capacity and item size, favoring bins that can accommodate the item with minimal waste and penalizing bins that are too full or too empty.}
    """
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            priority.append(1 / (waste + 0.00001))  # Prioritize minimal waste
        else:
            priority.append(-1000)  # Penalize bins that are too full
    return priority
