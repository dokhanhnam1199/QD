def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on how close the item's size is to a target fill level, penalizing bins far from that level.}"""
    priority = []
    target_fill = 0.75  # Target fill ratio (e.g., 75%)

    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / (cap + item) if (cap + item) > 0 else 0  # Calculate fill ratio if item is placed in the bin
            diff = abs(fill_ratio - target_fill)  # Calculate the difference from the target

            priority.append(1 / (diff + 0.01))  # Assign priority inversely proportional to the difference, add small number to avoid division by zero
        else:
            priority.append(-1)
    return priority
