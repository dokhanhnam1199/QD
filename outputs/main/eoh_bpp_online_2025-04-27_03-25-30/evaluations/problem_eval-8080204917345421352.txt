def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on how well the item fits, rewarding bins with remaining capacity slightly larger than the item size and severely penalizing those with significantly more or less capacity.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            if waste > item * 0.3:  # Heavily Penalize excessive waste
                priority.append(0.1)
            elif waste < 0:  # Penalize negative waste
                priority.append(-1)
            else:
                priority.append(1 / (abs(waste - item * 0.1) + 0.5)) # Closer waste to 10% of item, higher priority
        else:
            priority.append(-1)
    return priority
