def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a combination of remaining capacity fit and the absolute fill level after adding the item, rewarding bins that are already nearly full and can still accommodate the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_level = 100 - cap + item
      priority_score = (fill_level / 100) if fill_level <= 100 else -1
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
