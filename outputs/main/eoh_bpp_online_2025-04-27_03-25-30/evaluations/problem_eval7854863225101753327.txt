def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates the priority of each bin based on a weighted combination of remaining capacity, wasted space, and a penalty for exceeding bin capacity, prioritizing bins that closely match the item size while penalizing bins that are too small.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      wasted_space = cap - item
      priority_score = (2 * item) - wasted_space #Prioritize bins that fit the item well and minimize wasted space.
    else:
      priority_score = - (item - cap)**2 # Penalize bins that are too small.
    priority.append(priority_score)
  return priority
