def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a combination of remaining capacity and the square of the wasted space if the item is placed in that bin, penalizing both small and large amounts of wasted space.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_cap = cap - item
      priority = cap - (remaining_cap * remaining_cap) # Reward high remaining cap, penalize squared wasted space
      priorities.append(priority)
    else:
      priorities.append(-1)
  return priority
