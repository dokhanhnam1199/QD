def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the "golden ratio" of remaining capacity to item size, rewarding bins where the remaining capacity approximates the item size scaled by the golden ratio (approximately 1.618).}"""
    priority = []
    golden_ratio = 1.618
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            expected_cap = item * golden_ratio
            diff = abs(cap - expected_cap)
            priority_score = 1 / (diff + 1)  # Higher priority for bins closer to the golden ratio scaled capacity
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
