def priority_v3(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on remaining capacity, favoring bins where the item fills a significant portion of the remaining space, with a bonus for nearly filling the bin completely.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fill_percentage = (item / cap)
      
      # Bonus for nearly filling the bin
      near_full_bonus = 0
      if waste <= 10:  # Arbitrary threshold for "nearly full"
        near_full_bonus = (10 - waste) / 10

      priority_score = fill_percentage + near_full_bonus

    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
