def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the remaining capacity, favoring bins that can accommodate the item with minimal waste and scaling the score inversely with the square of the waste.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      if waste == 0:
        priority_score = 1000 # Maximum priority if it fits perfectly
      else:
        priority_score = 1 / (waste * waste + 0.0001)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
