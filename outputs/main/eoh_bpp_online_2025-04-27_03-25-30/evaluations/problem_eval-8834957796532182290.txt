def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on how close the remaining capacity is to half the bin capacity after packing the item, rewarding bins that result in a remaining capacity near half-full.}"""
    priority = []
    bin_capacity = 1  # Assume bin capacity is 1. Adjust if different.
    for cap in bins_remain_cap:
        if cap >= item:
            new_cap = cap - item
            diff_from_half = abs(new_cap - (bin_capacity / 2))
            priority.append(-diff_from_half) # Lower difference from half is better, so negative.
        else:
            priority.append(-1000) # Assign a very low priority if the item doesn't fit
    return priority
