def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on how close their remaining capacity is to a predefined target fill level after adding the item, favoring bins that achieve a balanced fill.}"""
  priority = []
  target_fill = 0.75 # Adjust this value to control bin fill level, 0.75 means 75% full
  bin_capacity = 1.0 #Assuming bins have capacity 1
  for cap in bins_remain_cap:
    if cap >= item:
      new_cap = cap - item
      ideal_remaining = bin_capacity * (1 - target_fill) 
      priority_score = -abs(new_cap - ideal_remaining) 
    else:
      priority_score = -float('inf')
    priority.append(priority_score)
  return priority
