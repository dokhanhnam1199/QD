def priority_v2(item, bins_remain_cap):
  """{This algorithm calculates a priority score for each bin based on the remaining capacity, favoring bins that can accommodate the item, penalizing bins with very little remaining capacity, and rewarding bins that would be filled to a high percentage after packing the item.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      waste = cap - item
      fill_percentage = (item / 100)
      priority_score = fill_percentage / (waste + 1) 
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
