def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority based on how well the item's size matches the bin's remaining capacity, penalizing bins that are significantly larger or smaller than the item.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            diff = abs(cap - item)
            priority_score = 1.0 / (diff + 1e-9)  # Inverse of difference, smaller diff is better
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
