def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority score to each bin based on how close the remaining capacity is to a target capacity determined by the item size and a scaling factor.}"""
    priority = []
    scale_factor = 0.8  # Adjust this factor as needed.
    target_capacity = item / scale_factor

    for cap in bins_remain_cap:
        if cap >= item:
            priority_score = -abs(cap - target_capacity) # penalize difference between current capacity and the target capacity
        else:
            priority_score = -float('inf')
        priority.append(priority_score)
    return priority
