def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins by balancing the fill percentage achieved after packing the item with a bonus for bins that are already reasonably full before packing.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      fill_percentage_after = (1 - (cap - item))
      initial_fill_percentage = (1 - cap)
      # Give a bonus to bins that were already somewhat full
      bonus = initial_fill_percentage 
      priority_score = fill_percentage_after + bonus
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
