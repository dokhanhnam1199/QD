def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on a score that balances the percentage of bin utilization after packing the item with a bonus for packing the item into a bin whose remaining capacity is closest to the item's size.}"""
  priority = []
  for cap in bins_remain_cap:
    if cap >= item:
      utilization = item / 100
      size_difference = abs(cap - item)
      priority_score = utilization / (size_difference + 0.0001)
    else:
      priority_score = -1
    priority.append(priority_score)
  return priority
