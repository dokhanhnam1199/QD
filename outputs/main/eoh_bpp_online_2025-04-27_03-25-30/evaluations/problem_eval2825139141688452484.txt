def priority_v3(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the absolute difference between the remaining capacity after placing the item and a target remaining capacity, favoring bins closer to the target.}"""
    priority = []
    target_remaining_capacity = 20  # Aim for remaining capacity of 20
    for cap in bins_remain_cap:
        if cap >= item:
            remaining_after_item = cap - item
            priority.append(1 / (1 + abs(remaining_after_item - target_remaining_capacity)))
        else:
            priority.append(-1) # Invalid bin
    return priority
