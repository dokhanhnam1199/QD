def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins by finding the bin with the smallest remaining capacity that can still accommodate the item, rewarding bins that are nearly full after packing, while avoiding bins that would be left with very little space.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            remaining_after_pack = cap - item
            if remaining_after_pack < 5:  # Avoid bins with too little space left
                priority.append(-1)
            else:
                priority.append(1 / (cap + 0.00001))  # Prioritize bins with smaller remaining capacity
        else:
            priority.append(-1)
    return priority
