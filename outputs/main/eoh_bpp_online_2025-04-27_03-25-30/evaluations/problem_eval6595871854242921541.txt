def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the ratio of item size to remaining capacity, favoring bins where the item fills a substantial portion of the available space, but not all of it.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            # Give higher priority to bins where the item fills a significant portion
            # but not all of the remaining capacity. Avoid division by zero with a small constant.
            priority.append(1 / (abs(fill_ratio - 0.75) + 0.0001))
        else:
            priority.append(-1)  # Invalid bin
    return priority
