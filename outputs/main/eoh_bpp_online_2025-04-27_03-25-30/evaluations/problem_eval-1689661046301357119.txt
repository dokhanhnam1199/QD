def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combination of remaining capacity and a reward for bins that are almost full.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            # Basic remaining capacity priority, encouraging fuller bins
            score = cap - item

            # Reward for bins that would become almost full after packing.
            if (cap - item) <= 0.25:  # e.g., 25% empty
                score += 0.75  # Boost the score

            priority.append(score)
        else:
            priority.append(-1000)  # Assign a very low priority if the item doesn't fit

    return priority
