def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on how well the item fills the bin relative to the bin's capacity, favoring bins that are filled to a high percentage without overflowing.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            fill_ratio = item / cap
            if fill_ratio > 0.95:
                priority.append(1.0) # Highly prioritize almost-full bins
            elif fill_ratio < 0.5:
                priority.append(fill_ratio * 0.5)  #Lower prio for small fills
            else:
                priority.append(fill_ratio)
        else:
            priority.append(-1)
    return priority
