def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns priority based on the bin's proximity to being half-full after placing the item, favoring bins that result in a capacity closest to 50 after the item is added.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            new_cap = cap - item
            proximity_to_half = abs(new_cap - 50) # Assuming bin capacity is 100
            priority_score = 100 - proximity_to_half  # Higher score for bins closer to 50
            priority.append(priority_score)
        else:
            priority.append(-1)
    return priority
