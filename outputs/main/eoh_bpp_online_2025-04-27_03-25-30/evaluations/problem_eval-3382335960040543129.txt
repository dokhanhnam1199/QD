def priority_v3(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on the wasted space if the item is placed in it, rewarding bins with wasted space close to a target waste and penalizing bins with insufficient space.}"""
    priority = []
    target_waste = 10
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            penalty = abs(waste - target_waste)
            priority.append(max(0, 1 - (penalty / target_waste)))
        else:
            priority.append(-1)
    return priority
