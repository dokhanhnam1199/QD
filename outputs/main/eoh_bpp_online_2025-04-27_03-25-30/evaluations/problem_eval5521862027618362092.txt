def priority_v2(item, bins_remain_cap):
  """{This algorithm prioritizes bins based on the remaining capacity after placing the item, favoring bins that are neither too full nor too empty.}"""
  priorities = []
  for cap in bins_remain_cap:
    if cap >= item:
      remaining_cap = cap - item
      # Prioritize bins where the remaining capacity is a moderate fraction of the bin size (e.g., around 50%)
      priority = 1.0 / (abs(remaining_cap - 0.5 * 1) + 0.0001)  # 1 is the bin capacity (normalized)
      priorities.append(priority)
    else:
      priorities.append(-1)  # Assign low priority to bins that cannot fit the item
  return priority
