def priority_v2(item, bins_remain_cap):
    """{This algorithm assigns a priority to each bin based on the percentage of wasted space if the item is placed in it, penalizing bins where the item would fill a small portion or leave a large portion unused.}"""
    priority = []
    bin_size = 100  # Assuming a bin size of 100.  Adjust as needed.
    for cap in bins_remain_cap:
        if cap >= item:
            waste = cap - item
            waste_percentage = (waste / bin_size) * 100
            item_percentage = (item / bin_size) * 100
            if item_percentage < 20:
                priority.append(-1) # Item too small for the bin.
            elif waste_percentage > 50: # Too much waste
                priority.append(0.2)
            else:
                priority.append(1 / (abs(waste_percentage - item_percentage) + 1))  # Prioritize bins where item size is close to waste.
        else:
            priority.append(-1)
    return priority
