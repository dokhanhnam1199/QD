def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on the absolute difference between the item size and the remaining capacity of each bin, selecting the bin with the smallest absolute difference if the item fits, otherwise assigning a negative priority.}"""
    priority = []
    for cap in bins_remain_cap:
        if cap >= item:
            priority_score = -abs(cap - item) 
        else:
            priority_score = -1000 # Assign a very low priority if the item doesn't fit
        priority.append(priority_score)
    return priority
