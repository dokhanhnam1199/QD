def priority_v2(item, bins_remain_cap):
    """{This algorithm prioritizes bins based on a combined score considering remaining capacity, a waste factor, and a bin utilization bonus.}"""
    priority = []
    bin_capacity = 100

    for cap in bins_remain_cap:
        if cap >= item:
            remaining_ratio = cap / bin_capacity
            waste = cap - item

            waste_factor = 0
            if waste > bin_capacity / 4:
                waste_factor = 0.5
            else:
                waste_factor = waste / (bin_capacity / 4) * 0.5

            utilization_bonus = 0
            if (bin_capacity - cap + item) >= bin_capacity * 0.9:
                utilization_bonus = 0.3
            elif (bin_capacity - cap + item) >= bin_capacity * 0.7:
                utilization_bonus = 0.1

            score = (1 - remaining_ratio) * 0.4 + (1 - waste_factor) * 0.3 + utilization_bonus * 0.3

            priority.append(score)
        else:
            priority.append(-1)
    return priority
