```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin, using Sigmoid Fit Score.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin. Fit score is how well the item fits in the bin.
    fit_scores = item / bins_remain_cap
    fit_scores[bins_remain_cap < item] = np.inf  # Penalize bins that are too small
    
    # Apply sigmoid function to the fit scores to get priority scores.
    # Using a scaling factor of 1.0 and a shift of 0.0
    priorities = 1.0 / (1.0 + np.exp(-1.0 * (fit_scores - 0.5)))
    
    return priorities
```
