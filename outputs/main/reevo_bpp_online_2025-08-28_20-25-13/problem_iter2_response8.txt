```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Returns:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)

    # Prioritize bins where the item fits exactly
    exact_fit_bins = (bins_remain_cap == item)
    priorities[exact_fit_bins] = 1.0

    # If no exact fit, prioritize bins where the item fits with minimum waste
    if not np.any(exact_fit_bins):
        fitting_bins = (bins_remain_cap >= item)
        if np.any(fitting_bins):
            waste = bins_remain_cap[fitting_bins] - item
            priorities[fitting_bins] = 1.0 / (waste + 1e-6)  # Adding a small value to avoid division by zero

    return priorities
```
