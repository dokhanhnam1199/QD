```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    diff = bins_remain_cap - item
    priorities = np.zeros_like(bins_remain_cap)

    # Prioritize bins where the item fits
    fit_indices = diff >= 0
    priorities[fit_indices] = 1.0 / (diff[fit_indices] + 1e-6)

    # Boost priority for nearly full bins
    nearly_full_boost = 0.1  # Adjust this value as needed
    nearly_full_indices = (bins_remain_cap > item * 0.9) & fit_indices
    priorities[nearly_full_indices] += nearly_full_boost

    return priorities
```
