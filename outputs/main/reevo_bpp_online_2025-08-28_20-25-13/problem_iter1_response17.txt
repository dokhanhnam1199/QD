```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Random Fit.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    eligible_bins = bins_remain_cap >= item
    num_eligible_bins = np.sum(eligible_bins)

    if num_eligible_bins > 0:
        # Assign a random priority to each eligible bin.  Higher is better.
        random_priorities = np.random.rand(num_eligible_bins)
        bin_index = 0
        for i in range(len(bins_remain_cap)):
            if eligible_bins[i]:
                priorities[i] = random_priorities[bin_index]
                bin_index += 1
    return priorities
```
