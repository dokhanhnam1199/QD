```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    diff = bins_remain_cap - item
    priorities = np.zeros_like(bins_remain_cap)

    # Prioritize exact fits
    exact_fit = (diff == 0) & (diff >= 0)
    priorities[exact_fit] = 2.0

    # Prioritize bins where item fits, with preference for nearly full bins
    possible_bins = diff >= 0
    remaining_space = np.where(possible_bins, diff, np.inf)
    priorities[possible_bins] = 1.0 / (remaining_space[possible_bins] + 1e-6)

    return priorities
```
