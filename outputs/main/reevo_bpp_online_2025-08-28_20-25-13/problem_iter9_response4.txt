```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    diff = bins_remain_cap - item
    priorities = np.zeros_like(bins_remain_cap)
    
    # Prioritize bins where the item fits exactly
    exact_fit = (diff == 0)
    priorities[exact_fit] = 1.0

    # Prioritize bins with smallest remaining capacity after adding the item
    remaining_space = np.where(diff > 0, diff, np.inf)
    priorities = np.where(exact_fit, priorities, 1.0 / remaining_space)
    
    return priorities
```
