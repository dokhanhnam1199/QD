```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    diff = bins_remain_cap - item
    priorities = np.zeros_like(bins_remain_cap)

    # Prioritize bins where the item fits exactly or leaves a small remainder.
    fit_indices = diff >= 0
    priorities[fit_indices] = diff[fit_indices]

    # Add a small bonus for bins that are nearly full (small remaining capacity).
    nearly_full_bonus = 1.0 / (bins_remain_cap + 1e-6)
    priorities += nearly_full_bonus

    return priorities
```
