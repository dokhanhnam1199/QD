```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin using Inverse Distance (Proximity Fit) with a small addition to avoid zero division and penalizing bins that are too small.

    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.

    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    diff = bins_remain_cap - item
    
    # Penalize bins where the item doesn't fit at all
    diff = np.where(diff < 0, -1.0, diff)

    # Add a small value to avoid zero division and ensure bins with exact fit get high priority
    priorities = 1.0 / (np.abs(diff) + 1e-6)

    return priorities
```
