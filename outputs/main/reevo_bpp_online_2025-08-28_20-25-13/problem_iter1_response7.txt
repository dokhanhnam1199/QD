```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin, using Random Fit heuristic.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    valid_bins = bins_remain_cap >= item
    if np.sum(valid_bins) == 0:
        return priorities

    # Assign priority based on how well the item fits (remaining capacity - item size)
    # and add a small random noise to introduce randomness
    fit = bins_remain_cap[valid_bins] - item
    priorities[valid_bins] = fit
    
    # Add random noise to the priority
    priorities[valid_bins] += np.random.rand(np.sum(valid_bins)) * 0.1
    
    return priorities
```
