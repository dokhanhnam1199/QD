```python
import numpy as np

def priority_v1(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    priorities = np.zeros_like(bins_remain_cap)
    return priorities

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Returns priority with which we want to add item to each bin, using Sigmoid Fit Score.
    Args:
        item: Size of item to be added to the bin.
        bins_remain_cap: Array of capacities for each bin.
    Return:
        Array of same size as bins_remain_cap with priority score of each bin.
    """
    # Calculate the fit score for each bin using a sigmoid function
    # Fit score represents how well the item fits into the remaining capacity of the bin
    # Sigmoid function squashes the fit score between 0 and 1, where 1 represents a perfect fit
    fit_scores = 1 / (1 + np.exp(-((bins_remain_cap - item) / item)))

    # Add a small constant to avoid division by zero and stabilize the scoring
    priorities = fit_scores

    return priorities
```
