```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritizes bins based on waste, fill level and item size."""
    epsilon = 1e-9

    # Waste Minimization
    waste = bins_remain_cap - item
    waste_priority = np.where(waste >= 0, 1 / (waste + epsilon), 0)

    # Target Fill (Half-full)
    target_fill = np.max(bins_remain_cap) / 2
    fill_distances = np.abs(bins_remain_cap - target_fill)
    fill_priority = 1 / (fill_distances + epsilon)

    # Item size vs. remaining capacity
    size_ratio = item / np.max(bins_remain_cap)
    size_priority = np.exp(-np.abs(bins_remain_cap - item) / np.max(bins_remain_cap))

    # Combined priority
    priorities = 0.4 * waste_priority + 0.3 * fill_priority + 0.3 * size_priority
    priorities[bins_remain_cap < item] = 0

    return priorities
```
