```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Assign bin priority based on waste and fill level."""
    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    for i, cap in enumerate(bins_remain_cap):
        if cap >= item:
            remaining = cap - item
            priorities[i] = 1 / (remaining + 0.00001) # Minimize waste

            fullness = 1 - remaining / cap
            if fullness > 0.95:
                priorities[i] *= 0.5 # Penalize near-full bins
        else:
            priorities[i] = -1e9 #Very low priority if the bin can't fit the item
    return priorities
```
