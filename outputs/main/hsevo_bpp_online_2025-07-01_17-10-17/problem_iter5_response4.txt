```python
import numpy as np

def priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:
    """Prioritize bins based on waste minimization and target fill level."""

    priorities = np.zeros_like(bins_remain_cap, dtype=float)
    possible_bins = bins_remain_cap >= item

    if not np.any(possible_bins):
        return priorities

    waste = bins_remain_cap - item
    priorities[possible_bins] = 1.0 / (waste[possible_bins] + 0.001)

    # Target fill level: aiming for bins to be around 75% full.
    target_fill = 0.75 * np.max(bins_remain_cap)
    fill_diff = np.abs((bins_remain_cap[possible_bins] - item) - target_fill)
    priorities[possible_bins] += np.exp(-0.5 * (fill_diff/np.max(bins_remain_cap))**2)

    # Penalize almost full
    almost_full = bins_remain_cap > 0.9 * np.max(bins_remain_cap)
    priorities[almost_full] *= 0.9

    return priorities
```
