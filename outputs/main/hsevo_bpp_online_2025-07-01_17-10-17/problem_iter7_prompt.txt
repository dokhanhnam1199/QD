{"system": "You are an expert in code review. Your task extract all threshold, weight or hardcode variable of the function make it become default parameters.", "user": "[code]\nimport numpy as np\n\ndef priority_v2(item: float, bins_remain_cap: np.ndarray) -> np.ndarray:\n    \"\"\"Prioritize bins based on waste minimization and target fill level.\"\"\"\n\n    priorities = np.zeros_like(bins_remain_cap, dtype=float)\n    possible_bins = bins_remain_cap >= item\n\n    if not np.any(possible_bins):\n        return priorities\n\n    waste = bins_remain_cap - item\n    priorities[possible_bins] = 1.0 / (waste[possible_bins] + 0.001)\n\n    # Target fill level: aiming for bins to be around 75% full.\n    target_fill = 0.75 * np.max(bins_remain_cap)\n    fill_diff = np.abs((bins_remain_cap[possible_bins] - item) - target_fill)\n    priorities[possible_bins] += np.exp(-0.5 * (fill_diff/np.max(bins_remain_cap))**2)\n\n    # Penalize almost full\n    almost_full = bins_remain_cap > 0.9 * np.max(bins_remain_cap)\n    priorities[almost_full] *= 0.9\n\n    return priorities\n\nNow extract all threshold, weight or hardcode variable of the function make it become default parameters and give me a 'parameter_ranges' dictionary representation. Key of dict is name of variable. Value of key is a tuple in Python MUST include 2 float elements, first element is begin value, second element is end value corresponding with parameter.\n\n- Output code only and enclose your code with Python code block: ```python ... ```.\n- Output 'parameter_ranges' dictionary only and enclose your code with other Python code block: ```python ... ```."}